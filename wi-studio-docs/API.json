{
	"id": 0,
	"name": "Web Integrator Studio (wi-studio) SDK ",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 502,
			"name": "\"app/contrib/wi-contrib\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/app/contrib/wi-contrib.ts",
			"children": [
				{
					"id": 520,
					"name": "AbstractActionProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Action Provider"
					},
					"children": [
						{
							"id": 521,
							"name": "handleAction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 522,
									"name": "handleAction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "abstract handle action function"
									},
									"parameters": [
										{
											"id": 523,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 364
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribActionProvider.handleAction",
										"id": 225
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 93,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribActionProvider.handleAction",
								"id": 224
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								521
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 88,
							"character": 44
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribActionProvider",
							"id": 223
						}
					]
				},
				{
					"id": 510,
					"name": "AbstractContribFieldProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract contrib field provider"
					},
					"children": [
						{
							"id": 511,
							"name": "getFieldValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 512,
									"name": "getFieldValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "getFieldValue"
									},
									"parameters": [
										{
											"id": 513,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 364
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribFieldProvider.getFieldValue",
										"id": 221
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 62,
									"character": 26
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribFieldProvider.getFieldValue",
								"id": 220
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								511
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 51,
							"character": 50
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribFieldProvider",
							"id": 219
						}
					]
				},
				{
					"id": 503,
					"name": "AbstractContribValidationProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Validation Provider"
					},
					"children": [
						{
							"id": 504,
							"name": "validate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 505,
									"name": "validate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "validate"
									},
									"parameters": [
										{
											"id": 506,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 364
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 67
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 67
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribValidationProvider.validate",
										"id": 217
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 37,
									"character": 21
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribValidationProvider.validate",
								"id": 216
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								504
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 26,
							"character": 55
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribValidationProvider",
							"id": 215
						}
					]
				},
				{
					"id": 528,
					"name": "WiServiceContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The [[WiServiceContribution]] being the abstract base class is extended  by a contribution provider handler [[WiServiceHandlerContribution]]\nor a [[WiServiceProviderContribution]]. The user can choose either implmentation model to suit their needs.",
						"text": "## [[WiServiceHandlerContribution]]\nThe [[WiServiceHandlerContribution]] represents one way of providing contribution where the contribution will have its own single implementation\nof [[WiServiceHandlerContribution]] and the @[[Injectable]] class decorator will tell the loader that it is loadable by Angular and the single class\nwill provide handler functions for value, validation and action. The @WiContrib({}) deoorator with null metadata indicates it is a one abstract class\n[[WiServiceHandlerContribution]] implmentation.\n\n ### Example [[WiServiceHandlerContribution]]  Contribution Handler Typescript file\n ```\n import {Injectable, Injector} from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import {ValidationResult} from \"../../../../common/models/validation\";\n import {IActivityContribution, ActionResult, IActionResult} from \"../../../../common/models/contrib\";\n import {WiContrib, WiServiceHandlerContribution} from \"../../wi-contrib\";\n import {Http} from \"@angular/http\";\n import {IValidationResult} from \"../../../../common/models/validation\";\n\n @WiContrib({})\n @Injectable()\n export class RestContributionHandler extends WiServiceHandlerContribution {\n     constructor(injector: Injector, http: Http) {\n      super(injector, http);\n  }\n\n  value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      return Observable.create(observer => {\n          observer.next(\"\");\n     });\n  }\n\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n      return Observable.create(observer => {\n           let vresult: IValidationResult = ValidationResult.newValidationResult();\n           observer.next(vresult);\n       });\n  }\n\n   action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n      return Observable.create(observer => {\n           let aresult: IActionResult = ActionResult.newActionResult();\n           observer.next(aresult);\n       });\n   }\n }\n ```\n ### Example [[WiServiceHandlerContribution]]  Contribution Module Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./rest-contrib\";\n import {WiServiceContribution} from \"../../wi-contrib\";\n @NgModule({\n   imports: [CommonModule,HttpModule],\n   exports: [],\n   declarations: [],\n   entryComponents: [],\n   providers: [{\n     provide: WiServiceContribution,\n     useClass: RestContributionHandler\n   }],\n   bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n## [[WiServiceProviderContribution]]\nThe [[WiServiceProviderContribution]] represents another way of providing contribution\nwhere each field will have its own [[AbstractContribFieldProvider]],[[AbstractContribValidationProvider]],[[AbstractActionProvider]] and the [[WiServiceProviderContribution]]\nimplementation with @[[WiContrib]] decorator will tell the loader that the module is of type [[WiServiceProviderContribution]]. Each field value,validation\nand action provider is also a Angular injectable Service and must be decorated by @Injectable(). The contribution service is also a Angular injectable service\nas decorated with @Injectable() and also a Contribution Service with @WiContrib(metadata) deoorator.\n\n ### Example [[WiServiceProviderContribution]]  Contribution Service Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./timer-contrib\";\n import {WiServiceContribution} from \"wi-contrib\";\n @NgModule({\n imports: [CommonModule,HttpModule],\n exports: [],\n declarations: [],\n entryComponents: [],\n providers: [\n  {\n    provide: WiServiceContribution,\n    useClass: TimerContribService\n  },\n  {\n    provide: Field1Provider,\n    useClass: Field1Provider\n  },\n  {\n    provide: Field1ValidationProvider,\n    useClass: Field1ValidationProvider\n  }],\n bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n ### Example [[WiServiceProviderContribution]]  Contribution Module Typescript file\n ```\n import { ValidationResult } from \"wi-studio/common/models/validation\";\n import { IActivityContribution, IContributionContext } from \"wi-studio/common/models/contrib\";\n import { Injectable, Inject, Injector } from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import { Http } from \"@angular/http\";\n import { AbstractContribFieldProvider, AbstractContribValidationProvider, WiContrib, WiServiceContribution } from \"wi-studio/app/wi-contrib\";\n import {IValidationResult} from \"wi-studio/common/models/validation\";\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n   getFieldValue(context: IActivityContribution): Observable<string[]> {\n       return Observable.create(observer => {\n           observer.next(\"\");\n      });\n   }}\n @Injectable()\n export class Field1ValidationProvider extends AbstractContribValidationProvider {\n    validate(context: IContributionContext): Observable<IValidationResult> {\n        return Observable.create(observer => {\n            // tslint:disable-next-line:no-bitwise\n            let vresult: IValidationResult = ValidationResult.newValidationResult();\n            observer.next(vresult);\n        });\n    }}\n\n @WiContrib({\n    validationProviders: [{\n           field: \"field1\",\n            useClass: Field1ValidationProvider\n        }],\n    fieldProviders: [{\n            field: \"field1\",\n            useClass: Field1Provider\n        }]\n })\n @Injectable()\n export class TimerContribService extends WiServiceProviderContribution {}\n```\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 529,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 532,
									"name": "new WiServiceContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 533,
											"name": "_injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 534,
											"name": "_http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceContribution",
										"id": 528
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 378,
									"character": 81
								}
							]
						},
						{
							"id": 531,
							"name": "_http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "\n"
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "Http"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 384,
									"character": 91
								}
							],
							"type": {
								"type": "reference",
								"name": "Http"
							}
						},
						{
							"id": 530,
							"name": "_injector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "Injector"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 384,
									"character": 51
								}
							],
							"type": {
								"type": "reference",
								"name": "Injector"
							}
						},
						{
							"id": 537,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 538,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 524
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 404,
									"character": 28
								}
							]
						},
						{
							"id": 541,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 542,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 423,
									"character": 21
								}
							]
						},
						{
							"id": 539,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 540,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 414,
									"character": 25
								}
							]
						},
						{
							"id": 535,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 536,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 365
									},
									"implementationOf": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 277
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 391,
									"character": 18
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 276
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								529
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								531,
								530
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								537,
								541,
								539,
								535
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 378,
							"character": 43
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 543
						},
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 565
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 275
						}
					]
				},
				{
					"id": 565,
					"name": "WiServiceHandlerContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Abstract Service Handler Contribution\n## [[WiServiceHandlerContribution]]\nThe [[WiServiceHandlerContribution]] represents one way of providing contribution where the contribution will have its own single implementation\nof [[WiServiceHandlerContribution]] and the @[[Injectable]] class decorator will tell the loader that it is loadable by Angular and the single class\nwill provide handler functions for value, validation and action. The @WiContrib({}) deoorator with null metadata indicates it is a one abstract class\n[[WiServiceHandlerContribution]] implmentation.\n\n ### Example [[WiServiceHandlerContribution]]  Contribution Handler Typescript file\n ```\n import {Injectable, Injector} from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import {ValidationResult} from \"../../../../common/models/validation\";\n import {IActivityContribution, ActionResult, IActionResult} from \"../../../../common/models/contrib\";\n import {WiContrib, WiServiceHandlerContribution} from \"../../wi-contrib\";\n import {Http} from \"@angular/http\";\n import {IValidationResult} from \"../../../../common/models/validation\";\n\n @WiContrib({})\n @Injectable()\n export class RestContributionHandler extends WiServiceHandlerContribution {\n     constructor(injector: Injector, http: Http) {\n      super(injector, http);\n  }\n\n  value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      return Observable.create(observer => {\n          observer.next(\"\");\n     });\n  }\n\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n      return Observable.create(observer => {\n           let vresult: IValidationResult = ValidationResult.newValidationResult();\n           observer.next(vresult);\n       });\n  }\n\n   action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n      return Observable.create(observer => {\n           let aresult: IActionResult = ActionResult.newActionResult();\n           observer.next(aresult);\n       });\n   }\n }\n ```\n ### Example [[WiServiceHandlerContribution]]  Contribution Module Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./rest-contrib\";\n import {WiServiceContribution} from \"../../wi-contrib\";\n @NgModule({\n   imports: [CommonModule,HttpModule],\n   exports: [],\n   declarations: [],\n   entryComponents: [],\n   providers: [{\n     provide: WiServiceContribution,\n     useClass: RestContributionHandler\n   }],\n   bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 566,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "constructor",
										"text": "\n*  ## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n}\n```"
									}
								]
							},
							"signatures": [
								{
									"id": 567,
									"name": "new WiServiceHandlerContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "constructor",
												"text": "\n*  ## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 568,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 569,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceHandlerContribution",
										"id": 565
									},
									"overwrites": {
										"type": "reference",
										"name": "WiServiceContribution.__constructor",
										"id": 529
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 646,
									"character": 123
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "WiServiceContribution.__constructor",
								"id": 529
							}
						},
						{
							"id": 580,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```\n"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 754,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 581,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 582,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 583,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 584,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 243
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 243
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 754,
											"character": 19
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.action",
								"id": 303
							}
						},
						{
							"id": 575,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```\n"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 724,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 576,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 577,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 578,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 579,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 67
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 67
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 724,
											"character": 20
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.validate",
								"id": 298
							}
						},
						{
							"id": 570,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 695,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 571,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 572,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 573,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 574,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 695,
											"character": 17
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.value",
								"id": 293
							}
						},
						{
							"id": 587,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 588,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 524
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getAnnotations",
										"id": 537
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 404,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getAnnotations",
								"id": 537
							}
						},
						{
							"id": 591,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 592,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getHttp",
										"id": 541
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 423,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getHttp",
								"id": 541
							}
						},
						{
							"id": 589,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 590,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getInjector",
										"id": 539
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getInjector",
								"id": 539
							}
						},
						{
							"id": 585,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 586,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 365
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getType",
										"id": 535
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceHandlerContribution.getType",
										"id": 292
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 391,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getType",
								"id": 535
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.getType",
								"id": 291
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								566
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								580,
								575,
								570
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								587,
								591,
								589,
								585
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 646,
							"character": 50
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 528
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 275
						},
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 290
						}
					]
				},
				{
					"id": 543,
					"name": "WiServiceProviderContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Abstract Service Contribution\n## [[WiServiceProviderContribution]]\nThe [[WiServiceProviderContribution]] represents another way of providing contribution\nwhere each field will have its own [[AbstractContribFieldProvider]],[[AbstractContribValidationProvider]],[[AbstractActionProvider]] and the [[WiServiceProviderContribution]]\nimplementation with @[[WiContrib]] decorator will tell the loader that the module is of type [[WiServiceProviderContribution]]. Each field value,validation\nand action provider is also a Angular injectable Service and must be decorated by @Injectable(). The contribution service is also a Angular injectable service\nas decorated with @Injectable() and also a Contribution Service with @WiContrib(metadata) deoorator.\n\n ### Example [[WiServiceProviderContribution]]  Contribution Service Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./timer-contrib\";\n import {WiServiceContribution} from \"wi-contrib\";\n @NgModule({\n imports: [CommonModule,HttpModule],\n exports: [],\n declarations: [],\n entryComponents: [],\n providers: [\n  {\n    provide: WiServiceContribution,\n    useClass: TimerContribService\n  },\n  {\n    provide: Field1Provider,\n    useClass: Field1Provider\n  },\n  {\n    provide: Field1ValidationProvider,\n    useClass: Field1ValidationProvider\n  }],\n bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n ### Example [[WiServiceProviderContribution]]  Contribution Module Typescript file\n ```\n import { ValidationResult } from \"wi-studio/common/models/validation\";\n import { IActivityContribution, IContributionContext } from \"wi-studio/common/models/contrib\";\n import { Injectable, Inject, Injector } from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import { Http } from \"@angular/http\";\n import { AbstractContribFieldProvider, AbstractContribValidationProvider, WiContrib, WiServiceContribution } from \"wi-studio/app/wi-contrib\";\n import {IValidationResult} from \"wi-studio/common/models/validation\";\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n   getFieldValue(context: IActivityContribution): Observable<string[]> {\n       return Observable.create(observer => {\n           observer.next(\"\");\n      });\n   }}\n @Injectable()\n export class Field1ValidationProvider extends AbstractContribValidationProvider {\n    validate(context: IContributionContext): Observable<IValidationResult> {\n        return Observable.create(observer => {\n            // tslint:disable-next-line:no-bitwise\n            let vresult: IValidationResult = ValidationResult.newValidationResult();\n            observer.next(vresult);\n        });\n    }}\n\n @WiContrib({\n    validationProviders: [{\n           field: \"field1\",\n            useClass: Field1ValidationProvider\n        }],\n    fieldProviders: [{\n            field: \"field1\",\n            useClass: Field1Provider\n        }]\n })\n @Injectable()\n export class TimerContribService extends WiServiceProviderContribution {}\n```\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 544,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 545,
									"name": "new WiServiceProviderContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 546,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 547,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceProviderContribution",
										"id": 543
									},
									"overwrites": {
										"type": "reference",
										"name": "WiServiceContribution.__constructor",
										"id": 529
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 512,
									"character": 125
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "WiServiceContribution.__constructor",
								"id": 529
							}
						},
						{
							"id": 554,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 555,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get action provider"
									},
									"parameters": [
										{
											"id": 556,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 223
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getActionHandler",
										"id": 286
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 561,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getActionHandler",
								"id": 285
							}
						},
						{
							"id": 559,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 560,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 524
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getAnnotations",
										"id": 537
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 404,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getAnnotations",
								"id": 537
							}
						},
						{
							"id": 548,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 549,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get field provider"
									},
									"parameters": [
										{
											"id": 550,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 219
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getFieldProvider",
										"id": 280
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 527,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getFieldProvider",
								"id": 279
							}
						},
						{
							"id": 563,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 564,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getHttp",
										"id": 541
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 423,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getHttp",
								"id": 541
							}
						},
						{
							"id": 561,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 562,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getInjector",
										"id": 539
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getInjector",
								"id": 539
							}
						},
						{
							"id": 557,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 558,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 365
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getType",
										"id": 535
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getType",
										"id": 289
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 391,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getType",
								"id": 535
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getType",
								"id": 288
							}
						},
						{
							"id": 551,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 552,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get validation provider"
									},
									"parameters": [
										{
											"id": 553,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 215
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getValidationProvider",
										"id": 283
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 544,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getValidationProvider",
								"id": 282
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								544
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								554,
								559,
								548,
								563,
								561,
								557,
								551
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 512,
							"character": 51
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 528
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 275
						},
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 278
						}
					]
				},
				{
					"id": 517,
					"name": "IContribActionProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Provider Map"
					},
					"children": [
						{
							"id": 518,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Field Name"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 79,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 519,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Action Provider Class"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 83,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 223
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								518,
								519
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 75,
							"character": 42
						}
					]
				},
				{
					"id": 514,
					"name": "IContribFieldProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "field provider map"
					},
					"children": [
						{
							"id": 515,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 68,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 516,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 69,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 219
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								515,
								516
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 67,
							"character": 41
						}
					]
				},
				{
					"id": 507,
					"name": "IContribValidationProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Validation provider map"
					},
					"children": [
						{
							"id": 508,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 43,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 509,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 44,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 215
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								508,
								509
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 42,
							"character": 46
						}
					]
				},
				{
					"id": 524,
					"name": "WiContribMetaData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type of the WiContrib metadata."
					},
					"children": [
						{
							"id": 527,
							"name": "actionProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Defines the set of action providers that are available in the contribution\nof this module.\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 224,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribActionProviderMap",
									"id": 517
								}
							}
						},
						{
							"id": 526,
							"name": "fieldProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Defines the set of validation providers that are available in the contribution\nof this module.\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 181,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribFieldProviderMap",
									"id": 514
								}
							}
						},
						{
							"id": 525,
							"name": "validationProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the set of validation providers that are available in the contribution\nof this module.",
								"text": "## Simple Example\n\nHere is an example of a validation provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```\n"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 144,
									"character": 23
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribValidationProviderMap",
									"id": 507
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								527,
								526,
								525
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 106,
							"character": 34
						}
					]
				},
				{
					"id": 593,
					"name": "WI_CONTRIB_SYMBOL",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"tags": [
							{
								"tag": "type",
								"text": "{symbol}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 100,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "symbol"
					},
					"defaultValue": " Symbol(\"@WiContrib\")"
				},
				{
					"id": 594,
					"name": "WiContrib",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 595,
							"name": "WiContrib",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "This decorator and annotation indicates the typescript class is a Web Integrator contribution\n## Example\n```\n\n  @WiContrib()\n  class RestService {}\n```\n\n"
									},
									{
										"tag": "constructor",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 596,
									"name": "metadata",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 524
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 597,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 598,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 599,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Function"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 773,
											"character": 55
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 773,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						520,
						510,
						503,
						528,
						565,
						543
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						517,
						514,
						507,
						524
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						593
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						594
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 367,
			"name": "\"common/models/connector\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/models/connector.ts",
			"children": [
				{
					"id": 451,
					"name": "ConnectorUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Connector Utility"
					},
					"children": [
						{
							"id": 455,
							"name": "getConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 456,
									"name": "getConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a connection for a given connection name",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 457,
											"name": "connection_name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IConnectorContribution",
										"id": 196
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 128,
									"character": 31
								}
							]
						},
						{
							"id": 452,
							"name": "getConnections",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 453,
									"name": "getConnections",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a list of available connections for a given connector type",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 454,
											"name": "connector_type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IConnectorContribution",
											"id": 196
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 119,
									"character": 32
								}
							]
						},
						{
							"id": 458,
							"name": "saveConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 459,
									"name": "saveConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 460,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IConnectorContribution",
												"id": 196
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 132,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								455,
								452,
								458
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/connector.ts",
							"line": 113,
							"character": 27
						}
					]
				},
				{
					"id": 405,
					"name": "BasicConnection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 419,
							"name": "appRefs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 63,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IAppRef",
									"id": 444
								}
							}
						},
						{
							"id": 408,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 53,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 420,
							"name": "createdTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 64,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 411,
							"name": "credential",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 56,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 412,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 417,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 418,
													"name": "propName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"children": [
										{
											"id": 413,
											"name": "authType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 57,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 415,
											"name": "password",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 59,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 416,
											"name": "url",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 60,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 414,
											"name": "user",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 58,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												413,
												415,
												416,
												414
											]
										}
									],
									"sources": [
										{
											"fileName": "common/models/connector.ts",
											"line": 56,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 410,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 55,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 407,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 52,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 421,
							"name": "lastUpdatedTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 65,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 409,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 406,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 51,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								419,
								408,
								420,
								411,
								410,
								407,
								421,
								409,
								406
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/connector.ts",
							"line": 50,
							"character": 32
						}
					]
				},
				{
					"id": 444,
					"name": "IAppRef",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 445,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 98,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 446,
							"name": "appName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 99,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 447,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 100,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								445,
								446,
								447
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/connector.ts",
							"line": 97,
							"character": 24
						}
					]
				},
				{
					"id": 422,
					"name": "IConnection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This is super set of OAuth2Connection, OAuth2TwoLegConnection and BasicConnection.\nFor server convenience use only"
					},
					"children": [
						{
							"id": 429,
							"name": "appRefs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 79,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IAppRef",
									"id": 444
								}
							}
						},
						{
							"id": 425,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 75,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 430,
							"name": "createdTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 80,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 428,
							"name": "credential",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 78,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ICredential",
								"id": 432
							}
						},
						{
							"id": 427,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 77,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 424,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 74,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 431,
							"name": "lastUpdatedTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 81,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 426,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 76,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 423,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 73,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								429,
								425,
								430,
								428,
								427,
								424,
								431,
								426,
								423
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/connector.ts",
							"line": 72,
							"character": 28
						}
					]
				},
				{
					"id": 432,
					"name": "ICredential",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 442,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 443,
									"name": "propName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 433,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 85,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 439,
							"name": "auth_code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 91,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 441,
							"name": "auth_endpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 93,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 437,
							"name": "client_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 89,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 438,
							"name": "client_secret",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 90,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 435,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 87,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 440,
							"name": "token_endpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 92,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 436,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 88,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 434,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 86,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								433,
								439,
								441,
								437,
								438,
								435,
								440,
								436,
								434
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/connector.ts",
							"line": 84,
							"character": 28
						}
					]
				},
				{
					"id": 448,
					"name": "ISalesforceoAuth",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 449,
							"name": "authorizationUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 105,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 450,
							"name": "callbackUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 106,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								449,
								450
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/connector.ts",
							"line": 104,
							"character": 33
						}
					]
				},
				{
					"id": 368,
					"name": "OAuth2Connection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 384,
							"name": "appRefs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 26,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IAppRef",
									"id": 444
								}
							}
						},
						{
							"id": 371,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 14,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 385,
							"name": "createdTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 27,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 374,
							"name": "credential",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 17,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 375,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 382,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 383,
													"name": "propName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"children": [
										{
											"id": 376,
											"name": "authType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 18,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 377,
											"name": "auth_code",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 19,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 379,
											"name": "auth_endpoint",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 21,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 380,
											"name": "client_id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 22,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 381,
											"name": "client_secret",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 23,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 378,
											"name": "token_endpoint",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 20,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												376,
												377,
												379,
												380,
												381,
												378
											]
										}
									],
									"sources": [
										{
											"fileName": "common/models/connector.ts",
											"line": 17,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 373,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 16,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 370,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 13,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 386,
							"name": "lastUpdatedTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 28,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 372,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 15,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 369,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 12,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								384,
								371,
								385,
								374,
								373,
								370,
								386,
								372,
								369
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/connector.ts",
							"line": 11,
							"character": 33
						}
					]
				},
				{
					"id": 387,
					"name": "OAuth2TwoLegConnection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 402,
							"name": "appRefs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 45,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IAppRef",
									"id": 444
								}
							}
						},
						{
							"id": 390,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 34,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 403,
							"name": "createdTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 46,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 393,
							"name": "credential",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 37,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 394,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 400,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 401,
													"name": "propName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"children": [
										{
											"id": 395,
											"name": "authType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 38,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 399,
											"name": "auth_endpoint",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 42,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 396,
											"name": "client_id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 39,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 397,
											"name": "client_secret",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 40,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 398,
											"name": "token_endpoint",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "common/models/connector.ts",
													"line": 41,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												395,
												399,
												396,
												397,
												398
											]
										}
									],
									"sources": [
										{
											"fileName": "common/models/connector.ts",
											"line": 37,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 392,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 36,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 389,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 33,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 404,
							"name": "lastUpdatedTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 47,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 391,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 35,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 388,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/connector.ts",
									"line": 32,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								402,
								390,
								403,
								393,
								392,
								389,
								404,
								391,
								388
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/connector.ts",
							"line": 31,
							"character": 39
						}
					]
				},
				{
					"id": 461,
					"name": "AUTHENTICATION_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/connector.ts",
							"line": 8,
							"character": 32
						},
						{
							"fileName": "common/models/connector.ts",
							"line": 9,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "BASIC"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH1"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH2"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH2_TWOLEG"
							}
						]
					},
					"defaultValue": " strEnum([\"BASIC\", \"OAUTH1\", \"OAUTH2\", \"OAUTH2_TWOLEG\"])"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						451
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						405,
						444,
						422,
						432,
						448,
						368,
						387
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						461
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/connector.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 121,
			"name": "\"common/models/contrib\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/models/contrib.ts",
			"children": [
				{
					"id": 256,
					"name": "ActionResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Result implementation"
					},
					"children": [
						{
							"id": 262,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 263,
									"name": "new ActionResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 264,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 28
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ActionResult",
										"id": 256
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 611,
									"character": 5
								}
							]
						},
						{
							"id": 258,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 602,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationError",
										"id": 28
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.result",
								"id": 245
							}
						},
						{
							"id": 257,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 601,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.success",
								"id": 244
							}
						},
						{
							"id": 273,
							"name": "getResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 274,
									"name": "getResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "get Result Data",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.getResult",
										"id": 255
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 655,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.getResult",
								"id": 254
							}
						},
						{
							"id": 265,
							"name": "isSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 266,
									"name": "isSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns if the action is successful or not",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.isSuccess",
										"id": 247
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 627,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.isSuccess",
								"id": 246
							}
						},
						{
							"id": 270,
							"name": "setResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 271,
									"name": "setResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set result data",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 272,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 28
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 243
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.setResult",
										"id": 252
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 646,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.setResult",
								"id": 251
							}
						},
						{
							"id": 267,
							"name": "setSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 268,
									"name": "setSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "set success or failure boolean state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 269,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 243
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.setSuccess",
										"id": 249
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 636,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.setSuccess",
								"id": 248
							}
						},
						{
							"id": 259,
							"name": "newActionResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 260,
									"name": "newActionResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 261,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 28
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 243
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 609,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								262
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258,
								257
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								273,
								265,
								270,
								267,
								259
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 600,
							"character": 25
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IActionResult",
							"id": 243
						}
					]
				},
				{
					"id": 122,
					"name": "ContributionTypeConverter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Contribution type converter from Flogo types"
					},
					"children": [
						{
							"id": 123,
							"name": "fromString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 124,
									"name": "fromString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 125,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 335
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 17,
									"character": 28
								}
							]
						},
						{
							"id": 126,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 127,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 128,
											"name": "ctype",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CONTRIBUTION_TYPE",
												"id": 335
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 28,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								123,
								126
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 16,
							"character": 38
						}
					]
				},
				{
					"id": 193,
					"name": "IActionDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Definition interface"
					},
					"children": [
						{
							"id": 195,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Button display settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 336,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDisplay",
								"id": 132
							}
						},
						{
							"id": 194,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique name to identify the button. If display name is not provided name will be used."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 332,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								195,
								194
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 328,
							"character": 34
						}
					]
				},
				{
					"id": 243,
					"name": "IActionResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The result of any button action is return values."
					},
					"children": [
						{
							"id": 245,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "if the action is a failure then any associated errors are returned."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 568,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationError",
										"id": 28
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 244,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "property hold status if the action was a success or a failure"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 564,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 254,
							"name": "getResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 255,
									"name": "getResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property getter for [[result]]",
										"returns": "\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationError",
												"id": 28
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 594,
									"character": 13
								}
							]
						},
						{
							"id": 246,
							"name": "isSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 247,
									"name": "isSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " getter function of [[success]] property",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 574,
									"character": 13
								}
							]
						},
						{
							"id": 251,
							"name": "setResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 252,
									"name": "setResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property setter for [[result]]",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 253,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 28
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 243
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 588,
									"character": 13
								}
							]
						},
						{
							"id": 248,
							"name": "setSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 249,
									"name": "setSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property setter for [[success]]",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 250,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 243
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 581,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								245,
								244
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								254,
								246,
								251,
								248
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 560,
							"character": 31
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ActionResult",
							"id": 256
						}
					]
				},
				{
					"id": 179,
					"name": "IActivityContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Activity Contribution"
					},
					"children": [
						{
							"id": 192,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 68,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 131
							}
						},
						{
							"id": 191,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 67,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 130
							}
						},
						{
							"id": 185,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 310,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 154
							}
						},
						{
							"id": 186,
							"name": "inputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Inputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 314,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 145
								}
							}
						},
						{
							"id": 180,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 290,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 187,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Outputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 318,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 145
								}
							}
						},
						{
							"id": 184,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 306,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 181,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the activity tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 294,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 183,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 302,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 182,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number, use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 298,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 189,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from inputs,outputs. Field Names must be unique within the activity"
									},
									"parameters": [
										{
											"id": 190,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 323,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								192,
								191,
								185,
								186,
								180,
								187,
								184,
								181,
								183,
								182
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								188
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 286,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 129
						}
					]
				},
				{
					"id": 275,
					"name": "IBaseServiceContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Base Service Contribution"
					},
					"children": [
						{
							"id": 276,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 277,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 365
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 675,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								276
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 670,
							"character": 41
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 278
						},
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 290
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 528
						},
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 565
						},
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 543
						}
					]
				},
				{
					"id": 196,
					"name": "IConnectorContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Connector Contribution"
					},
					"children": [
						{
							"id": 204,
							"name": "actions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Form Action configuration"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 373,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IActionDefinition",
									"id": 193
								}
							}
						},
						{
							"id": 206,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 68,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 131
							}
						},
						{
							"id": 205,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 67,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 130
							}
						},
						{
							"id": 202,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 365,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 154
							}
						},
						{
							"id": 197,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Connector name. Must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 345,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 201,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 361,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 203,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Static connector configurations e.g. connection name, connection description, connection configuration etc."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 369,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 145
								}
							}
						},
						{
							"id": 198,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the connection tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 349,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 200,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 357,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 199,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Connector version. Must follow semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 353,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								204,
								206,
								205,
								202,
								197,
								201,
								203,
								198,
								200,
								199
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 341,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 129
						}
					]
				},
				{
					"id": 223,
					"name": "IContribActionProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Action handler provider"
					},
					"children": [
						{
							"id": 224,
							"name": "handleAction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 225,
									"name": "handleAction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "handle action",
										"returns": "\n",
										"tags": [
											{
												"tag": "typeparam",
												"text": "The generic type parameter indicating the value type being returned.",
												"param": "T"
											}
										]
									},
									"parameters": [
										{
											"id": 226,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 364
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 457,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								224
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 449,
							"character": 39
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractActionProvider",
							"id": 520
						}
					]
				},
				{
					"id": 219,
					"name": "IContribFieldProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Field Provider"
					},
					"children": [
						{
							"id": 220,
							"name": "getFieldValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 221,
									"name": "getFieldValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets Field Value",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 222,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 364
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 444,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								220
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 437,
							"character": 38
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribFieldProvider",
							"id": 510
						}
					]
				},
				{
					"id": 215,
					"name": "IContribValidationProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Validation provider"
					},
					"children": [
						{
							"id": 216,
							"name": "validate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 217,
									"name": "validate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "validate",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 218,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 364
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 67
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 67
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 431,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								216
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 425,
							"character": 43
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribValidationProvider",
							"id": 503
						}
					]
				},
				{
					"id": 129,
					"name": "IContributionContext",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The UI form sends the IContributionContext"
					},
					"children": [
						{
							"id": 131,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 68,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 130,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 67,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								131,
								130
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 66,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ITriggerContribution",
							"id": 164
						},
						{
							"type": "reference",
							"name": "IActivityContribution",
							"id": 179
						},
						{
							"type": "reference",
							"name": "IConnectorContribution",
							"id": 196
						}
					]
				},
				{
					"id": 154,
					"name": "IContributionDisplay",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Display attributes for the contribution"
					},
					"children": [
						{
							"id": 156,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies the category of the contribution e.g. Salesforce,Marketo , default is \"General\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 198,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 160,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Description"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 214,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 159,
							"name": "largeIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the small icon path. The path is relative to the contribution folder root. i.e. icons/file.png"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 210,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 155,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "display name for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 194,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 161,
							"name": "sections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sections for dynamic tabs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 218,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 158,
							"name": "smallIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the small icon path. The path is relative to the contribution folder root. i.e. icons/file.png"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 206,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 157,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies if a contribution is visible and enabled"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 202,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								156,
								160,
								159,
								155,
								161,
								158,
								157
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 190,
							"character": 37
						}
					]
				},
				{
					"id": 227,
					"name": "IContributionHandler",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Contribution Handler interface",
						"tags": [
							{
								"tag": "description",
								"text": "A comtribution handler implementation provides the following handlers\n * value - value provider for the given field\n * validate - vrules provider for the given field\n * action - action handler for a given button.\n"
							}
						]
					},
					"children": [
						{
							"id": 238,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 554,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 239,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 240,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 241,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 242,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 243
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 243
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 554,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 233,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 525,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 234,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 235,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 236,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 237,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 67
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 67
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 525,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 228,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 497,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 229,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 230,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 231,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 232,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 497,
											"character": 10
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								238,
								233,
								228
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 470,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 290
						}
					]
				},
				{
					"id": 145,
					"name": "IFieldDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field Definition"
					},
					"children": [
						{
							"id": 150,
							"name": "allowed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specified allowed value for display field type \"dropdown\", keeping it same as flogo"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 173,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 152,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Description"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 181,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 153,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Field display settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 185,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDisplay",
								"id": 132
							}
						},
						{
							"id": 146,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "name of the field, not same as display name"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 157,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 149,
							"name": "required",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specifies if the form field is required"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 169,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 151,
							"name": "section",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to place the field in a customized form tab section"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 177,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 147,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "data type of the field in string e.g. string,number"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 161,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "FieldType",
								"id": 361
							}
						},
						{
							"id": 148,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "value of the field"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 165,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								150,
								152,
								153,
								146,
								149,
								151,
								147,
								148
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 153,
							"character": 33
						}
					]
				},
				{
					"id": 132,
					"name": "IFieldDisplay",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field display settings"
					},
					"children": [
						{
							"id": 141,
							"name": "buttonStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Button Styles when display type is button. Default style is \"btn-default\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 129,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonStyle",
								"id": 359
							}
						},
						{
							"id": 140,
							"name": "buttonType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the button type. Default type is \"button\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 125,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonType",
								"id": 357
							}
						},
						{
							"id": 135,
							"name": "fileExtensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type fileselector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 105,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 136,
							"name": "mappable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "true when field is also shown in mapper, else false"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 109,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 133,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Named used in display"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 97,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 142,
							"name": "readonly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the widget in read-only mode"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 133,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 138,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type table"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 117,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 137,
							"name": "syntax",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": " Used with display field type texteditor"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 113,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 134,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display field type"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 101,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "DisplayFieldType",
								"id": 355
							}
						},
						{
							"id": 144,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 140,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 143,
							"name": "valid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the field is valid or not"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 137,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 139,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specifies if the field is visible , the field is always enabled. The default is true."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 121,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								141,
								140,
								135,
								136,
								133,
								142,
								138,
								137,
								134,
								144,
								143,
								139
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 93,
							"character": 30
						}
					]
				},
				{
					"id": 207,
					"name": "IFunctionArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function args"
					},
					"children": [
						{
							"id": 208,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Argument name"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 384,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 209,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Argument type"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 388,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								208,
								209
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 380,
							"character": 30
						}
					]
				},
				{
					"id": 210,
					"name": "IFunctionContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function contribution"
					},
					"children": [
						{
							"id": 213,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Function argument definition"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 405,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFunctionArgs",
									"id": 207
								}
							}
						},
						{
							"id": 212,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Function category"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 401,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 211,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Name of the function"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 397,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 214,
							"name": "return",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Return type"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 409,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								213,
								212,
								211,
								214
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 393,
							"character": 38
						}
					]
				},
				{
					"id": 162,
					"name": "IHandlerDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Endpoint Definition"
					},
					"children": [
						{
							"id": 163,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Endpoint settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 235,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 145
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								163
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 231,
							"character": 35
						}
					]
				},
				{
					"id": 164,
					"name": "ITriggerContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Trigger Contribution interface"
					},
					"children": [
						{
							"id": 178,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 68,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 131
							}
						},
						{
							"id": 177,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 67,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 130
							}
						},
						{
							"id": 170,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 264,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 154
							}
						},
						{
							"id": 172,
							"name": "handler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger handler endpoint settings, e.g. for each port setting there can be multiple handlers"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 272,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IHandlerDefinition",
								"id": 162
							}
						},
						{
							"id": 165,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " trigger name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 244,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 173,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger output fields"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 145
								}
							}
						},
						{
							"id": 169,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 260,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 171,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger static settings i.e. port number, logging etc."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 268,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 145
								}
							}
						},
						{
							"id": 166,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the trigger tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 248,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 168,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 256,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 167,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number , use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 252,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 174,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 175,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from settings,endpoint,outputs. Field names must be unique within the trigger"
									},
									"parameters": [
										{
											"id": 176,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 281,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								178,
								177,
								170,
								172,
								165,
								173,
								169,
								171,
								166,
								168,
								167
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								174
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 240,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 129
						}
					]
				},
				{
					"id": 308,
					"name": "IWiServiceContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service contribution interface"
					},
					"children": [
						{
							"id": 321,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 554,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 322,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 323,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 324,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 325,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 243
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 243
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 554,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.action",
								"id": 238
							}
						},
						{
							"id": 316,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 525,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 317,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 318,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 319,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 320,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 67
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 67
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 525,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.validate",
								"id": 233
							}
						},
						{
							"id": 311,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 497,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 312,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 313,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 314,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 315,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 497,
											"character": 10
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.value",
								"id": 228
							}
						},
						{
							"id": 332,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 333,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the action provider for a given button field in the form.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 334,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 223
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getActionHandler",
										"id": 285
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 800,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getActionHandler",
								"id": 285
							}
						},
						{
							"id": 326,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 327,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the FieldProvider for a given field.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 328,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 219
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getFieldProvider",
										"id": 279
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 717,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getFieldProvider",
								"id": 279
							}
						},
						{
							"id": 309,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 310,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 365
									},
									"overwrites": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 276
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 276
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 675,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 276
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 276
							}
						},
						{
							"id": 329,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 330,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the vrules provider for a given field.\n\nHere is an example of a vrules provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 331,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 215
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getValidationProvider",
										"id": 282
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 755,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getValidationProvider",
								"id": 282
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								321,
								316,
								311
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								332,
								326,
								309,
								329
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 810,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 290
						},
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 278
						}
					]
				},
				{
					"id": 290,
					"name": "IWiServiceHandlerContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Handler Service contribution interface"
					},
					"children": [
						{
							"id": 303,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 554,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 304,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 305,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 306,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 307,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 243
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 243
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 554,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.action",
								"id": 238
							}
						},
						{
							"id": 298,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 525,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 299,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 300,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 301,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 302,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 67
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 67
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 525,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.validate",
								"id": 233
							}
						},
						{
							"id": 293,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 497,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 294,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 295,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 296,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 297,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 364
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 497,
											"character": 10
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.value",
								"id": 228
							}
						},
						{
							"id": 291,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 292,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 365
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 276
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 675,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 276
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								303,
								298,
								293
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								291
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 805,
							"character": 46
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 275
						},
						{
							"type": "reference",
							"name": "IContributionHandler",
							"id": 227
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceContribution",
							"id": 308
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 565
						}
					]
				},
				{
					"id": 278,
					"name": "IWiServiceProviderContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Provider Service contribution interface"
					},
					"children": [
						{
							"id": 285,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 286,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the action provider for a given button field in the form.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 287,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 223
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 800,
									"character": 20
								}
							]
						},
						{
							"id": 279,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 280,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the FieldProvider for a given field.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 281,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 219
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 717,
									"character": 20
								}
							]
						},
						{
							"id": 288,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 289,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 365
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 276
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 675,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 276
							}
						},
						{
							"id": 282,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 283,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the vrules provider for a given field.\n\nHere is an example of a vrules provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 284,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 215
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 755,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								285,
								279,
								288,
								282
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 680,
							"character": 47
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 275
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceContribution",
							"id": 308
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 543
						}
					]
				},
				{
					"id": 351,
					"name": "CONTRIBUTION_LOAD_RESULT",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "CONTRIBUTION_LOAD_RESULT type"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 61,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 352,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 354,
									"name": "data",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 61,
											"character": 61
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 353,
									"name": "status",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 61,
											"character": 47
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										354,
										353
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 61,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 345,
					"name": "FUNCTION_CONTRIBUTION",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "FUNCTION_CONTRIBUTION type",
						"tags": [
							{
								"tag": "typeparam",
								"text": "The generic type parameter indicating the value type being returned.",
								"param": "T"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 51,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 346,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 348,
									"name": "category",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 53,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 350,
									"name": "function",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 55,
											"character": 12
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 347,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 52,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 349,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 54,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 335
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										348,
										350,
										347,
										349
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 51,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 364,
					"name": "IContributionTypes",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Union Type from all contribution types"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 415,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "IContributionContext",
								"id": 129
							},
							{
								"type": "reference",
								"name": "ITriggerContribution",
								"id": 164
							},
							{
								"type": "reference",
								"name": "IActivityContribution",
								"id": 179
							},
							{
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 196
							}
						]
					}
				},
				{
					"id": 337,
					"name": "MODULE_CONTRIBUTION",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "MODULE_CONTRIBUTION type",
						"tags": [
							{
								"tag": "typeparam",
								"text": "The generic type parameter indicating the value type being returned",
								"param": "T"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 38,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 338,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 343,
									"name": "files",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 43,
											"character": 9
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 339,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 39,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 341,
									"name": "route",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 41,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 342,
									"name": "routePath",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 42,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 344,
									"name": "service",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 44,
											"character": 11
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 340,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 40,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 335
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										343,
										339,
										341,
										342,
										344,
										340
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 38,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 359,
					"name": "ButtonStyle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Button Style string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 86,
							"character": 24
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 87,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "primary"
							},
							{
								"type": "stringLiteral",
								"value": "success"
							},
							{
								"type": "stringLiteral",
								"value": "info"
							},
							{
								"type": "stringLiteral",
								"value": "warning"
							},
							{
								"type": "stringLiteral",
								"value": "danger"
							}
						]
					},
					"defaultValue": " strEnum([\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"])"
				},
				{
					"id": 357,
					"name": "ButtonType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Button Type string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 80,
							"character": 23
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 81,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "button"
							},
							{
								"type": "stringLiteral",
								"value": "submit"
							},
							{
								"type": "stringLiteral",
								"value": "reset"
							}
						]
					},
					"defaultValue": " strEnum([\"submit\", \"reset\", \"button\"])"
				},
				{
					"id": 335,
					"name": "CONTRIBUTION_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Contribution type enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 10,
							"character": 30
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 11,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "trigger"
							},
							{
								"type": "stringLiteral",
								"value": "activity"
							},
							{
								"type": "stringLiteral",
								"value": "connector"
							},
							{
								"type": "stringLiteral",
								"value": "function"
							}
						]
					},
					"defaultValue": " strEnum([\"trigger\", \"activity\", \"connector\", \"function\"])"
				},
				{
					"id": 363,
					"name": "DEFAULT_CONTRIBUTION_CATEGORY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Default contribution category",
						"tags": [
							{
								"tag": "type",
								"text": "{string}"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 227,
							"character": 42
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "General"
					},
					"defaultValue": "\"General\""
				},
				{
					"id": 355,
					"name": "DisplayFieldType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " DisplayField Type string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 74,
							"character": 29
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 75,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "connection"
							},
							{
								"type": "stringLiteral",
								"value": "dropdown"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "texteditor"
							},
							{
								"type": "stringLiteral",
								"value": "fileselector"
							},
							{
								"type": "stringLiteral",
								"value": "connectiondata"
							},
							{
								"type": "stringLiteral",
								"value": "button"
							},
							{
								"type": "stringLiteral",
								"value": "params"
							}
						]
					},
					"defaultValue": " strEnum([\"connection\", \"dropdown\", \"table\", \"texteditor\", \"fileselector\", \"connectiondata\", \"button\", \"params\"])"
				},
				{
					"id": 361,
					"name": "FieldType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "FieldType string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 147,
							"character": 22
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 148,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "complex_object"
							}
						]
					},
					"defaultValue": " strEnum([\"string\", \"number\", \"boolean\", \"complex_object\"])"
				},
				{
					"id": 365,
					"name": "IServiceContributionType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service Contribution Type",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 664,
							"character": 37
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 665,
							"character": 36
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "Provider"
							},
							{
								"type": "stringLiteral",
								"value": "Handler"
							}
						]
					},
					"defaultValue": " strEnum([\"Provider\", \"Handler\"])"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						256,
						122
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						193,
						243,
						179,
						275,
						196,
						223,
						219,
						215,
						129,
						154,
						227,
						145,
						132,
						207,
						210,
						162,
						164,
						308,
						290,
						278
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						351,
						345,
						364,
						337
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						359,
						357,
						335,
						363,
						355,
						361,
						365
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 463,
			"name": "\"common/models/corsutils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/models/corsutils.ts",
			"children": [
				{
					"id": 464,
					"name": "CORSUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 473,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 476,
									"name": "new CORSUtils",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 477,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 478,
											"name": "remoteUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CORSUtils",
										"id": 464
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 26,
									"character": 5
								}
							]
						},
						{
							"id": 468,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 16,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 466,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 14,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 474,
							"name": "http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 33,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Http"
							}
						},
						{
							"id": 467,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 15,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "HTTP_METHOD",
								"id": 500
							},
							"defaultValue": " HTTP_METHOD.GET"
						},
						{
							"id": 465,
							"name": "queryParams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 13,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 475,
							"name": "remoteUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"comment": {
								"shortText": "\n"
							},
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 33,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 490,
							"name": "addBody",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 491,
									"name": "addBody",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 492,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CORSUtils",
										"id": 464
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 71,
									"character": 11
								}
							]
						},
						{
							"id": 483,
							"name": "addHeader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 484,
									"name": "addHeader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 485,
											"name": "header",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 486,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CORSUtils",
										"id": 464
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 53,
									"character": 13
								}
							]
						},
						{
							"id": 487,
							"name": "addMethod",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 488,
									"name": "addMethod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 489,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "HTTP_METHOD",
												"id": 500
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CORSUtils",
										"id": 464
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 62,
									"character": 13
								}
							]
						},
						{
							"id": 479,
							"name": "addQueryParams",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 480,
									"name": "addQueryParams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 481,
											"name": "param",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 482,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CORSUtils",
										"id": 464
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 42,
									"character": 18
								}
							]
						},
						{
							"id": 495,
							"name": "buildUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 496,
									"name": "buildUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 497,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 498,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 110,
									"character": 12
								}
							]
						},
						{
							"id": 493,
							"name": "send",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 494,
									"name": "send",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 79,
									"character": 8
								}
							]
						},
						{
							"id": 469,
							"name": "createRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 470,
									"name": "createRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 471,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 472,
											"name": "remoteUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Remote URL is the URL from r"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CORSUtils",
										"id": 464
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/corsutils.ts",
									"line": 24,
									"character": 31
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								473
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								468,
								466,
								474,
								467,
								465,
								475
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								490,
								483,
								487,
								479,
								495,
								493,
								469
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/corsutils.ts",
							"line": 12,
							"character": 22
						}
					]
				},
				{
					"id": 499,
					"name": "END_POINT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "common/models/corsutils.ts",
							"line": 8,
							"character": 15
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "/wistudio/v1/contributions/proxy"
					},
					"defaultValue": "\"/wistudio/v1/contributions/proxy\""
				},
				{
					"id": 500,
					"name": "HTTP_METHOD",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/corsutils.ts",
							"line": 10,
							"character": 24
						},
						{
							"fileName": "common/models/corsutils.ts",
							"line": 11,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "GET"
							},
							{
								"type": "stringLiteral",
								"value": "POST"
							},
							{
								"type": "stringLiteral",
								"value": "PUT"
							},
							{
								"type": "stringLiteral",
								"value": "DELETE"
							}
						]
					},
					"defaultValue": " strEnum([\"GET\", \"POST\", \"PUT\", \"DELETE\"])"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						464
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						499,
						500
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/corsutils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 27,
			"name": "\"common/models/validation\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/models/validation.ts",
			"children": [
				{
					"id": 63,
					"name": "EnumValidationState",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field Validation State Enumeration"
					},
					"children": [
						{
							"id": 64,
							"name": "WI_READONLY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The field is read only based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 118,
									"character": 15
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 66,
							"name": "WI_VALID",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The field is valid based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 128,
									"character": 12
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 65,
							"name": "WI_VISIBLE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " The field is visible based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 123,
									"character": 14
								}
							],
							"defaultValue": "4"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								64,
								66,
								65
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 113,
							"character": 31
						}
					]
				},
				{
					"id": 41,
					"name": "ValidationError",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Error Implementation"
					},
					"children": [
						{
							"id": 46,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Constructor - Create a new validation error instance",
								"tags": [
									{
										"tag": "constructor",
										"text": ""
									}
								]
							},
							"signatures": [
								{
									"id": 50,
									"name": "new ValidationError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Constructor - Create a new validation error instance",
										"tags": [
											{
												"tag": "constructor",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 51,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 52,
											"name": "errorMsg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 53,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValidationError",
										"id": 41
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 61,
									"character": 5
								}
							]
						},
						{
							"id": 49,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "\n"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 81
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.context",
								"id": 31
							}
						},
						{
							"id": 47,
							"name": "errorCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.errorCode",
								"id": 29
							}
						},
						{
							"id": 48,
							"name": "errorMsg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 57
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.errorMsg",
								"id": 30
							}
						},
						{
							"id": 54,
							"name": "getErrorCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 55,
									"name": "getErrorCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Code",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.getErrorCode",
										"id": 33
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 80,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.getErrorCode",
								"id": 32
							}
						},
						{
							"id": 56,
							"name": "getErrorMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 57,
									"name": "getErrorMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Message",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.getErrorMessage",
										"id": 35
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 88,
									"character": 26
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.getErrorMessage",
								"id": 34
							}
						},
						{
							"id": 60,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 61,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Set the error context"
									},
									"parameters": [
										{
											"id": 62,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.setContext",
										"id": 39
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 105,
									"character": 21
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.setContext",
								"id": 38
							}
						},
						{
							"id": 58,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 59,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representation of the error",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.toString",
										"id": 37
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 96,
									"character": 19
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.toString",
								"id": 36
							}
						},
						{
							"id": 42,
							"name": "newError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 43,
									"name": "newError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Static Constructor Create a new validation error instance",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 44,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45,
											"name": "errorMsg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationError",
										"id": 28
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 59,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								46
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								49,
								47,
								48
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								54,
								56,
								60,
								58,
								42
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 52,
							"character": 28
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IValidationError",
							"id": 28
						}
					]
				},
				{
					"id": 91,
					"name": "ValidationResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Result Implementation"
					},
					"children": [
						{
							"id": 97,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "constructor",
										"text": ""
									}
								]
							},
							"signatures": [
								{
									"id": 98,
									"name": "new ValidationResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "constructor",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 99,
											"name": "errors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 28
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IValidationError",
															"id": 28
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValidationResult",
										"id": 91
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 216,
									"character": 5
								}
							]
						},
						{
							"id": 93,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 207,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IValidationError",
									"id": 28
								}
							},
							"defaultValue": " []",
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.errors",
								"id": 69
							}
						},
						{
							"id": 92,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 206,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "EnumValidationState",
										"id": 63
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"defaultValue": " EnumValidationState.WI_VALID | EnumValidationState.WI_VISIBLE",
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.state",
								"id": 68
							}
						},
						{
							"id": 119,
							"name": "getErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 120,
									"name": "getErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IValidationError",
											"id": 28
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.getErrors",
										"id": 90
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 268,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.getErrors",
								"id": 89
							}
						},
						{
							"id": 100,
							"name": "isReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 101,
									"name": "isReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isReadOnly",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 236,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isReadOnly",
								"id": 70
							}
						},
						{
							"id": 104,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 105,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isValid",
										"id": 75
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 244,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isValid",
								"id": 74
							}
						},
						{
							"id": 102,
							"name": "isVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 103,
									"name": "isVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isVisible",
										"id": 73
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 240,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isVisible",
								"id": 72
							}
						},
						{
							"id": 115,
							"name": "setError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 116,
									"name": "setError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 117,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 118,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 67
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setError",
										"id": 86
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 263,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setError",
								"id": 85
							}
						},
						{
							"id": 106,
							"name": "setReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 107,
									"name": "setReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 108,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 67
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setReadOnly",
										"id": 77
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 248,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setReadOnly",
								"id": 76
							}
						},
						{
							"id": 112,
							"name": "setValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 113,
									"name": "setValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 114,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 67
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setValid",
										"id": 83
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 258,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setValid",
								"id": 82
							}
						},
						{
							"id": 109,
							"name": "setVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 110,
									"name": "setVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 111,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 67
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setVisible",
										"id": 80
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 253,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setVisible",
								"id": 79
							}
						},
						{
							"id": 94,
							"name": "newValidationResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 95,
									"name": "newValidationResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 96,
											"name": "errors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 28
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IValidationError",
															"id": 28
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 67
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 214,
									"character": 30
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								97
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								93,
								92
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								119,
								100,
								104,
								102,
								115,
								106,
								112,
								109,
								94
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 203,
							"character": 29
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IValidationResult",
							"id": 67
						}
					]
				},
				{
					"id": 28,
					"name": "IValidationError",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Error Interface"
					},
					"children": [
						{
							"id": 31,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Error Context"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29,
							"name": "errorCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Error Code"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 11,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30,
							"name": "errorMsg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Error Message"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32,
							"name": "getErrorCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 33,
									"name": "getErrorCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Code",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 27,
									"character": 16
								}
							]
						},
						{
							"id": 34,
							"name": "getErrorMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 35,
									"name": "getErrorMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Message",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 33,
									"character": 19
								}
							]
						},
						{
							"id": 38,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 39,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Set Context Map for the Error i.e Flow -> Activity -> Property"
									},
									"parameters": [
										{
											"id": 40,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 46,
									"character": 14
								}
							]
						},
						{
							"id": 36,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 37,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representation of the Error",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 39,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								31,
								29,
								30
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								32,
								34,
								38,
								36
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 6,
							"character": 33
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ValidationError",
							"id": 41
						}
					]
				},
				{
					"id": 67,
					"name": "IValidationResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Result interface"
					},
					"children": [
						{
							"id": 69,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Validation Errors"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 144,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IValidationError",
									"id": 28
								}
							}
						},
						{
							"id": 68,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Validation State"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 139,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "EnumValidationState",
										"id": 63
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 89,
							"name": "getErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 90,
									"name": "getErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Validation Errors",
										"returns": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IValidationError",
											"id": 28
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 197,
									"character": 13
								}
							]
						},
						{
							"id": 70,
							"name": "isReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 71,
									"name": "isReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation Read Only state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 150,
									"character": 14
								}
							]
						},
						{
							"id": 74,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 75,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation validity state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 162,
									"character": 11
								}
							]
						},
						{
							"id": 72,
							"name": "isVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 73,
									"name": "isVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation Visible state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 156,
									"character": 13
								}
							]
						},
						{
							"id": 85,
							"name": "setError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 86,
									"name": "setError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds Validation error",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 87,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 88,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 67
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 191,
									"character": 12
								}
							]
						},
						{
							"id": 76,
							"name": "setReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 77,
									"name": "setReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation Read Only state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 78,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 67
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 169,
									"character": 15
								}
							]
						},
						{
							"id": 82,
							"name": "setValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 83,
									"name": "setValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation valid state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 84,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 67
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 183,
									"character": 12
								}
							]
						},
						{
							"id": 79,
							"name": "setVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 80,
									"name": "setVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation Visible state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 81,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 67
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 176,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								69,
								68
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								89,
								70,
								74,
								72,
								85,
								76,
								82,
								79
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 134,
							"character": 34
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ValidationResult",
							"id": 91
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						63
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						41,
						91
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						28,
						67
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/validation.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"common/types\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/types.ts",
			"children": [
				{
					"id": 2,
					"name": "JSONSCHEMATypeInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type Information"
					},
					"children": [
						{
							"id": 4,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 60,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_FORMAT",
								"id": 18
							}
						},
						{
							"id": 7,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 63,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 6,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 62,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 61,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 59,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_TYPE",
								"id": 16
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4,
								7,
								6,
								5,
								3
							]
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 58,
							"character": 35
						}
					]
				},
				{
					"id": 15,
					"name": "ARRAY_STR_ARRAY",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 11,
							"character": 27
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9,
					"name": "ENUM_MAP",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 2,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "E"
							},
							{
								"type": "typeParameter",
								"name": "P"
							}
						]
					}
				},
				{
					"id": 22,
					"name": "JSON_SCHEMA_TYPE",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 65,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "JSONSCHEMATypeInfo",
						"id": 2
					}
				},
				{
					"id": 8,
					"name": "STRING_MAP",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 1,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "typeParameter",
								"name": "P"
							}
						]
					}
				},
				{
					"id": 20,
					"name": "GOLANG_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "GO Lang Type enumerations",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 52,
							"character": 24
						},
						{
							"fileName": "common/types.ts",
							"line": 53,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "any"
							},
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "complex_object"
							}
						]
					},
					"defaultValue": " strEnum([\"string\", \"integer\", \"number\", \"boolean\", \"object\", \"array\", \"any\", \"complex_object\"])"
				},
				{
					"id": 18,
					"name": "JSON_FORMAT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type Format enumerations\nhttps://developers.google.com/discovery/v1/type-format\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.3.2",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string | string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 27,
							"character": 24
						},
						{
							"fileName": "common/types.ts",
							"line": 46,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "int32"
							},
							{
								"type": "stringLiteral",
								"value": "uint32"
							},
							{
								"type": "stringLiteral",
								"value": "double"
							},
							{
								"type": "stringLiteral",
								"value": "float"
							},
							{
								"type": "stringLiteral",
								"value": "byte"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "date_time"
							},
							{
								"type": "stringLiteral",
								"value": "int64"
							},
							{
								"type": "stringLiteral",
								"value": "uint64"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "hostname"
							},
							{
								"type": "stringLiteral",
								"value": "ipv4"
							},
							{
								"type": "stringLiteral",
								"value": "ipv6"
							},
							{
								"type": "stringLiteral",
								"value": "uri"
							},
							{
								"type": "stringLiteral",
								"value": "uri_reference"
							},
							{
								"type": "stringLiteral",
								"value": "uri_template"
							},
							{
								"type": "stringLiteral",
								"value": "json_pointer"
							}
						]
					},
					"defaultValue": " strEnum([\n    \"int32\",\n    \"uint32\",\n    \"double\",\n    \"float\",\n    \"byte\",\n    \"date\",\n    \"date_time\",\n    \"int64\",\n    \"uint64\",\n    \"object\",\n    \"email\",\n    \"hostname\",\n    \"ipv4\",\n    \"ipv6\",\n    \"uri\",\n    \"uri_reference\",\n    \"uri_template\",\n    \"json_pointer\"])"
				},
				{
					"id": 23,
					"name": "JSON_RT_TYPE_MAPPING",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 67,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "ENUM_MAP",
						"id": 9,
						"typeArguments": [
							{
								"type": "reference",
								"name": "GOLANG_TYPE",
								"id": 20
							},
							{
								"type": "reference",
								"name": "JSON_SCHEMA_TYPE",
								"id": 22
							}
						]
					},
					"defaultValue": " new Map<GOLANG_TYPE, JSON_SCHEMA_TYPE>()"
				},
				{
					"id": 16,
					"name": "JSON_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type enumerations\nhttps://developers.google.com/discovery/v1/type-format\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.3.2",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 18,
							"character": 22
						},
						{
							"fileName": "common/types.ts",
							"line": 19,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "any"
							},
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							}
						]
					},
					"defaultValue": " strEnum([\"any\", \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\"])"
				},
				{
					"id": 24,
					"name": "RTtoJSONTypeMap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 25,
							"name": "RTtoJSONTypeMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a {{JSON_SCHEMA_TYPE}}",
								"tags": [
									{
										"tag": "constructor",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 26,
									"name": "rtType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "GOLANG_TYPE",
										"id": 20
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_SCHEMA_TYPE",
								"id": 22
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 83,
							"character": 31
						}
					]
				},
				{
					"id": 10,
					"name": "strEnum",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 11,
							"name": "strEnum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 12,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 13,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "common/types.ts",
											"line": 4,
											"character": 55
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 4,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						15,
						9,
						22,
						8
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						20,
						18,
						23,
						16
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						24,
						10
					]
				}
			],
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				502,
				367,
				121,
				463,
				27,
				1
			]
		}
	]
}