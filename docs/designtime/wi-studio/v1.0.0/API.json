{
	"id": 0,
	"name": "Web Integrator Studio (wi-studio) SDK ",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 69,
			"name": "EnumValidationState",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Field Validation State Enumeration"
			},
			"children": [
				{
					"id": 70,
					"name": "WI_READONLY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The field is read only based on the bit flag",
						"tags": [
							{
								"tag": "type",
								"text": "{number}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 118,
							"character": 15
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 72,
					"name": "WI_VALID",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The field is valid based on the bit flag",
						"tags": [
							{
								"tag": "type",
								"text": "{number}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 128,
							"character": 12
						}
					],
					"defaultValue": "8"
				},
				{
					"id": 71,
					"name": "WI_VISIBLE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " The field is visible based on the bit flag",
						"tags": [
							{
								"tag": "type",
								"text": "{number}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 123,
							"character": 14
						}
					],
					"defaultValue": "4"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						70,
						72,
						71
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/validation.ts",
					"line": 113,
					"character": 31
				}
			]
		},
		{
			"id": 905,
			"name": "AbstractContribActionProvider",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Abstract Action Provider"
			},
			"children": [
				{
					"id": 906,
					"name": "handleAction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 907,
							"name": "handleAction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "abstract handle action function"
							},
							"parameters": [
								{
									"id": 908,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IContributionTypes",
										"id": 432
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IContribActionProvider.handleAction",
								"id": 239
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 101,
							"character": 25
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IContribActionProvider.handleAction",
						"id": 238
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						906
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 96,
					"character": 51
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IContribActionProvider",
					"id": 237
				}
			]
		},
		{
			"id": 895,
			"name": "AbstractContribFieldProvider",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Abstract contrib field provider"
			},
			"children": [
				{
					"id": 896,
					"name": "getFieldValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 897,
							"name": "getFieldValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "getFieldValue"
							},
							"parameters": [
								{
									"id": 898,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IContributionTypes",
										"id": 432
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IContribFieldProvider.getFieldValue",
								"id": 235
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 68,
							"character": 26
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IContribFieldProvider.getFieldValue",
						"id": 234
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						896
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 56,
					"character": 50
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IContribFieldProvider",
					"id": 233
				}
			]
		},
		{
			"id": 888,
			"name": "AbstractContribValidationProvider",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Abstract Validation Provider"
			},
			"children": [
				{
					"id": 889,
					"name": "validate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 890,
							"name": "validate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "validate"
							},
							"parameters": [
								{
									"id": 891,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IContributionTypes",
										"id": 432
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationResult",
										"id": 73
									},
									{
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 73
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IContribValidationProvider.validate",
								"id": 231
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 41,
							"character": 21
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IContribValidationProvider.validate",
						"id": 230
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						889
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 29,
					"character": 55
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IContribValidationProvider",
					"id": 229
				}
			]
		},
		{
			"id": 818,
			"name": "AbstractSwaggerNodeVisitor",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 819,
					"name": "visitEnterSwagger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 820,
							"name": "visitEnterSwagger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 821,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNode",
										"id": 663
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitEnterSwagger",
								"id": 789
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1227,
							"character": 30
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitEnterSwagger",
						"id": 788
					}
				},
				{
					"id": 825,
					"name": "visitEnterSwaggerInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 826,
							"name": "visitEnterSwaggerInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 827,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerInfoNode",
										"id": 667
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitEnterSwaggerInfo",
								"id": 795
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1230,
							"character": 34
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitEnterSwaggerInfo",
						"id": 794
					}
				},
				{
					"id": 843,
					"name": "visitEnterSwaggerMethod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 844,
							"name": "visitEnterSwaggerMethod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 845,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodNode",
										"id": 685
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitEnterSwaggerMethod",
								"id": 813
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1239,
							"character": 36
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitEnterSwaggerMethod",
						"id": 812
					}
				},
				{
					"id": 837,
					"name": "visitEnterSwaggerMethods",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 838,
							"name": "visitEnterSwaggerMethods",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 839,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodsNode",
										"id": 679
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitEnterSwaggerMethods",
								"id": 807
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1236,
							"character": 37
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitEnterSwaggerMethods",
						"id": 806
					}
				},
				{
					"id": 831,
					"name": "visitEnterSwaggerPaths",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 832,
							"name": "visitEnterSwaggerPaths",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 833,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerPathsNode",
										"id": 673
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitEnterSwaggerPaths",
								"id": 801
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1233,
							"character": 35
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitEnterSwaggerPaths",
						"id": 800
					}
				},
				{
					"id": 822,
					"name": "visitLeaveSwagger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 823,
							"name": "visitLeaveSwagger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 824,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNode",
										"id": 663
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitLeaveSwagger",
								"id": 792
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1228,
							"character": 30
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitLeaveSwagger",
						"id": 791
					}
				},
				{
					"id": 828,
					"name": "visitLeaveSwaggerInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 829,
							"name": "visitLeaveSwaggerInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 830,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerInfoNode",
										"id": 667
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitLeaveSwaggerInfo",
								"id": 798
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1231,
							"character": 34
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitLeaveSwaggerInfo",
						"id": 797
					}
				},
				{
					"id": 846,
					"name": "visitLeaveSwaggerMethod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 847,
							"name": "visitLeaveSwaggerMethod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 848,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodNode",
										"id": 685
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitLeaveSwaggerMethod",
								"id": 816
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1240,
							"character": 36
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitLeaveSwaggerMethod",
						"id": 815
					}
				},
				{
					"id": 840,
					"name": "visitLeaveSwaggerMethods",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 841,
							"name": "visitLeaveSwaggerMethods",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 842,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodsNode",
										"id": 679
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitLeaveSwaggerMethods",
								"id": 810
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1237,
							"character": 37
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitLeaveSwaggerMethods",
						"id": 809
					}
				},
				{
					"id": 834,
					"name": "visitLeaveSwaggerPaths",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 835,
							"name": "visitLeaveSwaggerPaths",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 836,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerPathsNode",
										"id": 673
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitLeaveSwaggerPaths",
								"id": 804
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1234,
							"character": 35
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitLeaveSwaggerPaths",
						"id": 803
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						819,
						825,
						843,
						837,
						831,
						822,
						828,
						846,
						840,
						834
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1226,
					"character": 48
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "SwaggerVisitor",
					"id": 853
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "ISwaggerNodeVisitor",
					"id": 787
				}
			]
		},
		{
			"id": 294,
			"name": "ActionResult",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Action Result implementation"
			},
			"children": [
				{
					"id": 300,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"signatures": [
						{
							"id": 301,
							"name": "new ActionResult",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"parameters": [
								{
									"id": 302,
									"name": "result",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationError",
												"id": 34
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ActionResult",
								"id": 294
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 811,
							"character": 5
						}
					]
				},
				{
					"id": 296,
					"name": "result",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 802,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "IValidationError",
								"id": 34
							},
							{
								"type": "reference",
								"name": "IAuthenticationResult",
								"id": 270
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "IActionResult.result",
						"id": 259
					}
				},
				{
					"id": 295,
					"name": "success",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 801,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "IActionResult.success",
						"id": 258
					}
				},
				{
					"id": 311,
					"name": "getResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 312,
							"name": "getResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "get Result Data",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.getResult",
								"id": 269
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 855,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IActionResult.getResult",
						"id": 268
					}
				},
				{
					"id": 303,
					"name": "isSuccess",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 304,
							"name": "isSuccess",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns if the action is successful or not",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.isSuccess",
								"id": 261
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 827,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IActionResult.isSuccess",
						"id": 260
					}
				},
				{
					"id": 308,
					"name": "setResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 309,
							"name": "setResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set result data",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 310,
									"name": "result",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationError",
												"id": 34
											},
											{
												"type": "reference",
												"name": "IAuthenticationResult",
												"id": 270
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IActionResult",
								"id": 257
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.setResult",
								"id": 266
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 846,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IActionResult.setResult",
						"id": 265
					}
				},
				{
					"id": 305,
					"name": "setSuccess",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 306,
							"name": "setSuccess",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "set success or failure boolean state",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 307,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IActionResult",
								"id": 257
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.setSuccess",
								"id": 263
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 836,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IActionResult.setSuccess",
						"id": 262
					}
				},
				{
					"id": 297,
					"name": "newActionResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 298,
							"name": "newActionResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "static constructor",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 299,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationError",
												"id": 34
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IActionResult",
								"id": 257
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 809,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						300
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						296,
						295
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						311,
						303,
						308,
						305,
						297
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 800,
					"character": 25
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IActionResult",
					"id": 257
				}
			]
		},
		{
			"id": 274,
			"name": "AuthenticationResult",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "AuthenticationResult implementation"
			},
			"children": [
				{
					"id": 281,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "constructor"
					},
					"signatures": [
						{
							"id": 282,
							"name": "new AuthenticationResult",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "constructor"
							},
							"parameters": [
								{
									"id": 283,
									"name": "atype",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"name": "AUTHENTICATION_TYPE",
										"id": 419
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AuthenticationResult",
								"id": 274
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 733,
							"character": 5
						}
					]
				},
				{
					"id": 277,
					"name": "authData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 724,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "IOAuthData",
						"id": 375
					},
					"implementationOf": {
						"type": "reference",
						"name": "IAuthenticationResult.authData",
						"id": 273
					}
				},
				{
					"id": 275,
					"name": "authType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 722,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "AUTHENTICATION_TYPE",
						"id": 419
					},
					"implementationOf": {
						"type": "reference",
						"name": "IAuthenticationResult.authType",
						"id": 271
					}
				},
				{
					"id": 276,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 723,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "IConnectorContribution",
						"id": 209
					},
					"implementationOf": {
						"type": "reference",
						"name": "IAuthenticationResult.context",
						"id": 272
					}
				},
				{
					"id": 289,
					"name": "getAuthData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 290,
							"name": "getAuthData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Authentication Data Object {{IOAuthData}} which holds the information for {AUTHENTICATION_TYPE.BASIC}\nOR\nReturns the Authentication Data Object {{IOAuthData}} which holds\nthe information for {AUTHENTICATION_TYPE.OAUTH1} | {AUTHENTICATION_TYPE.OAUTH2} |{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\ntype authentication mechanisms. The contribution developer needs to provide this information based on which\nthe contribution mechanism will introspect the callback return state information. It is not assumed that every authentication\ntype will not have this information requirement as it may not involve a callback. In case of OAUTH type authentication\nit is also not assumed that the state information is available by introspecting a fixed parameter name e.g. \"state\" so\nthe contribution developer need to provide this based on the SAAS authentication provider specifications.",
								"returns": "| {IBasicAuthData}\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IOAuthData",
										"id": 375
									},
									{
										"type": "reference",
										"name": "IBasicAuthData",
										"id": 373
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 775,
							"character": 15
						}
					]
				},
				{
					"id": 284,
					"name": "getContext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 285,
							"name": "getContext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n",
								"tags": [
									{
										"tag": "desc",
										"text": "Returns the Connector contribution JSON object which has the\nwhole connection context object passed to the Handler or Provider\nand gives the connector contribution mechanism to identify the connection\ninstance being created."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 209
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 750,
							"character": 14
						}
					]
				},
				{
					"id": 291,
					"name": "setAuthData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 292,
							"name": "setAuthData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the Authentication Data Object {{IOAuthData}} which holds the information for {AUTHENTICATION_TYPE.BASIC}\nOR\nSets the Authentication Data Object {{IOAuthData}} which holds\nthe information for {AUTHENTICATION_TYPE.OAUTH1} | {AUTHENTICATION_TYPE.OAUTH2} |{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\ntype authentication mechanisms. The contribution developer needs to provide this information based on which\nthe contribution mechanism will introspect the callback return state information. It is not assumed that every authentication\ntype will not have this information requirement as it may not involve a callback. In case of OAUTH type authentication\nit is also not assumed that the state information is available by introspecting a fixed parameter name e.g. \"state\" so\nthe contribution developer need to provide this based on the SAAS authentication provider specifications."
							},
							"parameters": [
								{
									"id": 293,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IOAuthData",
										"id": 375
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 791,
							"character": 15
						}
					]
				},
				{
					"id": 286,
					"name": "setContext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 287,
							"name": "setContext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "desc",
										"text": "Sets the connection context object passed to the Handler or Provider\nand gives the connector contribution mechanism to identify the connection"
									}
								]
							},
							"parameters": [
								{
									"id": 288,
									"name": "ctx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IConnectorContribution",
										"id": 209
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 759,
							"character": 14
						}
					]
				},
				{
					"id": 278,
					"name": "newAuthenticationResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 279,
							"name": "newAuthenticationResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "static constructor",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 280,
									"name": "atype",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "AUTHENTICATION_TYPE",
										"id": 419
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IAuthenticationResult",
								"id": 270
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 731,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						281
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						277,
						275,
						276
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						289,
						284,
						291,
						286,
						278
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 721,
					"character": 33
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IAuthenticationResult",
					"id": 270
				}
			]
		},
		{
			"id": 693,
			"name": "BaseNode",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 694,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 696,
							"name": "new BaseNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 697,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BaseNode",
								"id": 693
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1070,
							"character": 49
						}
					]
				},
				{
					"id": 695,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1071,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 703,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 704,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 705,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "INode.accept",
								"id": 661
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1079,
							"character": 19
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "INode.accept",
						"id": 660
					}
				},
				{
					"id": 698,
					"name": "getName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 699,
							"name": "getName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1072,
							"character": 11
						}
					]
				},
				{
					"id": 700,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 701,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 702,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1076,
							"character": 11
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						694
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						695
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						703,
						698,
						700
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1070,
					"character": 30
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "SwaggerNode",
					"id": 706
				},
				{
					"type": "reference",
					"name": "SwaggerInfoNode",
					"id": 719
				},
				{
					"type": "reference",
					"name": "SwaggerPathsNode",
					"id": 734
				},
				{
					"type": "reference",
					"name": "SwaggerMethodsNode",
					"id": 749
				},
				{
					"type": "reference",
					"name": "SwaggerMethodNode",
					"id": 766
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				}
			]
		},
		{
			"id": 127,
			"name": "ContributionTypeConverter",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Contribution type converter from Flogo types"
			},
			"children": [
				{
					"id": 128,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 129,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 130,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CONTRIBUTION_TYPE",
								"id": 393
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 17,
							"character": 28
						}
					]
				},
				{
					"id": 131,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 132,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 133,
									"name": "ctype",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 393
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 29,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						128,
						131
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 16,
					"character": 38
				}
			]
		},
		{
			"id": 378,
			"name": "OAuthData",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "IOAuthData implementation",
				"tags": [
					{
						"tag": "desc",
						"text": "Helper class to create {{IOAuthData}} objects\n"
					}
				]
			},
			"children": [
				{
					"id": 385,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "constructor"
					},
					"signatures": [
						{
							"id": 386,
							"name": "new OAuthData",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "constructor"
							},
							"parameters": [
								{
									"id": 387,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 388,
									"name": "stateQueryParam",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "OAuthData",
								"id": 378
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1071,
							"character": 5
						}
					]
				},
				{
					"id": 379,
					"name": "authLoginUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1060,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "IOAuthData.authLoginUrl",
						"id": 376
					}
				},
				{
					"id": 380,
					"name": "authStateQueryParam",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1061,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "IOAuthData.authStateQueryParam",
						"id": 377
					}
				},
				{
					"id": 389,
					"name": "getAuthLoginURL",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 390,
							"name": "getAuthLoginURL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n",
								"tags": [
									{
										"tag": "desc",
										"text": "Returns the Authentication Login URL provided by the Connector without any state information parameters"
									},
									{
										"tag": "example",
										"text": "https://login.salesforce.com/services/oauth2/authorize?response_type=code&client_id=CLIENTID&redirect_uri=REDIRECTURL&display=popup&prompt=login consent\n where REDIRECT_URL=https://localdev-integration.cloud.tibco.com/wistudio/connectiondetails\n NOTE: state information parameter for Salesforce \"state\" is not part of the URL"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1090,
							"character": 19
						}
					]
				},
				{
					"id": 391,
					"name": "getAuthStateQueryParam",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 392,
							"name": "getAuthStateQueryParam",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the property which tells the Contribution Model what is the state information parameter name being used by the OAUTH provider\nto return state of the Application before making the authentication request to the SAAS authentication provider.",
								"returns": "\n",
								"tags": [
									{
										"tag": "example",
										"text": "For Saleforce the state information parameter is \"state\""
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1100,
							"character": 26
						}
					]
				},
				{
					"id": 381,
					"name": "newOAuthData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 382,
							"name": "newOAuthData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "static constructor",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 383,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 384,
									"name": "stateQueryParam",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "OAuthData",
								"id": 378
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1069,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						385
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						379,
						380
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						389,
						391,
						381
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 1059,
					"character": 22
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IOAuthData",
					"id": 375
				}
			]
		},
		{
			"id": 612,
			"name": "Swagger",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 628,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 629,
							"name": "new Swagger",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 630,
									"name": "spec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Swagger",
								"id": 612
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 210,
							"character": 40
						}
					]
				},
				{
					"id": 616,
					"name": "basePath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 199,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.basePath",
						"id": 577
					}
				},
				{
					"id": 618,
					"name": "consumes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 201,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.consumes",
						"id": 579
					}
				},
				{
					"id": 621,
					"name": "definitions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 204,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerDefinitionsDictionary",
						"id": 552
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.definitions",
						"id": 582
					}
				},
				{
					"id": 627,
					"name": "externalDocs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 210,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerExternalDocs",
						"id": 449
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.externalDocs",
						"id": 588
					}
				},
				{
					"id": 615,
					"name": "host",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 198,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.host",
						"id": 576
					}
				},
				{
					"id": 614,
					"name": "info",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 197,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerInfo",
						"id": 442
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.info",
						"id": 575
					}
				},
				{
					"id": 622,
					"name": "parameters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 205,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerParametersDictionary",
						"id": 555
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.parameters",
						"id": 583
					}
				},
				{
					"id": 620,
					"name": "paths",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 203,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerPathsDictionary",
						"id": 510
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.paths",
						"id": 581
					}
				},
				{
					"id": 619,
					"name": "produces",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 202,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.produces",
						"id": 580
					}
				},
				{
					"id": 623,
					"name": "responses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 206,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerResponseDictionary",
						"id": 543
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.responses",
						"id": 584
					}
				},
				{
					"id": 617,
					"name": "schemes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 200,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.schemes",
						"id": 578
					}
				},
				{
					"id": 625,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 208,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ISwaggerSecurity",
							"id": 561
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.security",
						"id": 586
					}
				},
				{
					"id": 624,
					"name": "securityDefinitions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 207,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerSecurityDefinitions",
						"id": 558
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.securityDefinitions",
						"id": 585
					}
				},
				{
					"id": 613,
					"name": "swagger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 196,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.swagger",
						"id": 574
					}
				},
				{
					"id": 626,
					"name": "tags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 209,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ISwaggerTags",
							"id": 546
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.tags",
						"id": 587
					}
				},
				{
					"id": 634,
					"name": "getAppName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 635,
							"name": "getAppName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwagger.getAppName",
								"id": 590
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 235,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.getAppName",
						"id": 589
					}
				},
				{
					"id": 653,
					"name": "getFlowName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 654,
							"name": "getFlowName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 655,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 656,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwagger.getFlowName",
								"id": 609
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 302,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.getFlowName",
						"id": 608
					}
				},
				{
					"id": 638,
					"name": "getMethods",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 639,
							"name": "getMethods",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 640,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwagger.getMethods",
								"id": 594
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 247,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.getMethods",
						"id": 593
					}
				},
				{
					"id": 641,
					"name": "getParameters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 642,
							"name": "getParameters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 643,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 644,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwagger.getParameters",
								"id": 597
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 257,
							"character": 17
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.getParameters",
						"id": 596
					}
				},
				{
					"id": 636,
					"name": "getPaths",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 637,
							"name": "getPaths",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwagger.getPaths",
								"id": 592
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 239,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.getPaths",
						"id": 591
					}
				},
				{
					"id": 645,
					"name": "getResponse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 646,
							"name": "getResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 647,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 648,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 649,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwagger.getResponse",
								"id": 601
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 269,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.getResponse",
						"id": 600
					}
				},
				{
					"id": 650,
					"name": "resolveRefs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 651,
							"name": "resolveRefs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 652,
									"name": "$ref",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwagger.resolveRefs",
								"id": 606
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 285,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwagger.resolveRefs",
						"id": 605
					}
				},
				{
					"id": 631,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 632,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 633,
									"name": "spec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "unknown",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 216,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						628
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						616,
						618,
						621,
						627,
						615,
						614,
						622,
						620,
						619,
						623,
						617,
						625,
						624,
						613,
						626
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						634,
						653,
						638,
						641,
						636,
						645,
						650,
						631
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 194,
					"character": 20
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "ISwagger",
					"id": 573
				}
			]
		},
		{
			"id": 719,
			"name": "SwaggerInfoNode",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 720,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 722,
							"name": "new SwaggerInfoNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 723,
									"name": "info",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SwaggerInfoNode",
								"id": 719
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseNode.__constructor",
								"id": 694
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1109,
							"character": 75
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseNode.__constructor",
						"id": 694
					}
				},
				{
					"id": 721,
					"name": "info",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1110,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 726,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 727,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 728,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseNode.accept",
								"id": 703
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerInfoNode.accept",
								"id": 671
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1118,
							"character": 10
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseNode.accept",
						"id": 703
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerInfoNode.accept",
						"id": 670
					}
				},
				{
					"id": 729,
					"name": "getName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 730,
							"name": "getName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseNode.getName",
								"id": 698
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1072,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseNode.getName",
						"id": 698
					}
				},
				{
					"id": 724,
					"name": "getTitle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 725,
							"name": "getTitle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerInfoNode.getTitle",
								"id": 669
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1114,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerInfoNode.getTitle",
						"id": 668
					}
				},
				{
					"id": 731,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 732,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 733,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseNode.setName",
								"id": 700
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1076,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseNode.setName",
						"id": 700
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						720
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						721
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						726,
						729,
						724,
						731
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1109,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "BaseNode",
					"id": 693
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				},
				{
					"type": "reference",
					"name": "ISwaggerInfoNode",
					"id": 667
				}
			]
		},
		{
			"id": 766,
			"name": "SwaggerMethodNode",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 767,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 770,
							"name": "new SwaggerMethodNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 771,
									"name": "methodData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "ISwaggerMethods",
												"id": 494
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ISwaggerParameter",
													"id": 470
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ISwaggerReference",
													"id": 550
												}
											}
										]
									}
								},
								{
									"id": 772,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SwaggerMethodNode",
								"id": 766
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseNode.__constructor",
								"id": 694
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1174,
							"character": 79
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseNode.__constructor",
						"id": 694
					}
				},
				{
					"id": 769,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1175,
							"character": 120
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 768,
					"name": "methodData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1175,
							"character": 34
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "ISwaggerMethods",
								"id": 494
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ISwaggerParameter",
									"id": 470
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ISwaggerReference",
									"id": 550
								}
							}
						]
					}
				},
				{
					"id": 779,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 780,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 781,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseNode.accept",
								"id": 703
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerMethodNode.accept",
								"id": 691
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1201,
							"character": 10
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseNode.accept",
						"id": 703
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerMethodNode.accept",
						"id": 690
					}
				},
				{
					"id": 777,
					"name": "getFlowName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 778,
							"name": "getFlowName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1193,
							"character": 15
						}
					]
				},
				{
					"id": 782,
					"name": "getName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 783,
							"name": "getName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseNode.getName",
								"id": 698
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1072,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseNode.getName",
						"id": 698
					}
				},
				{
					"id": 773,
					"name": "getParameters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 774,
							"name": "getParameters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ISwaggerParameter",
											"id": 470
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ISwaggerReference",
											"id": 550
										}
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerMethodNode.getParameters",
								"id": 687
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1179,
							"character": 17
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerMethodNode.getParameters",
						"id": 686
					}
				},
				{
					"id": 775,
					"name": "getResponses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 776,
							"name": "getResponses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ISwaggerResponseDictionary",
								"id": 543
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerMethodNode.getResponses",
								"id": 689
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1186,
							"character": 16
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerMethodNode.getResponses",
						"id": 688
					}
				},
				{
					"id": 784,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 785,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 786,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseNode.setName",
								"id": 700
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1076,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseNode.setName",
						"id": 700
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						767
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						769,
						768
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						779,
						777,
						782,
						773,
						775,
						784
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1174,
					"character": 30
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "BaseNode",
					"id": 693
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				},
				{
					"type": "reference",
					"name": "ISwaggerMethodNode",
					"id": 685
				}
			]
		},
		{
			"id": 749,
			"name": "SwaggerMethodsNode",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 750,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 753,
							"name": "new SwaggerMethodsNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 754,
									"name": "methods",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodsDictionary",
										"id": 507
									}
								},
								{
									"id": 755,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SwaggerMethodsNode",
								"id": 749
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseNode.__constructor",
								"id": 694
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1147,
							"character": 81
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseNode.__constructor",
						"id": 694
					}
				},
				{
					"id": 751,
					"name": "methods",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1148,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerMethodsDictionary",
						"id": 507
					}
				},
				{
					"id": 752,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1148,
							"character": 72
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 758,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 759,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 760,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseNode.accept",
								"id": 703
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerMethodsNode.accept",
								"id": 683
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1160,
							"character": 10
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseNode.accept",
						"id": 703
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerMethodsNode.accept",
						"id": 682
					}
				},
				{
					"id": 756,
					"name": "getMethods",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 757,
							"name": "getMethods",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerMethodsNode.getMethods",
								"id": 681
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1152,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerMethodsNode.getMethods",
						"id": 680
					}
				},
				{
					"id": 761,
					"name": "getName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 762,
							"name": "getName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseNode.getName",
								"id": 698
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1072,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseNode.getName",
						"id": 698
					}
				},
				{
					"id": 763,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 764,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 765,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseNode.setName",
								"id": 700
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1076,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseNode.setName",
						"id": 700
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						750
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						751,
						752
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						758,
						756,
						761,
						763
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1147,
					"character": 31
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "BaseNode",
					"id": 693
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				},
				{
					"type": "reference",
					"name": "ISwaggerMethodsNode",
					"id": 679
				}
			]
		},
		{
			"id": 706,
			"name": "SwaggerNode",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 707,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 709,
							"name": "new SwaggerNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 710,
									"name": "jsondata",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SwaggerNode",
								"id": 706
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseNode.__constructor",
								"id": 694
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1083,
							"character": 67
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseNode.__constructor",
						"id": 694
					}
				},
				{
					"id": 708,
					"name": "jsondata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1084,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 711,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 712,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 713,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseNode.accept",
								"id": 703
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNode.accept",
								"id": 665
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1087,
							"character": 10
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseNode.accept",
						"id": 703
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNode.accept",
						"id": 664
					}
				},
				{
					"id": 714,
					"name": "getName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 715,
							"name": "getName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseNode.getName",
								"id": 698
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1072,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseNode.getName",
						"id": 698
					}
				},
				{
					"id": 716,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 717,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 718,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseNode.setName",
								"id": 700
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1076,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseNode.setName",
						"id": 700
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						707
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						708
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						711,
						714,
						716
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1083,
					"character": 24
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "BaseNode",
					"id": 693
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				},
				{
					"type": "reference",
					"name": "ISwaggerNode",
					"id": 663
				}
			]
		},
		{
			"id": 849,
			"name": "SwaggerNodeFactory",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 850,
					"name": "createNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 851,
							"name": "createNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 852,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "INode",
								"id": 659
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1244,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						850
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1243,
					"character": 31
				}
			]
		},
		{
			"id": 734,
			"name": "SwaggerPathsNode",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 735,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 737,
							"name": "new SwaggerPathsNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 738,
									"name": "paths",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerPathsDictionary",
										"id": 510
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SwaggerPathsNode",
								"id": 734
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseNode.__constructor",
								"id": 694
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1124,
							"character": 77
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseNode.__constructor",
						"id": 694
					}
				},
				{
					"id": 736,
					"name": "paths",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1125,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerPathsDictionary",
						"id": 510
					}
				},
				{
					"id": 741,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 742,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 743,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseNode.accept",
								"id": 703
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerPathsNode.accept",
								"id": 677
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1133,
							"character": 10
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseNode.accept",
						"id": 703
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerPathsNode.accept",
						"id": 676
					}
				},
				{
					"id": 744,
					"name": "getName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 745,
							"name": "getName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseNode.getName",
								"id": 698
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1072,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseNode.getName",
						"id": 698
					}
				},
				{
					"id": 739,
					"name": "getPaths",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 740,
							"name": "getPaths",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ISwaggerPathsDictionary",
								"id": 510
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerPathsNode.getPaths",
								"id": 675
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1129,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerPathsNode.getPaths",
						"id": 674
					}
				},
				{
					"id": 746,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 747,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 748,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseNode.setName",
								"id": 700
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1076,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseNode.setName",
						"id": 700
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						735
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						736
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						741,
						744,
						739,
						746
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1124,
					"character": 29
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "BaseNode",
					"id": 693
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				},
				{
					"type": "reference",
					"name": "ISwaggerPathsNode",
					"id": 673
				}
			]
		},
		{
			"id": 853,
			"name": "SwaggerVisitor",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 854,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 856,
							"name": "new SwaggerVisitor",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 857,
									"name": "swaggerSpec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SwaggerVisitor",
								"id": 853
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1259,
							"character": 64
						}
					]
				},
				{
					"id": 855,
					"name": "swaggerSpec",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1261,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 858,
					"name": "visitEnterSwagger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 859,
							"name": "visitEnterSwagger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 860,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNode",
										"id": 663
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSwaggerNodeVisitor.visitEnterSwagger",
								"id": 819
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitEnterSwagger",
								"id": 789
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1265,
							"character": 21
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSwaggerNodeVisitor.visitEnterSwagger",
						"id": 819
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitEnterSwagger",
						"id": 788
					}
				},
				{
					"id": 864,
					"name": "visitEnterSwaggerInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 865,
							"name": "visitEnterSwaggerInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 866,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerInfoNode",
										"id": 667
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSwaggerNodeVisitor.visitEnterSwaggerInfo",
								"id": 825
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitEnterSwaggerInfo",
								"id": 795
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1273,
							"character": 25
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSwaggerNodeVisitor.visitEnterSwaggerInfo",
						"id": 825
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitEnterSwaggerInfo",
						"id": 794
					}
				},
				{
					"id": 882,
					"name": "visitEnterSwaggerMethod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 883,
							"name": "visitEnterSwaggerMethod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 884,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodNode",
										"id": 685
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSwaggerNodeVisitor.visitEnterSwaggerMethod",
								"id": 843
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitEnterSwaggerMethod",
								"id": 813
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1297,
							"character": 27
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSwaggerNodeVisitor.visitEnterSwaggerMethod",
						"id": 843
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitEnterSwaggerMethod",
						"id": 812
					}
				},
				{
					"id": 876,
					"name": "visitEnterSwaggerMethods",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 877,
							"name": "visitEnterSwaggerMethods",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 878,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodsNode",
										"id": 679
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSwaggerNodeVisitor.visitEnterSwaggerMethods",
								"id": 837
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitEnterSwaggerMethods",
								"id": 807
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1289,
							"character": 28
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSwaggerNodeVisitor.visitEnterSwaggerMethods",
						"id": 837
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitEnterSwaggerMethods",
						"id": 806
					}
				},
				{
					"id": 870,
					"name": "visitEnterSwaggerPaths",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 871,
							"name": "visitEnterSwaggerPaths",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 872,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerPathsNode",
										"id": 673
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSwaggerNodeVisitor.visitEnterSwaggerPaths",
								"id": 831
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitEnterSwaggerPaths",
								"id": 801
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1281,
							"character": 26
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSwaggerNodeVisitor.visitEnterSwaggerPaths",
						"id": 831
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitEnterSwaggerPaths",
						"id": 800
					}
				},
				{
					"id": 861,
					"name": "visitLeaveSwagger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 862,
							"name": "visitLeaveSwagger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 863,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNode",
										"id": 663
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSwaggerNodeVisitor.visitLeaveSwagger",
								"id": 822
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitLeaveSwagger",
								"id": 792
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1269,
							"character": 21
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSwaggerNodeVisitor.visitLeaveSwagger",
						"id": 822
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitLeaveSwagger",
						"id": 791
					}
				},
				{
					"id": 867,
					"name": "visitLeaveSwaggerInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 868,
							"name": "visitLeaveSwaggerInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 869,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerInfoNode",
										"id": 667
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSwaggerNodeVisitor.visitLeaveSwaggerInfo",
								"id": 828
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitLeaveSwaggerInfo",
								"id": 798
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1277,
							"character": 25
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSwaggerNodeVisitor.visitLeaveSwaggerInfo",
						"id": 828
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitLeaveSwaggerInfo",
						"id": 797
					}
				},
				{
					"id": 885,
					"name": "visitLeaveSwaggerMethod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 886,
							"name": "visitLeaveSwaggerMethod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 887,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodNode",
										"id": 685
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSwaggerNodeVisitor.visitLeaveSwaggerMethod",
								"id": 846
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitLeaveSwaggerMethod",
								"id": 816
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1301,
							"character": 27
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSwaggerNodeVisitor.visitLeaveSwaggerMethod",
						"id": 846
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitLeaveSwaggerMethod",
						"id": 815
					}
				},
				{
					"id": 879,
					"name": "visitLeaveSwaggerMethods",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 880,
							"name": "visitLeaveSwaggerMethods",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 881,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodsNode",
										"id": 679
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSwaggerNodeVisitor.visitLeaveSwaggerMethods",
								"id": 840
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitLeaveSwaggerMethods",
								"id": 810
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1293,
							"character": 28
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSwaggerNodeVisitor.visitLeaveSwaggerMethods",
						"id": 840
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitLeaveSwaggerMethods",
						"id": 809
					}
				},
				{
					"id": 873,
					"name": "visitLeaveSwaggerPaths",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 874,
							"name": "visitLeaveSwaggerPaths",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 875,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerPathsNode",
										"id": 673
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSwaggerNodeVisitor.visitLeaveSwaggerPaths",
								"id": 834
							},
							"implementationOf": {
								"type": "reference",
								"name": "ISwaggerNodeVisitor.visitLeaveSwaggerPaths",
								"id": 804
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1285,
							"character": 26
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSwaggerNodeVisitor.visitLeaveSwaggerPaths",
						"id": 834
					},
					"implementationOf": {
						"type": "reference",
						"name": "ISwaggerNodeVisitor.visitLeaveSwaggerPaths",
						"id": 803
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						854
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						855
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						858,
						864,
						882,
						876,
						870,
						861,
						867,
						885,
						879,
						873
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1259,
					"character": 27
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractSwaggerNodeVisitor",
					"id": 818
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "ISwaggerNodeVisitor",
					"id": 787
				}
			]
		},
		{
			"id": 47,
			"name": "ValidationError",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Validation Error Implementation"
			},
			"children": [
				{
					"id": 52,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constructor - Create a new validation error instance",
						"tags": [
							{
								"tag": "constructor",
								"text": ""
							}
						]
					},
					"signatures": [
						{
							"id": 56,
							"name": "new ValidationError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructor - Create a new validation error instance",
								"tags": [
									{
										"tag": "constructor",
										"text": ""
									}
								]
							},
							"parameters": [
								{
									"id": 57,
									"name": "errorCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58,
									"name": "errorMsg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"name": "STRING_MAP",
										"id": 7,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ValidationError",
								"id": 47
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 61,
							"character": 5
						}
					]
				},
				{
					"id": 55,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "\n"
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 70,
							"character": 81
						}
					],
					"type": {
						"type": "reference",
						"name": "STRING_MAP",
						"id": 7,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "IValidationError.context",
						"id": 37
					}
				},
				{
					"id": 53,
					"name": "errorCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 70,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "IValidationError.errorCode",
						"id": 35
					}
				},
				{
					"id": 54,
					"name": "errorMsg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 70,
							"character": 57
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "IValidationError.errorMsg",
						"id": 36
					}
				},
				{
					"id": 60,
					"name": "getErrorCode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 61,
							"name": "getErrorCode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns Error Code",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.getErrorCode",
								"id": 39
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 80,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationError.getErrorCode",
						"id": 38
					}
				},
				{
					"id": 62,
					"name": "getErrorMessage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 63,
							"name": "getErrorMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns Error Message",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.getErrorMessage",
								"id": 41
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 88,
							"character": 26
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationError.getErrorMessage",
						"id": 40
					}
				},
				{
					"id": 66,
					"name": "setContext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 67,
							"name": "setContext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Set the error context"
							},
							"parameters": [
								{
									"id": 68,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "STRING_MAP",
										"id": 7,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.setContext",
								"id": 45
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 105,
							"character": 21
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationError.setContext",
						"id": 44
					}
				},
				{
					"id": 64,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 65,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a string representation of the error",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.toString",
								"id": 43
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 96,
							"character": 19
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationError.toString",
						"id": 42
					}
				},
				{
					"id": 48,
					"name": "newError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 49,
							"name": "newError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Static Constructor Create a new validation error instance",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 50,
									"name": "errorCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 51,
									"name": "errorMsg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IValidationError",
								"id": 34
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 59,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						52
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						55,
						53,
						54
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						60,
						62,
						66,
						64,
						48
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/validation.ts",
					"line": 52,
					"character": 28
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IValidationError",
					"id": 34
				}
			]
		},
		{
			"id": 97,
			"name": "ValidationResult",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Validation Result Implementation"
			},
			"children": [
				{
					"id": 103,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "constructor",
								"text": ""
							}
						]
					},
					"signatures": [
						{
							"id": 104,
							"name": "new ValidationResult",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "constructor",
										"text": ""
									}
								]
							},
							"parameters": [
								{
									"id": 105,
									"name": "errors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationError",
												"id": 34
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IValidationError",
													"id": 34
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ValidationResult",
								"id": 97
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 216,
							"character": 5
						}
					]
				},
				{
					"id": 99,
					"name": "errors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 207,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IValidationError",
							"id": 34
						}
					},
					"defaultValue": " []",
					"implementationOf": {
						"type": "reference",
						"name": "IValidationResult.errors",
						"id": 75
					}
				},
				{
					"id": 98,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 206,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "EnumValidationState",
								"id": 69
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"defaultValue": " EnumValidationState.WI_VALID | EnumValidationState.WI_VISIBLE",
					"implementationOf": {
						"type": "reference",
						"name": "IValidationResult.state",
						"id": 74
					}
				},
				{
					"id": 125,
					"name": "getErrors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 126,
							"name": "getErrors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IValidationError",
									"id": 34
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.getErrors",
								"id": 96
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 268,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationResult.getErrors",
						"id": 95
					}
				},
				{
					"id": 106,
					"name": "isReadOnly",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 107,
							"name": "isReadOnly",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isReadOnly",
								"id": 77
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 236,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationResult.isReadOnly",
						"id": 76
					}
				},
				{
					"id": 110,
					"name": "isValid",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 111,
							"name": "isValid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isValid",
								"id": 81
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 244,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationResult.isValid",
						"id": 80
					}
				},
				{
					"id": 108,
					"name": "isVisible",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 109,
							"name": "isVisible",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isVisible",
								"id": 79
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 240,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationResult.isVisible",
						"id": 78
					}
				},
				{
					"id": 121,
					"name": "setError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 122,
							"name": "setError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 123,
									"name": "errorCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 124,
									"name": "errorMessage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IValidationResult",
								"id": 73
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setError",
								"id": 92
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 263,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationResult.setError",
						"id": 91
					}
				},
				{
					"id": 112,
					"name": "setReadOnly",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 113,
							"name": "setReadOnly",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 114,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IValidationResult",
								"id": 73
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setReadOnly",
								"id": 83
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 248,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationResult.setReadOnly",
						"id": 82
					}
				},
				{
					"id": 118,
					"name": "setValid",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 119,
							"name": "setValid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 120,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IValidationResult",
								"id": 73
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setValid",
								"id": 89
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 258,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationResult.setValid",
						"id": 88
					}
				},
				{
					"id": 115,
					"name": "setVisible",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 116,
							"name": "setVisible",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 117,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IValidationResult",
								"id": 73
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setVisible",
								"id": 86
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 253,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IValidationResult.setVisible",
						"id": 85
					}
				},
				{
					"id": 100,
					"name": "newValidationResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 101,
							"name": "newValidationResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Static constructor",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 102,
									"name": "errors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationError",
												"id": 34
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IValidationError",
													"id": 34
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IValidationResult",
								"id": 73
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 214,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						103
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						99,
						98
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						125,
						106,
						110,
						108,
						121,
						112,
						118,
						115,
						100
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/validation.ts",
					"line": 203,
					"character": 29
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IValidationResult",
					"id": 73
				}
			]
		},
		{
			"id": 978,
			"name": "WiContributionUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": " Contribution Utility\n This utility class provides functions to get User defined connections,\n Server Configuration, Context Object unique id's"
			},
			"children": [
				{
					"id": 983,
					"name": "getConnection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 984,
							"name": "getConnection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a connection for a given connection name",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 985,
									"name": "http",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								},
								{
									"id": 986,
									"name": "connection_id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IConnectorContribution",
												"id": 209
											}
										]
									},
									{
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 828,
							"character": 31
						}
					]
				},
				{
					"id": 979,
					"name": "getConnections",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 980,
							"name": "getConnections",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a list of available connections for a given connector type",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 981,
									"name": "http",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								},
								{
									"id": 982,
									"name": "connector_type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IConnectorContribution",
											"id": 209
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 801,
							"character": 32
						}
					]
				},
				{
					"id": 987,
					"name": "getEnvironment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 988,
							"name": "getEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets Server Environment Information",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 989,
									"name": "http",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								},
								{
									"id": 990,
									"name": "envName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 877,
							"character": 32
						}
					]
				},
				{
					"id": 991,
					"name": "getUniqueId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 992,
							"name": "getUniqueId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the unique id for a given context object",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 993,
									"name": "ctx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "IContributionTypes",
										"id": 432
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 890,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						983,
						979,
						987,
						991
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 795,
					"character": 32
				}
			]
		},
		{
			"id": 994,
			"name": "WiProxyCORSUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Proxy Cross Origin Resource Sharing Utility",
				"tags": [
					{
						"tag": "desc",
						"text": "This utility routes client side HTTP requests via a Server proxy to SAAS\nproviders which have CORS restrictions when accessing the APIs.\n"
					}
				]
			},
			"children": [
				{
					"id": 1003,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {},
					"signatures": [
						{
							"id": 1006,
							"name": "new WiProxyCORSUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {},
							"parameters": [
								{
									"id": 1007,
									"name": "http",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								},
								{
									"id": 1008,
									"name": "remoteUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WiProxyCORSUtils",
								"id": 994
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 914,
							"character": 5
						}
					]
				},
				{
					"id": 998,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 904,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 996,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 902,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "STRING_MAP",
						"id": 7,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1004,
					"name": "http",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 921,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "Http"
					}
				},
				{
					"id": 997,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 903,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "HTTP_METHOD",
						"id": 422
					},
					"defaultValue": " HTTP_METHOD.GET"
				},
				{
					"id": 995,
					"name": "queryParams",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 901,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "STRING_MAP",
						"id": 7,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1005,
					"name": "remoteUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"comment": {
						"shortText": "\n"
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 921,
							"character": 53
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1020,
					"name": "addBody",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1021,
							"name": "addBody",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {},
							"parameters": [
								{
									"id": 1022,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WiProxyCORSUtils",
								"id": 994
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 961,
							"character": 11
						}
					]
				},
				{
					"id": 1013,
					"name": "addHeader",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1014,
							"name": "addHeader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 1015,
									"name": "header",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1016,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WiProxyCORSUtils",
								"id": 994
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 943,
							"character": 13
						}
					]
				},
				{
					"id": 1017,
					"name": "addMethod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1018,
							"name": "addMethod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {},
							"parameters": [
								{
									"id": 1019,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "HTTP_METHOD",
										"id": 422
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WiProxyCORSUtils",
								"id": 994
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 952,
							"character": 13
						}
					]
				},
				{
					"id": 1009,
					"name": "addQueryParams",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1010,
							"name": "addQueryParams",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 1011,
									"name": "param",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1012,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WiProxyCORSUtils",
								"id": 994
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 932,
							"character": 18
						}
					]
				},
				{
					"id": 1025,
					"name": "buildUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1026,
							"name": "buildUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1027,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1028,
									"name": "parameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "STRING_MAP",
										"id": 7,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 996,
							"character": 12
						}
					]
				},
				{
					"id": 1023,
					"name": "send",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1024,
							"name": "send",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {},
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Response"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 969,
							"character": 8
						}
					]
				},
				{
					"id": 999,
					"name": "createRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1000,
							"name": "createRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 1001,
									"name": "http",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								},
								{
									"id": 1002,
									"name": "remoteUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Remote URL is the URL from r"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WiProxyCORSUtils",
								"id": 994
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 912,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1003
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						998,
						996,
						1004,
						997,
						995,
						1005
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1020,
						1013,
						1017,
						1009,
						1025,
						1023,
						999
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 900,
					"character": 29
				}
			]
		},
		{
			"id": 913,
			"name": "WiServiceContribution",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The [[WiServiceContribution]] being the abstract base class is extended  by a contribution provider handler [[WiServiceHandlerContribution]]\nor a [[WiServiceProviderContribution]]. The user can choose either implmentation model to suit their needs.",
				"text": "## [[WiServiceHandlerContribution]]\nThe [[WiServiceHandlerContribution]] represents one way of providing contribution where the contribution will have its own single implementation\nof [[WiServiceHandlerContribution]] and the @[[Injectable]] class decorator will tell the loader that it is loadable by Angular and the single class\nwill provide handler functions for value, validation and action. The @WiContrib({}) deoorator with null metadata indicates it is a one abstract class\n[[WiServiceHandlerContribution]] implmentation.\n\n ### Example [[WiServiceHandlerContribution]]  Contribution Handler Typescript file\n ```\n import {Injectable, Injector} from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import {ValidationResult} from \"../../../../common/models/validation\";\n import {IActivityContribution, ActionResult, IActionResult} from \"../../../../common/models/contrib\";\n import {WiContrib, WiServiceHandlerContribution} from \"../../wi-contrib\";\n import {Http} from \"@angular/http\";\n import {IValidationResult} from \"../../../../common/models/validation\";\n\n @WiContrib({})\n @Injectable()\n export class RestContributionHandler extends WiServiceHandlerContribution {\n     constructor(injector: Injector, http: Http) {\n      super(injector, http);\n  }\n\n  value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      return Observable.create(observer => {\n          observer.next(\"\");\n     });\n  }\n\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n      return Observable.create(observer => {\n           let vresult: IValidationResult = ValidationResult.newValidationResult();\n           observer.next(vresult);\n       });\n  }\n\n   action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n      return Observable.create(observer => {\n           let aresult: IActionResult = ActionResult.newActionResult();\n           observer.next(aresult);\n       });\n   }\n }\n ```\n ### Example [[WiServiceHandlerContribution]]  Contribution Module Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./rest-contrib\";\n import {WiServiceContribution} from \"../../wi-contrib\";\n @NgModule({\n   imports: [CommonModule,HttpModule],\n   exports: [],\n   declarations: [],\n   entryComponents: [],\n   providers: [{\n     provide: WiServiceContribution,\n     useClass: RestContributionHandler\n   }],\n   bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n## [[WiServiceProviderContribution]]\nThe [[WiServiceProviderContribution]] represents another way of providing contribution\nwhere each field will have its own [[AbstractContribFieldProvider]],[[AbstractContribValidationProvider]],[[AbstractActionProvider]] and the [[WiServiceProviderContribution]]\nimplementation with @[[WiContrib]] decorator will tell the loader that the module is of type [[WiServiceProviderContribution]]. Each field value,validation\nand action provider is also a Angular injectable Service and must be decorated by @Injectable(). The contribution service is also a Angular injectable service\nas decorated with @Injectable() and also a Contribution Service with @WiContrib(metadata) deoorator.\n\n ### Example [[WiServiceProviderContribution]]  Contribution Service Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./timer-contrib\";\n import {WiServiceContribution} from \"wi-contrib\";\n @NgModule({\n imports: [CommonModule,HttpModule],\n exports: [],\n declarations: [],\n entryComponents: [],\n providers: [\n  {\n    provide: WiServiceContribution,\n    useClass: TimerContribService\n  },\n  {\n    provide: Field1Provider,\n    useClass: Field1Provider\n  },\n  {\n    provide: Field1ValidationProvider,\n    useClass: Field1ValidationProvider\n  }],\n bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n ### Example [[WiServiceProviderContribution]]  Contribution Module Typescript file\n ```\n import { ValidationResult } from \"wi-studio/common/models/validation\";\n import { IActivityContribution, IContributionContext } from \"wi-studio/common/models/contrib\";\n import { Injectable, Inject, Injector } from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import { Http } from \"@angular/http\";\n import { AbstractContribFieldProvider, AbstractContribValidationProvider, WiContrib, WiServiceContribution } from \"wi-studio/app/wi-contrib\";\n import {IValidationResult} from \"wi-studio/common/models/validation\";\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n   getFieldValue(context: IActivityContribution): Observable<string[]> {\n       return Observable.create(observer => {\n           observer.next(\"\");\n      });\n   }}\n @Injectable()\n export class Field1ValidationProvider extends AbstractContribValidationProvider {\n    validate(context: IContributionContext): Observable<IValidationResult> {\n        return Observable.create(observer => {\n            // tslint:disable-next-line:no-bitwise\n            let vresult: IValidationResult = ValidationResult.newValidationResult();\n            observer.next(vresult);\n        });\n    }}\n\n @WiContrib({\n    validationProviders: [{\n           field: \"field1\",\n            useClass: Field1ValidationProvider\n        }],\n    fieldProviders: [{\n            field: \"field1\",\n            useClass: Field1Provider\n        }]\n })\n @Injectable()\n export class TimerContribService extends WiServiceProviderContribution {}\n```\n"
			},
			"decorators": [
				{
					"name": "Injectable",
					"type": {
						"type": "reference",
						"name": "Injectable"
					},
					"arguments": {}
				}
			],
			"children": [
				{
					"id": 914,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "constructor"
					},
					"signatures": [
						{
							"id": 917,
							"name": "new WiServiceContribution",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "constructor"
							},
							"parameters": [
								{
									"id": 918,
									"name": "_injector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"decorators": [
										{
											"name": "Inject",
											"type": {
												"type": "reference",
												"name": "Inject"
											},
											"arguments": {
												"token": "Injector"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Injector"
									}
								},
								{
									"id": 919,
									"name": "_http",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "\n"
									},
									"decorators": [
										{
											"name": "Inject",
											"type": {
												"type": "reference",
												"name": "Inject"
											},
											"arguments": {
												"token": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Http"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WiServiceContribution",
								"id": 913
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 386,
							"character": 81
						}
					]
				},
				{
					"id": 916,
					"name": "_http",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "\n"
					},
					"decorators": [
						{
							"name": "Inject",
							"type": {
								"type": "reference",
								"name": "Inject"
							},
							"arguments": {
								"token": "Http"
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 392,
							"character": 91
						}
					],
					"type": {
						"type": "reference",
						"name": "Http"
					}
				},
				{
					"id": 915,
					"name": "_injector",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true,
						"isOptional": true
					},
					"decorators": [
						{
							"name": "Inject",
							"type": {
								"type": "reference",
								"name": "Inject"
							},
							"arguments": {
								"token": "Injector"
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 392,
							"character": 51
						}
					],
					"type": {
						"type": "reference",
						"name": "Injector"
					}
				},
				{
					"id": 922,
					"name": "getAnnotations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 923,
							"name": "getAnnotations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"shortText": "get annotation from metadata"
							},
							"type": {
								"type": "reference",
								"name": "WiContribMetaData",
								"id": 909
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 412,
							"character": 28
						}
					]
				},
				{
					"id": 926,
					"name": "getHttp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 927,
							"name": "getHttp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"shortText": "Returns the [[Http]] object",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "Http"
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 431,
							"character": 21
						}
					]
				},
				{
					"id": 924,
					"name": "getInjector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 925,
							"name": "getInjector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"shortText": "Returns the injector",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "Injector"
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 422,
							"character": 25
						}
					]
				},
				{
					"id": 920,
					"name": "getType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 921,
							"name": "getType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "IServiceContributionType",
								"id": 433
							},
							"implementationOf": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 315
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 399,
							"character": 18
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IBaseServiceContribution.getType",
						"id": 314
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						914
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						916,
						915
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						922,
						926,
						924,
						920
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 386,
					"character": 43
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "WiServiceProviderContribution",
					"id": 928
				},
				{
					"type": "reference",
					"name": "WiServiceHandlerContribution",
					"id": 950
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IBaseServiceContribution",
					"id": 313
				}
			]
		},
		{
			"id": 950,
			"name": "WiServiceHandlerContribution",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "Abstract Service Handler Contribution\n## [[WiServiceHandlerContribution]]\nThe [[WiServiceHandlerContribution]] represents one way of providing contribution where the contribution will have its own single implementation\nof [[WiServiceHandlerContribution]] and the @[[Injectable]] class decorator will tell the loader that it is loadable by Angular and the single class\nwill provide handler functions for value, validation and action. The @WiContrib({}) deoorator with null metadata indicates it is a one abstract class\n[[WiServiceHandlerContribution]] implmentation.\n\n ### Example [[WiServiceHandlerContribution]]  Contribution Handler Typescript file\n ```\n import {Injectable, Injector} from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import {ValidationResult} from \"../../../../common/models/validation\";\n import {IActivityContribution, ActionResult, IActionResult} from \"../../../../common/models/contrib\";\n import {WiContrib, WiServiceHandlerContribution} from \"../../wi-contrib\";\n import {Http} from \"@angular/http\";\n import {IValidationResult} from \"../../../../common/models/validation\";\n\n @WiContrib({})\n @Injectable()\n export class RestContributionHandler extends WiServiceHandlerContribution {\n     constructor(injector: Injector, http: Http) {\n      super(injector, http);\n  }\n\n  value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      return Observable.create(observer => {\n          observer.next(\"\");\n     });\n  }\n\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n      return Observable.create(observer => {\n           let vresult: IValidationResult = ValidationResult.newValidationResult();\n           observer.next(vresult);\n       });\n  }\n\n   action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n      return Observable.create(observer => {\n           let aresult: IActionResult = ActionResult.newActionResult();\n           observer.next(aresult);\n       });\n   }\n }\n ```\n ### Example [[WiServiceHandlerContribution]]  Contribution Module Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./rest-contrib\";\n import {WiServiceContribution} from \"../../wi-contrib\";\n @NgModule({\n   imports: [CommonModule,HttpModule],\n   exports: [],\n   declarations: [],\n   entryComponents: [],\n   providers: [{\n     provide: WiServiceContribution,\n     useClass: RestContributionHandler\n   }],\n   bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Injectable",
					"type": {
						"type": "reference",
						"name": "Injectable"
					},
					"arguments": {}
				}
			],
			"children": [
				{
					"id": 951,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "constructor",
								"text": "\n*  ## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n}\n```"
							}
						]
					},
					"signatures": [
						{
							"id": 952,
							"name": "new WiServiceHandlerContribution",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "constructor",
										"text": "\n*  ## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n}\n```"
									}
								]
							},
							"parameters": [
								{
									"id": 953,
									"name": "injector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"decorators": [
										{
											"name": "Inject",
											"type": {
												"type": "reference",
												"name": "Inject"
											},
											"arguments": {
												"token": "Injector"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Injector"
									}
								},
								{
									"id": 954,
									"name": "http",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "\n"
									},
									"decorators": [
										{
											"name": "Inject",
											"type": {
												"type": "reference",
												"name": "Inject"
											},
											"arguments": {
												"token": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Http"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WiServiceHandlerContribution",
								"id": 950
							},
							"overwrites": {
								"type": "reference",
								"name": "WiServiceContribution.__constructor",
								"id": 914
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 654,
							"character": 123
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "WiServiceContribution.__constructor",
						"id": 914
					}
				},
				{
					"id": 965,
					"name": "action",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```\n"
							},
							{
								"tag": "param",
								"text": "",
								"param": "actionId"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 763,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 966,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 967,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 968,
											"name": "actionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 969,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 257
													}
												]
											},
											{
												"type": "reference",
												"name": "IActionResult",
												"id": 257
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 763,
									"character": 19
								}
							]
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "IWiServiceHandlerContribution.action",
						"id": 341
					}
				},
				{
					"id": 960,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```\n"
							},
							{
								"tag": "param",
								"text": "",
								"param": "fieldName"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 733,
							"character": 19
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 961,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 962,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 963,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 964,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 73
													}
												]
											},
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 73
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 733,
									"character": 20
								}
							]
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "IWiServiceHandlerContribution.validate",
						"id": 336
					}
				},
				{
					"id": 955,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
						"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
						"tags": [
							{
								"tag": "param",
								"text": "",
								"param": "fieldName"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 704,
							"character": 16
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 956,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 957,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 958,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 959,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 704,
									"character": 17
								}
							]
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "IWiServiceHandlerContribution.value",
						"id": 331
					}
				},
				{
					"id": 972,
					"name": "getAnnotations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 973,
							"name": "getAnnotations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"shortText": "get annotation from metadata"
							},
							"type": {
								"type": "reference",
								"name": "WiContribMetaData",
								"id": 909
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getAnnotations",
								"id": 922
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 412,
							"character": 28
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WiServiceContribution.getAnnotations",
						"id": 922
					}
				},
				{
					"id": 976,
					"name": "getHttp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 977,
							"name": "getHttp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"shortText": "Returns the [[Http]] object",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "Http"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getHttp",
								"id": 926
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 431,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WiServiceContribution.getHttp",
						"id": 926
					}
				},
				{
					"id": 974,
					"name": "getInjector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 975,
							"name": "getInjector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"shortText": "Returns the injector",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "Injector"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getInjector",
								"id": 924
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 422,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WiServiceContribution.getInjector",
						"id": 924
					}
				},
				{
					"id": 970,
					"name": "getType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 971,
							"name": "getType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "IServiceContributionType",
								"id": 433
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getType",
								"id": 920
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.getType",
								"id": 330
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 399,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WiServiceContribution.getType",
						"id": 920
					},
					"implementationOf": {
						"type": "reference",
						"name": "IWiServiceHandlerContribution.getType",
						"id": 329
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						951
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						965,
						960,
						955
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						972,
						976,
						974,
						970
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 654,
					"character": 50
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "WiServiceContribution",
					"id": 913
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IBaseServiceContribution",
					"id": 313
				},
				{
					"type": "reference",
					"name": "IWiServiceHandlerContribution",
					"id": 328
				}
			]
		},
		{
			"id": 928,
			"name": "WiServiceProviderContribution",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "Abstract Service Contribution\n## [[WiServiceProviderContribution]]\nThe [[WiServiceProviderContribution]] represents another way of providing contribution\nwhere each field will have its own [[AbstractContribFieldProvider]],[[AbstractContribValidationProvider]],[[AbstractActionProvider]] and the [[WiServiceProviderContribution]]\nimplementation with @[[WiContrib]] decorator will tell the loader that the module is of type [[WiServiceProviderContribution]]. Each field value,validation\nand action provider is also a Angular injectable Service and must be decorated by @Injectable(). The contribution service is also a Angular injectable service\nas decorated with @Injectable() and also a Contribution Service with @WiContrib(metadata) deoorator.\n\n ### Example [[WiServiceProviderContribution]]  Contribution Service Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./timer-contrib\";\n import {WiServiceContribution} from \"wi-contrib\";\n @NgModule({\n imports: [CommonModule,HttpModule],\n exports: [],\n declarations: [],\n entryComponents: [],\n providers: [\n  {\n    provide: WiServiceContribution,\n    useClass: TimerContribService\n  },\n  {\n    provide: Field1Provider,\n    useClass: Field1Provider\n  },\n  {\n    provide: Field1ValidationProvider,\n    useClass: Field1ValidationProvider\n  }],\n bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n ### Example [[WiServiceProviderContribution]]  Contribution Module Typescript file\n ```\n import { ValidationResult } from \"wi-studio/common/models/validation\";\n import { IActivityContribution, IContributionContext } from \"wi-studio/common/models/contrib\";\n import { Injectable, Inject, Injector } from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import { Http } from \"@angular/http\";\n import { AbstractContribFieldProvider, AbstractContribValidationProvider, WiContrib, WiServiceContribution } from \"wi-studio/app/wi-contrib\";\n import {IValidationResult} from \"wi-studio/common/models/validation\";\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n   getFieldValue(context: IActivityContribution): Observable<string[]> {\n       return Observable.create(observer => {\n           observer.next(\"\");\n      });\n   }}\n @Injectable()\n export class Field1ValidationProvider extends AbstractContribValidationProvider {\n    validate(context: IContributionContext): Observable<IValidationResult> {\n        return Observable.create(observer => {\n            // tslint:disable-next-line:no-bitwise\n            let vresult: IValidationResult = ValidationResult.newValidationResult();\n            observer.next(vresult);\n        });\n    }}\n\n @WiContrib({\n    validationProviders: [{\n           field: \"field1\",\n            useClass: Field1ValidationProvider\n        }],\n    fieldProviders: [{\n            field: \"field1\",\n            useClass: Field1Provider\n        }]\n })\n @Injectable()\n export class TimerContribService extends WiServiceProviderContribution {}\n```\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Injectable",
					"type": {
						"type": "reference",
						"name": "Injectable"
					},
					"arguments": {}
				}
			],
			"children": [
				{
					"id": 929,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "constructor"
					},
					"signatures": [
						{
							"id": 930,
							"name": "new WiServiceProviderContribution",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "constructor"
							},
							"parameters": [
								{
									"id": 931,
									"name": "injector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"decorators": [
										{
											"name": "Inject",
											"type": {
												"type": "reference",
												"name": "Inject"
											},
											"arguments": {
												"token": "Injector"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Injector"
									}
								},
								{
									"id": 932,
									"name": "http",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "\n"
									},
									"decorators": [
										{
											"name": "Inject",
											"type": {
												"type": "reference",
												"name": "Inject"
											},
											"arguments": {
												"token": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Http"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WiServiceProviderContribution",
								"id": 928
							},
							"overwrites": {
								"type": "reference",
								"name": "WiServiceContribution.__constructor",
								"id": 914
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 520,
							"character": 125
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "WiServiceContribution.__constructor",
						"id": 914
					}
				},
				{
					"id": 939,
					"name": "getActionHandler",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 940,
							"name": "getActionHandler",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "get action provider"
							},
							"parameters": [
								{
									"id": 941,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IContribActionProvider",
								"id": 237
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getActionHandler",
								"id": 324
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 569,
							"character": 20
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IWiServiceProviderContribution.getActionHandler",
						"id": 323
					}
				},
				{
					"id": 944,
					"name": "getAnnotations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 945,
							"name": "getAnnotations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"shortText": "get annotation from metadata"
							},
							"type": {
								"type": "reference",
								"name": "WiContribMetaData",
								"id": 909
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getAnnotations",
								"id": 922
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 412,
							"character": 28
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WiServiceContribution.getAnnotations",
						"id": 922
					}
				},
				{
					"id": 933,
					"name": "getFieldProvider",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 934,
							"name": "getFieldProvider",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "get field provider"
							},
							"parameters": [
								{
									"id": 935,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IContribFieldProvider",
								"id": 233
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getFieldProvider",
								"id": 318
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 535,
							"character": 20
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IWiServiceProviderContribution.getFieldProvider",
						"id": 317
					}
				},
				{
					"id": 948,
					"name": "getHttp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 949,
							"name": "getHttp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"shortText": "Returns the [[Http]] object",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "Http"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getHttp",
								"id": 926
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 431,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WiServiceContribution.getHttp",
						"id": 926
					}
				},
				{
					"id": 946,
					"name": "getInjector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 947,
							"name": "getInjector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"shortText": "Returns the injector",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "Injector"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getInjector",
								"id": 924
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 422,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WiServiceContribution.getInjector",
						"id": 924
					}
				},
				{
					"id": 942,
					"name": "getType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 943,
							"name": "getType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "IServiceContributionType",
								"id": 433
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getType",
								"id": 920
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getType",
								"id": 327
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 399,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WiServiceContribution.getType",
						"id": 920
					},
					"implementationOf": {
						"type": "reference",
						"name": "IWiServiceProviderContribution.getType",
						"id": 326
					}
				},
				{
					"id": 936,
					"name": "getValidationProvider",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 937,
							"name": "getValidationProvider",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "get validation provider"
							},
							"parameters": [
								{
									"id": 938,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IContribValidationProvider",
								"id": 229
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getValidationProvider",
								"id": 321
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 552,
							"character": 25
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "IWiServiceProviderContribution.getValidationProvider",
						"id": 320
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						929
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						939,
						944,
						933,
						948,
						946,
						942,
						936
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 520,
					"character": 51
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "WiServiceContribution",
					"id": 913
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IBaseServiceContribution",
					"id": 313
				},
				{
					"type": "reference",
					"name": "IWiServiceProviderContribution",
					"id": 316
				}
			]
		},
		{
			"id": 206,
			"name": "IActionDefinition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Action Definition interface"
			},
			"children": [
				{
					"id": 208,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Button display settings"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 403,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "IFieldDisplay",
						"id": 137
					}
				},
				{
					"id": 207,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Unique name to identify the button. If display name is not provided name will be used."
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 399,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						208,
						207
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 395,
					"character": 34
				}
			]
		},
		{
			"id": 257,
			"name": "IActionResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The result of any button action is return values."
			},
			"children": [
				{
					"id": 259,
					"name": "result",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "if the action is a failure then any associated errors are returned.\nOR Authentication Results OR any"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 660,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "IValidationError",
								"id": 34
							},
							{
								"type": "reference",
								"name": "IAuthenticationResult",
								"id": 270
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				},
				{
					"id": 258,
					"name": "success",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "property hold status if the action was a success or a failure"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 655,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 268,
					"name": "getResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 269,
							"name": "getResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "property getter for [[result]]",
								"returns": "\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationError",
										"id": 34
									},
									{
										"type": "reference",
										"name": "IAuthenticationResult",
										"id": 270
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 686,
							"character": 13
						}
					]
				},
				{
					"id": 260,
					"name": "isSuccess",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 261,
							"name": "isSuccess",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": " getter function of [[success]] property",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 666,
							"character": 13
						}
					]
				},
				{
					"id": 265,
					"name": "setResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 266,
							"name": "setResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "property setter for [[result]]",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 267,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationError",
												"id": 34
											},
											{
												"type": "reference",
												"name": "IAuthenticationResult",
												"id": 270
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IActionResult",
								"id": 257
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 680,
							"character": 13
						}
					]
				},
				{
					"id": 262,
					"name": "setSuccess",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 263,
							"name": "setSuccess",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "property setter for [[success]]",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 264,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IActionResult",
								"id": 257
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 673,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						259,
						258
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						268,
						260,
						265,
						262
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 651,
					"character": 30
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "ActionResult",
					"id": 294
				}
			]
		},
		{
			"id": 192,
			"name": "IActivityContribution",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Activity Contribution"
			},
			"children": [
				{
					"id": 205,
					"name": "appId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 69,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionContext.appId",
						"id": 136
					}
				},
				{
					"id": 204,
					"name": "changelist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 68,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionContext.changelist",
						"id": 135
					}
				},
				{
					"id": 198,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Display Settings"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 375,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "IContributionDisplay",
						"id": 167
					}
				},
				{
					"id": 199,
					"name": "inputs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Activity Inputs"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 379,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IFieldDefinition",
							"id": 158
						}
					}
				},
				{
					"id": 193,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Activity name, must be unique, no spaces"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 355,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 200,
					"name": "outputs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Activity Outputs"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 383,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IFieldDefinition",
							"id": 158
						}
					}
				},
				{
					"id": 197,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "URI reference for the contribution"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 371,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 194,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Title to display on the activity tile"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 359,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 196,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 367,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 195,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Version number, use semver versioning"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 363,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 201,
					"name": "getField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 202,
							"name": "getField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a field from inputs,outputs. Field Names must be unique within the activity"
							},
							"parameters": [
								{
									"id": 203,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDefinition",
								"id": 158
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 389,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						205,
						204,
						198,
						199,
						193,
						200,
						197,
						194,
						196,
						195
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						201
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 351,
					"character": 38
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "IContributionContext",
					"id": 134
				}
			]
		},
		{
			"id": 270,
			"name": "IAuthenticationResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Represents the Authentication Result data structure returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
				"text": "The {{IAuthenticationResult}} is returned with the {{IActionResult}} result\nparameter.\n"
			},
			"children": [
				{
					"id": 273,
					"name": "authData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Depending on {{AUTHENTICATION_TYPE}} authData will hold different\ntypes of Data Interfaces.\n * {{AUTHENTICATION_TYPE.BASIC}} : {{IBasicAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH1}} : {{IOAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH2}} : {{IOAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}} : {{IOAuthData}}"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 714,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "IOAuthData",
								"id": 375
							},
							{
								"type": "reference",
								"name": "IBasicAuthData",
								"id": 373
							}
						]
					}
				},
				{
					"id": 271,
					"name": "authType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The {{AUTHENTICATION_TYPE}} being used for the action result"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 701,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "AUTHENTICATION_TYPE",
						"id": 419
					}
				},
				{
					"id": 272,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The contribution context being used in the action handler OR provider"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 705,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "IConnectorContribution",
						"id": 209
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						273,
						271,
						272
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 697,
					"character": 38
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AuthenticationResult",
					"id": 274
				}
			]
		},
		{
			"id": 313,
			"name": "IBaseServiceContribution",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Base Service Contribution"
			},
			"children": [
				{
					"id": 314,
					"name": "getType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 315,
							"name": "getType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "IServiceContributionType",
								"id": 433
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 875,
							"character": 11
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						314
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 870,
					"character": 41
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "IWiServiceProviderContribution",
					"id": 316
				},
				{
					"type": "reference",
					"name": "IWiServiceHandlerContribution",
					"id": 328
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "WiServiceContribution",
					"id": 913
				},
				{
					"type": "reference",
					"name": "WiServiceHandlerContribution",
					"id": 950
				},
				{
					"type": "reference",
					"name": "WiServiceProviderContribution",
					"id": 928
				}
			]
		},
		{
			"id": 373,
			"name": "IBasicAuthData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Represents the OAUTH data structure in {{IAuthenticationResult}} returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
				"text": "Authentication Data Structure if {AUTHENTICATION_TYPE} is\n * {AUTHENTICATION_TYPE.BASIC}\n"
			},
			"children": [
				{
					"id": 374,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1025,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						374
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 1024,
					"character": 31
				}
			]
		},
		{
			"id": 155,
			"name": "IConnectionAllowedValue",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "desc",
						"text": "This interface defines the contract between the value provider of a field\nwhose display field type is {{DisplayFieldType.connection}}.\n"
					}
				]
			},
			"children": [
				{
					"id": 157,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This is a name which is either calculated or provided via field value\nin the connection JSON settings. In absence of name unique_id will be\nused for display as a drop down choice."
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 198,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 156,
					"name": "unique_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "desc",
								"text": "This is the unique id assigned to a new connection during creation"
							},
							{
								"tag": "example",
								"text": "uuid\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 192,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						157,
						156
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 187,
					"character": 40
				}
			]
		},
		{
			"id": 209,
			"name": "IConnectorContribution",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Connector Contribution"
			},
			"children": [
				{
					"id": 218,
					"name": "actions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Form Action configuration"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 463,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IActionDefinition",
							"id": 206
						}
					}
				},
				{
					"id": 220,
					"name": "appId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 69,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionContext.appId",
						"id": 136
					}
				},
				{
					"id": 219,
					"name": "changelist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 68,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionContext.changelist",
						"id": 135
					}
				},
				{
					"id": 216,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Display Settings"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 439,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "IContributionDisplay",
						"id": 167
					}
				},
				{
					"id": 215,
					"name": "keyfield",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Provider the field name in settings section which will hold identifiable\nname for the connection. In the absence of this keyfield the unique\nconnection record identifier e.g. uuid will be used for display."
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 435,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 210,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Connector name. Must be unique, no spaces"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 413,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 214,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "URI reference for connector"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 429,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 217,
					"name": "settings",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Static connector configurations e.g. connection name, connection description, connection configuration etc.",
						"text": "FOR {{AUTHENTICATION_TYPE}} IS {{AUTHENTICATION_TYPE.OAUTH1 }} | {{AUTHENTICATION_TYPE.OAUTH2 }} | {{AUTHENTICATION_TYPE.OAUTH2_TWOLEG }}\nFIXED ReEntry Field Name **WI_STUDIO_OAUTH_CONNECTOR_INFO** is mandatory.\n\nThis field is not required for other Authentication purposes where it does not\ninvolve a round trip to the third party auth system with a callback\nThe user can save all the required authentication tokens in this field which is\nthen used by the activity contribution developer to use this information.\n\n{\n  \"name\" : \"WI_STUDIO_OAUTH_CONNECTOR_INFO\",\n  \"type\" : \"string\",\n  \"display\": {\n     \"visible\": false\n  }\n }\n"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 459,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IFieldDefinition",
							"id": 158
						}
					}
				},
				{
					"id": 211,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Title to display on the connection tile"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 417,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 213,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 425,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 212,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Connector version. Must follow semver versioning"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 421,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						218,
						220,
						219,
						216,
						215,
						210,
						214,
						217,
						211,
						213,
						212
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 409,
					"character": 39
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "IContributionContext",
					"id": 134
				}
			]
		},
		{
			"id": 237,
			"name": "IContribActionProvider",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "interface Action handler provider"
			},
			"children": [
				{
					"id": 238,
					"name": "handleAction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 239,
							"name": "handleAction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "handle action",
								"returns": "\n",
								"tags": [
									{
										"tag": "typeparam",
										"text": "The generic type parameter indicating the value type being returned.",
										"param": "T"
									}
								]
							},
							"parameters": [
								{
									"id": 240,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "IContributionTypes",
										"id": 432
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 549,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						238
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 541,
					"character": 39
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractContribActionProvider",
					"id": 905
				}
			]
		},
		{
			"id": 902,
			"name": "IContribActionProviderMap",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Action Provider Map"
			},
			"children": [
				{
					"id": 903,
					"name": "field",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field Name"
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 86,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 904,
					"name": "useClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Provider Class"
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 90,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Type",
						"typeArguments": [
							{
								"type": "reference",
								"name": "IContribActionProvider",
								"id": 237
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						903,
						904
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 82,
					"character": 42
				}
			]
		},
		{
			"id": 233,
			"name": "IContribFieldProvider",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "interface Field Provider"
			},
			"children": [
				{
					"id": 234,
					"name": "getFieldValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 235,
							"name": "getFieldValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets Field Value",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 236,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "IContributionTypes",
										"id": 432
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 535,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						234
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 528,
					"character": 38
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractContribFieldProvider",
					"id": 895
				}
			]
		},
		{
			"id": 899,
			"name": "IContribFieldProviderMap",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "field provider map"
			},
			"children": [
				{
					"id": 900,
					"name": "field",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 75,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 901,
					"name": "useClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 76,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Type",
						"typeArguments": [
							{
								"type": "reference",
								"name": "IContribFieldProvider",
								"id": 233
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						900,
						901
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 74,
					"character": 41
				}
			]
		},
		{
			"id": 229,
			"name": "IContribValidationProvider",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "interface Validation provider"
			},
			"children": [
				{
					"id": 230,
					"name": "validate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 231,
							"name": "validate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "validate",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 232,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "IContributionTypes",
										"id": 432
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationResult",
										"id": 73
									},
									{
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 73
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 522,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						230
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 516,
					"character": 43
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractContribValidationProvider",
					"id": 888
				}
			]
		},
		{
			"id": 892,
			"name": "IContribValidationProviderMap",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "interface Validation provider map"
			},
			"children": [
				{
					"id": 893,
					"name": "field",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 48,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 894,
					"name": "useClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 49,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Type",
						"typeArguments": [
							{
								"type": "reference",
								"name": "IContribValidationProvider",
								"id": 229
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						893,
						894
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 47,
					"character": 46
				}
			]
		},
		{
			"id": 134,
			"name": "IContributionContext",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The UI form sends the IContributionContext"
			},
			"children": [
				{
					"id": 136,
					"name": "appId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 69,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 135,
					"name": "changelist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 68,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						136,
						135
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 67,
					"character": 37
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ITriggerContribution",
					"id": 177
				},
				{
					"type": "reference",
					"name": "IActivityContribution",
					"id": 192
				},
				{
					"type": "reference",
					"name": "IConnectorContribution",
					"id": 209
				}
			]
		},
		{
			"id": 167,
			"name": "IContributionDisplay",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Display attributes for the contribution"
			},
			"children": [
				{
					"id": 169,
					"name": "category",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Specifies the category of the contribution e.g. Salesforce,Marketo , default is \"General\""
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 259,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 173,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Description"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 275,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 172,
					"name": "largeIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the small icon path. The path is relative to the contribution folder root. i.e. icons/file.png"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 271,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 168,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "display name for the contribution"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 255,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 174,
					"name": "sections",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sections for dynamic tabs"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 279,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 171,
					"name": "smallIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the small icon path. The path is relative to the contribution folder root. i.e. icons/file.png"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 267,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 170,
					"name": "visible",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies if a contribution is visible and enabled"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 263,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						169,
						173,
						172,
						168,
						174,
						171,
						170
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 251,
					"character": 37
				}
			]
		},
		{
			"id": 241,
			"name": "IContributionHandler",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": " Contribution Handler interface",
				"tags": [
					{
						"tag": "description",
						"text": "A comtribution handler implementation provides the following handlers\n * value - value provider for the given field\n * validate - vrules provider for the given field\n * action - action handler for a given button.\n"
					}
				]
			},
			"children": [
				{
					"id": 252,
					"name": "action",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
							},
							{
								"tag": "param",
								"text": "",
								"param": "actionId"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 645,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 253,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 254,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 255,
											"name": "actionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 256,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 257
													}
												]
											},
											{
												"type": "reference",
												"name": "IActionResult",
												"id": 257
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 645,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 247,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
							},
							{
								"tag": "param",
								"text": "",
								"param": "fieldName"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 616,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 248,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 249,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 250,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 251,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 73
													}
												]
											},
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 73
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 616,
									"character": 13
								}
							]
						}
					}
				},
				{
					"id": 242,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
						"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
						"tags": [
							{
								"tag": "param",
								"text": "",
								"param": "fieldName"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 588,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 243,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 244,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 245,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 246,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 588,
									"character": 10
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						252,
						247,
						242
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 561,
					"character": 37
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "IWiServiceHandlerContribution",
					"id": 328
				}
			]
		},
		{
			"id": 158,
			"name": "IFieldDefinition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Field Definition"
			},
			"children": [
				{
					"id": 163,
					"name": "allowed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "specified allowed value for display field type \"dropdown\", keeping it same as flogo\nFor field display type == {{DisplayFieldType.connections}} then allowed property should\nreturn array of {{IConnectionAllowedValue}}"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 233,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IConnectionAllowedValue",
									"id": 155
								}
							}
						]
					}
				},
				{
					"id": 165,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Description"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 241,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 166,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Field display settings"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 245,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "IFieldDisplay",
						"id": 137
					}
				},
				{
					"id": 159,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "name of the field, not same as display name"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 215,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 162,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "specifies if the form field is required"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 227,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 164,
					"name": "section",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Used to place the field in a customized form tab section"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 237,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 160,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "data type of the field in string e.g. string,number"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 219,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "FieldType",
						"id": 429
					}
				},
				{
					"id": 161,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "value of the field"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 223,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						163,
						165,
						166,
						159,
						162,
						164,
						160,
						161
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 211,
					"character": 33
				}
			]
		},
		{
			"id": 137,
			"name": "IFieldDisplay",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Field display settings"
			},
			"children": [
				{
					"id": 148,
					"name": "buttonStyle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Button Styles when display type is button. Default style is \"btn-default\""
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 154,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "ButtonStyle",
						"id": 417
					}
				},
				{
					"id": 147,
					"name": "buttonType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the button type. Default type is \"button\""
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 150,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "ButtonType",
						"id": 415
					}
				},
				{
					"id": 141,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Descrption for the field"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 126,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 142,
					"name": "fileExtensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Used with display field type fileselector"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 130,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 153,
					"name": "inputSettingsOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Display in only Input Settings but not in mapper"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 175,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 143,
					"name": "mappable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "true when field is also shown in mapper, else false"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 134,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 138,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Named used in display"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 114,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 154,
					"name": "outputSettingsOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Display in only Output Settings but not in output tree"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 180,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 149,
					"name": "readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the widget in read-only mode"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 158,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 145,
					"name": "schema",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Used with display field type table"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 142,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 140,
					"name": "selection",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Used with display field type dropdown"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 122,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 152,
					"name": "settings",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Display in only mapper but not on input settings/ output settings even though there is display section"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 170,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 144,
					"name": "syntax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": " Used with display field type texteditor"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 138,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 139,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Display field type"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 118,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "DisplayFieldType",
						"id": 413
					}
				},
				{
					"id": 151,
					"name": "uri",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 165,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 150,
					"name": "valid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the field is valid or not"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 162,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 146,
					"name": "visible",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "specifies if the field is visible , the field is always enabled. The default is true."
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 146,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						148,
						147,
						141,
						142,
						153,
						143,
						138,
						154,
						149,
						145,
						140,
						152,
						144,
						139,
						151,
						150,
						146
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 110,
					"character": 30
				}
			]
		},
		{
			"id": 221,
			"name": "IFunctionArgs",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Function args"
			},
			"children": [
				{
					"id": 222,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Argument name"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 474,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 223,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Argument type"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 478,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						222,
						223
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 470,
					"character": 30
				}
			]
		},
		{
			"id": 224,
			"name": "IFunctionContribution",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Function contribution"
			},
			"children": [
				{
					"id": 227,
					"name": "args",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function argument definition"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 496,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IFunctionArgs",
							"id": 221
						}
					}
				},
				{
					"id": 226,
					"name": "category",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Function category"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 492,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 225,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Name of the function"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 488,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 228,
					"name": "return",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return type"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 500,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						227,
						226,
						225,
						228
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 484,
					"character": 38
				}
			]
		},
		{
			"id": 175,
			"name": "IHandlerDefinition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Endpoint Definition"
			},
			"children": [
				{
					"id": 176,
					"name": "settings",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Endpoint settings"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 297,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IFieldDefinition",
							"id": 158
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						176
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 293,
					"character": 35
				}
			]
		},
		{
			"id": 659,
			"name": "INode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Sample\nlet jsonData = `{\n\"swagger\": \"2.0\",\n\"info\": {\n\"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io)\",\n\"version\": \"1.0.0\",\n\"title\": \"Swagger Petstore\",\n\"termsOfService\": \"http://swagger.io/terms/\",\n\"contact\": {\n\"email\": \"apiteam@swagger.io\"\n},\n\"license\": {\n\"name\": \"Apache 2.0\",\n\"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n}\n},\n\"host\": \"petstore.swagger.io\",\n\"basePath\": \"/v2\",\n\"tags\": [\n{\n\"name\": \"pet\",\n\"description\": \"Everything about your Pets\",\n\"externalDocs\": {\n\"description\": \"Find out more\",\n\"url\": \"http://swagger.io\"\n}\n},\n{\n\"name\": \"store\",\n\"description\": \"Access to Petstore orders\"\n},\n{\n\"name\": \"user\",\n\"description\": \"Operations about user\",\n\"externalDocs\": {\n\"description\": \"Find out more about our store\",\n\"url\": \"http://swagger.io\"\n}\n}\n],\n\"schemes\": [\n\"http\"\n],\n\"paths\": {\n\"/pet\": {\n\"post\": {\n\"tags\": [\n\"pet\"\n],\n\"summary\": \"Add a new pet to the store\",\n\"description\": \"\",\n\"operationId\": \"addPet\",\n\"consumes\": [\n\"application/json\",\n\"application/xml\"\n],\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"in\": \"body\",\n\"name\": \"body\",\n\"description\": \"Pet object that needs to be added to the store\",\n\"required\": true,\n\"schema\": {\n\"$ref\": \"#/definitions/Pet\"\n}\n}\n],\n\"responses\": {\n\"405\": {\n\"description\": \"Invalid input\"\n}\n},\n\"security\": [\n{\n\"petstore_auth\": [\n\"write:pets\",\n\"read:pets\"\n]\n}\n]\n},\n\"put\": {\n\"tags\": [\n\"pet\"\n],\n\"summary\": \"Update an existing pet\",\n\"description\": \"\",\n\"operationId\": \"updatePet\",\n\"consumes\": [\n\"application/json\",\n\"application/xml\"\n],\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"in\": \"body\",\n\"name\": \"body\",\n\"description\": \"Pet object that needs to be added to the store\",\n\"required\": true,\n\"schema\": {\n\"$ref\": \"#/definitions/Pet\"\n}\n}\n],\n\"responses\": {\n\"400\": {\n\"description\": \"Invalid ID supplied\"\n},\n\"404\": {\n\"description\": \"Pet not found\"\n},\n\"405\": {\n\"description\": \"Validation exception\"\n}\n},\n\"security\": [\n{\n\"petstore_auth\": [\n\"write:pets\",\n\"read:pets\"\n]\n}\n]\n}\n},\n\"/pet/findByStatus\": {\n\"get\": {\n\"tags\": [\n\"pet\"\n],\n\"summary\": \"Finds Pets by status\",\n\"description\": \"Multiple status values can be provided with comma separated strings\",\n\"operationId\": \"findPetsByStatus\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"status\",\n\"in\": \"query\",\n\"description\": \"Status values that need to be considered for filter\",\n\"required\": true,\n\"type\": \"array\",\n\"items\": {\n\"type\": \"string\",\n\"enum\": [\n\"available\",\n\"pending\",\n\"sold\"\n],\n\"default\": \"available\"\n},\n\"collectionFormat\": \"multi\"\n}\n],\n\"responses\": {\n\"200\": {\n\"description\": \"successful operation\",\n\"schema\": {\n\"type\": \"array\",\n\"items\": {\n\"$ref\": \"#/definitions/Pet\"\n}\n}\n},\n\"400\": {\n\"description\": \"Invalid status value\"\n}\n},\n\"security\": [\n{\n\"petstore_auth\": [\n\"write:pets\",\n\"read:pets\"\n]\n}\n]\n}\n},\n\"/pet/findByTags\": {\n\"get\": {\n\"tags\": [\n\"pet\"\n],\n\"summary\": \"Finds Pets by tags\",\n\"description\": \"Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n\"operationId\": \"findPetsByTags\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"tags\",\n\"in\": \"query\",\n\"description\": \"Tags to filter by\",\n\"required\": true,\n\"type\": \"array\",\n\"items\": {\n\"type\": \"string\"\n},\n\"collectionFormat\": \"multi\"\n}\n],\n\"responses\": {\n\"200\": {\n\"description\": \"successful operation\",\n\"schema\": {\n\"type\": \"array\",\n\"items\": {\n\"$ref\": \"#/definitions/Pet\"\n}\n}\n},\n\"400\": {\n\"description\": \"Invalid tag value\"\n}\n},\n\"security\": [\n{\n\"petstore_auth\": [\n\"write:pets\",\n\"read:pets\"\n]\n}\n],\n\"deprecated\": true\n}\n},\n\"/pet/{petId}\": {\n\"get\": {\n\"tags\": [\n\"pet\"\n],\n\"summary\": \"Find pet by ID\",\n\"description\": \"Returns a single pet\",\n\"operationId\": \"getPetById\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"petId\",\n\"in\": \"path\",\n\"description\": \"ID of pet to return\",\n\"required\": true,\n\"type\": \"integer\",\n\"format\": \"int64\"\n}\n],\n\"responses\": {\n\"200\": {\n\"description\": \"successful operation\",\n\"schema\": {\n\"$ref\": \"#/definitions/Pet\"\n}\n},\n\"400\": {\n\"description\": \"Invalid ID supplied\"\n},\n\"404\": {\n\"description\": \"Pet not found\"\n}\n},\n\"security\": [\n{\n\"api_key\": []\n}\n]\n},\n\"post\": {\n\"tags\": [\n\"pet\"\n],\n\"summary\": \"Updates a pet in the store with form data\",\n\"description\": \"\",\n\"operationId\": \"updatePetWithForm\",\n\"consumes\": [\n\"application/x-www-form-urlencoded\"\n],\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"petId\",\n\"in\": \"path\",\n\"description\": \"ID of pet that needs to be updated\",\n\"required\": true,\n\"type\": \"integer\",\n\"format\": \"int64\"\n},\n{\n\"name\": \"name\",\n\"in\": \"formData\",\n\"description\": \"Updated name of the pet\",\n\"required\": false,\n\"type\": \"string\"\n},\n{\n\"name\": \"status\",\n\"in\": \"formData\",\n\"description\": \"Updated status of the pet\",\n\"required\": false,\n\"type\": \"string\"\n}\n],\n\"responses\": {\n\"405\": {\n\"description\": \"Invalid input\"\n}\n},\n\"security\": [\n{\n\"petstore_auth\": [\n\"write:pets\",\n\"read:pets\"\n]\n}\n]\n},\n\"delete\": {\n\"tags\": [\n\"pet\"\n],\n\"summary\": \"Deletes a pet\",\n\"description\": \"\",\n\"operationId\": \"deletePet\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"api_key\",\n\"in\": \"header\",\n\"required\": false,\n\"type\": \"string\"\n},\n{\n\"name\": \"petId\",\n\"in\": \"path\",\n\"description\": \"Pet id to delete\",\n\"required\": true,\n\"type\": \"integer\",\n\"format\": \"int64\"\n}\n],\n\"responses\": {\n\"400\": {\n\"description\": \"Invalid ID supplied\"\n},\n\"404\": {\n\"description\": \"Pet not found\"\n}\n},\n\"security\": [\n{\n\"petstore_auth\": [\n\"write:pets\",\n\"read:pets\"\n]\n}\n]\n}\n},\n\"/pet/{petId}/uploadImage\": {\n\"post\": {\n\"tags\": [\n\"pet\"\n],\n\"summary\": \"uploads an image\",\n\"description\": \"\",\n\"operationId\": \"uploadFile\",\n\"consumes\": [\n\"multipart/form-data\"\n],\n\"produces\": [\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"petId\",\n\"in\": \"path\",\n\"description\": \"ID of pet to update\",\n\"required\": true,\n\"type\": \"integer\",\n\"format\": \"int64\"\n},\n{\n\"name\": \"additionalMetadata\",\n\"in\": \"formData\",\n\"description\": \"Additional data to pass to server\",\n\"required\": false,\n\"type\": \"string\"\n},\n{\n\"name\": \"file\",\n\"in\": \"formData\",\n\"description\": \"file to upload\",\n\"required\": false,\n\"type\": \"file\"\n}\n],\n\"responses\": {\n\"200\": {\n\"description\": \"successful operation\",\n\"schema\": {\n\"$ref\": \"#/definitions/ApiResponse\"\n}\n}\n},\n\"security\": [\n{\n\"petstore_auth\": [\n\"write:pets\",\n\"read:pets\"\n]\n}\n]\n}\n},\n\"/store/inventory\": {\n\"get\": {\n\"tags\": [\n\"store\"\n],\n\"summary\": \"Returns pet inventories by status\",\n\"description\": \"Returns a map of status codes to quantities\",\n\"operationId\": \"getInventory\",\n\"produces\": [\n\"application/json\"\n],\n\"parameters\": [],\n\"responses\": {\n\"200\": {\n\"description\": \"successful operation\",\n\"schema\": {\n\"type\": \"object\",\n\"additionalProperties\": {\n\"type\": \"integer\",\n\"format\": \"int32\"\n}\n}\n}\n},\n\"security\": [\n{\n\"api_key\": []\n}\n]\n}\n},\n\"/store/order\": {\n\"post\": {\n\"tags\": [\n\"store\"\n],\n\"summary\": \"Place an order for a pet\",\n\"description\": \"\",\n\"operationId\": \"placeOrder\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"in\": \"body\",\n\"name\": \"body\",\n\"description\": \"order placed for purchasing the pet\",\n\"required\": true,\n\"schema\": {\n\"$ref\": \"#/definitions/Order\"\n}\n}\n],\n\"responses\": {\n\"200\": {\n\"description\": \"successful operation\",\n\"schema\": {\n\"$ref\": \"#/definitions/Order\"\n}\n},\n\"400\": {\n\"description\": \"Invalid Order\"\n}\n}\n}\n},\n\"/store/order/{orderId}\": {\n\"get\": {\n\"tags\": [\n\"store\"\n],\n\"summary\": \"Find purchase order by ID\",\n\"description\": \"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions\",\n\"operationId\": \"getOrderById\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"orderId\",\n\"in\": \"path\",\n\"description\": \"ID of pet that needs to be fetched\",\n\"required\": true,\n\"type\": \"integer\",\n\"maximum\": 10,\n\"minimum\": 1,\n\"format\": \"int64\"\n}\n],\n\"responses\": {\n\"200\": {\n\"description\": \"successful operation\",\n\"schema\": {\n\"$ref\": \"#/definitions/Order\"\n}\n},\n\"400\": {\n\"description\": \"Invalid ID supplied\"\n},\n\"404\": {\n\"description\": \"Order not found\"\n}\n}\n},\n\"delete\": {\n\"tags\": [\n\"store\"\n],\n\"summary\": \"Delete purchase order by ID\",\n\"description\": \"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors\",\n\"operationId\": \"deleteOrder\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"orderId\",\n\"in\": \"path\",\n\"description\": \"ID of the order that needs to be deleted\",\n\"required\": true,\n\"type\": \"integer\",\n\"minimum\": 1,\n\"format\": \"int64\"\n}\n],\n\"responses\": {\n\"400\": {\n\"description\": \"Invalid ID supplied\"\n},\n\"404\": {\n\"description\": \"Order not found\"\n}\n}\n}\n},\n\"/user\": {\n\"post\": {\n\"tags\": [\n\"user\"\n],\n\"summary\": \"Create user\",\n\"description\": \"This can only be done by the logged in user.\",\n\"operationId\": \"createUser\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"in\": \"body\",\n\"name\": \"body\",\n\"description\": \"Created user object\",\n\"required\": true,\n\"schema\": {\n\"$ref\": \"#/definitions/User\"\n}\n}\n],\n\"responses\": {\n\"default\": {\n\"description\": \"successful operation\"\n}\n}\n}\n},\n\"/user/createWithArray\": {\n\"post\": {\n\"tags\": [\n\"user\"\n],\n\"summary\": \"Creates list of users with given input array\",\n\"description\": \"\",\n\"operationId\": \"createUsersWithArrayInput\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"in\": \"body\",\n\"name\": \"body\",\n\"description\": \"List of user object\",\n\"required\": true,\n\"schema\": {\n\"type\": \"array\",\n\"items\": {\n\"$ref\": \"#/definitions/User\"\n}\n}\n}\n],\n\"responses\": {\n\"default\": {\n\"description\": \"successful operation\"\n}\n}\n}\n},\n\"/user/createWithList\": {\n\"post\": {\n\"tags\": [\n\"user\"\n],\n\"summary\": \"Creates list of users with given input array\",\n\"description\": \"\",\n\"operationId\": \"createUsersWithListInput\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"in\": \"body\",\n\"name\": \"body\",\n\"description\": \"List of user object\",\n\"required\": true,\n\"schema\": {\n\"type\": \"array\",\n\"items\": {\n\"$ref\": \"#/definitions/User\"\n}\n}\n}\n],\n\"responses\": {\n\"default\": {\n\"description\": \"successful operation\"\n}\n}\n}\n},\n\"/user/login\": {\n\"get\": {\n\"tags\": [\n\"user\"\n],\n\"summary\": \"Logs user into the system\",\n\"description\": \"\",\n\"operationId\": \"loginUser\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"username\",\n\"in\": \"query\",\n\"description\": \"The user name for login\",\n\"required\": true,\n\"type\": \"string\"\n},\n{\n\"name\": \"password\",\n\"in\": \"query\",\n\"description\": \"The password for login in clear text\",\n\"required\": true,\n\"type\": \"string\"\n}\n],\n\"responses\": {\n\"200\": {\n\"description\": \"successful operation\",\n\"schema\": {\n\"type\": \"string\"\n},\n\"headers\": {\n\"X-Rate-Limit\": {\n\"type\": \"integer\",\n\"format\": \"int32\",\n\"description\": \"calls per hour allowed by the user\"\n},\n\"X-Expires-After\": {\n\"type\": \"string\",\n\"format\": \"date-time\",\n\"description\": \"date in UTC when token expires\"\n}\n}\n},\n\"400\": {\n\"description\": \"Invalid username/password supplied\"\n}\n}\n}\n},\n\"/user/logout\": {\n\"get\": {\n\"tags\": [\n\"user\"\n],\n\"summary\": \"Logs out current logged in user session\",\n\"description\": \"\",\n\"operationId\": \"logoutUser\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [],\n\"responses\": {\n\"default\": {\n\"description\": \"successful operation\"\n}\n}\n}\n},\n\"/user/{username}\": {\n\"get\": {\n\"tags\": [\n\"user\"\n],\n\"summary\": \"Get user by user name\",\n\"description\": \"\",\n\"operationId\": \"getUserByName\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"username\",\n\"in\": \"path\",\n\"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n\"required\": true,\n\"type\": \"string\"\n}\n],\n\"responses\": {\n\"200\": {\n\"description\": \"successful operation\",\n\"schema\": {\n\"$ref\": \"#/definitions/User\"\n}\n},\n\"400\": {\n\"description\": \"Invalid username supplied\"\n},\n\"404\": {\n\"description\": \"User not found\"\n}\n}\n},\n\"put\": {\n\"tags\": [\n\"user\"\n],\n\"summary\": \"Updated user\",\n\"description\": \"This can only be done by the logged in user.\",\n\"operationId\": \"updateUser\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"username\",\n\"in\": \"path\",\n\"description\": \"name that need to be updated\",\n\"required\": true,\n\"type\": \"string\"\n},\n{\n\"in\": \"body\",\n\"name\": \"body\",\n\"description\": \"Updated user object\",\n\"required\": true,\n\"schema\": {\n\"$ref\": \"#/definitions/User\"\n}\n}\n],\n\"responses\": {\n\"400\": {\n\"description\": \"Invalid user supplied\"\n},\n\"404\": {\n\"description\": \"User not found\"\n}\n}\n},\n\"delete\": {\n\"tags\": [\n\"user\"\n],\n\"summary\": \"Delete user\",\n\"description\": \"This can only be done by the logged in user.\",\n\"operationId\": \"deleteUser\",\n\"produces\": [\n\"application/xml\",\n\"application/json\"\n],\n\"parameters\": [\n{\n\"name\": \"username\",\n\"in\": \"path\",\n\"description\": \"The name that needs to be deleted\",\n\"required\": true,\n\"type\": \"string\"\n}\n],\n\"responses\": {\n\"400\": {\n\"description\": \"Invalid username supplied\"\n},\n\"404\": {\n\"description\": \"User not found\"\n}\n}\n}\n}\n},\n\"securityDefinitions\": {\n\"petstore_auth\": {\n\"type\": \"oauth2\",\n\"authorizationUrl\": \"http://petstore.swagger.io/oauth/dialog\",\n\"flow\": \"implicit\",\n\"scopes\": {\n\"write:pets\": \"modify pets in your account\",\n\"read:pets\": \"read your pets\"\n}\n},\n\"api_key\": {\n\"type\": \"apiKey\",\n\"name\": \"api_key\",\n\"in\": \"header\"\n}\n},\n\"definitions\": {\n\"Order\": {\n\"type\": \"object\",\n\"properties\": {\n\"id\": {\n\"type\": \"integer\",\n\"format\": \"int64\"\n},\n\"petId\": {\n\"type\": \"integer\",\n\"format\": \"int64\"\n},\n\"quantity\": {\n\"type\": \"integer\",\n\"format\": \"int32\"\n},\n\"shipDate\": {\n\"type\": \"string\",\n\"format\": \"date-time\"\n},\n\"status\": {\n\"type\": \"string\",\n\"description\": \"Order Status\",\n\"enum\": [\n\"placed\",\n\"approved\",\n\"delivered\"\n]\n},\n\"complete\": {\n\"type\": \"boolean\",\n\"default\": false\n}\n},\n\"xml\": {\n\"name\": \"Order\"\n}\n},\n\"Category\": {\n\"type\": \"object\",\n\"properties\": {\n\"id\": {\n\"type\": \"integer\",\n\"format\": \"int64\"\n},\n\"name\": {\n\"type\": \"string\"\n}\n},\n\"xml\": {\n\"name\": \"Category\"\n}\n},\n\"User\": {\n\"type\": \"object\",\n\"properties\": {\n\"id\": {\n\"type\": \"integer\",\n\"format\": \"int64\"\n},\n\"username\": {\n\"type\": \"string\"\n},\n\"firstName\": {\n\"type\": \"string\"\n},\n\"lastName\": {\n\"type\": \"string\"\n},\n\"email\": {\n\"type\": \"string\"\n},\n\"password\": {\n\"type\": \"string\"\n},\n\"phone\": {\n\"type\": \"string\"\n},\n\"userStatus\": {\n\"type\": \"integer\",\n\"format\": \"int32\",\n\"description\": \"User Status\"\n}\n},\n\"xml\": {\n\"name\": \"User\"\n}\n},\n\"Tag\": {\n\"type\": \"object\",\n\"properties\": {\n\"id\": {\n\"type\": \"integer\",\n\"format\": \"int64\"\n},\n\"name\": {\n\"type\": \"string\"\n}\n},\n\"xml\": {\n\"name\": \"Tag\"\n}\n},\n\"Pet\": {\n\"type\": \"object\",\n\"required\": [\n\"name\",\n\"photoUrls\"\n],\n\"properties\": {\n\"id\": {\n\"type\": \"integer\",\n\"format\": \"int64\"\n},\n\"category\": {\n\"$ref\": \"#/definitions/Category\"\n},\n\"name\": {\n\"type\": \"string\",\n\"example\": \"doggie\"\n},\n\"photoUrls\": {\n\"type\": \"array\",\n\"xml\": {\n\"name\": \"photoUrl\",\n\"wrapped\": true\n},\n\"items\": {\n\"type\": \"string\"\n}\n},\n\"tags\": {\n\"type\": \"array\",\n\"xml\": {\n\"name\": \"tag\",\n\"wrapped\": true\n},\n\"items\": {\n\"$ref\": \"#/definitions/Tag\"\n}\n},\n\"status\": {\n\"type\": \"string\",\n\"description\": \"pet status in the store\",\n\"enum\": [\n\"available\",\n\"pending\",\n\"sold\"\n]\n}\n},\n\"xml\": {\n\"name\": \"Pet\"\n}\n},\n\"ApiResponse\": {\n\"type\": \"object\",\n\"properties\": {\n\"code\": {\n\"type\": \"integer\",\n\"format\": \"int32\"\n},\n\"type\": {\n\"type\": \"string\"\n},\n\"message\": {\n\"type\": \"string\"\n}\n}\n}\n},\n\"externalDocs\": {\n\"description\": \"Find out more about Swagger\",\n\"url\": \"http://swagger.io\"\n}\n}`;"
			},
			"children": [
				{
					"id": 660,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 661,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 662,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1046,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						660
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1045,
					"character": 22
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ISwaggerNode",
					"id": 663
				},
				{
					"type": "reference",
					"name": "ISwaggerInfoNode",
					"id": 667
				},
				{
					"type": "reference",
					"name": "ISwaggerPathsNode",
					"id": 673
				},
				{
					"type": "reference",
					"name": "ISwaggerMethodsNode",
					"id": 679
				},
				{
					"type": "reference",
					"name": "ISwaggerMethodNode",
					"id": 685
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "BaseNode",
					"id": 693
				},
				{
					"type": "reference",
					"name": "SwaggerInfoNode",
					"id": 719
				},
				{
					"type": "reference",
					"name": "SwaggerMethodNode",
					"id": 766
				},
				{
					"type": "reference",
					"name": "SwaggerMethodsNode",
					"id": 749
				},
				{
					"type": "reference",
					"name": "SwaggerNode",
					"id": 706
				},
				{
					"type": "reference",
					"name": "SwaggerPathsNode",
					"id": 734
				}
			]
		},
		{
			"id": 375,
			"name": "IOAuthData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Represents the OAUTH data structure in {IAuthenticationResult} returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
				"text": "Authentication Data Structure if {AUTHENTICATION_TYPE} is\n * {AUTHENTICATION_TYPE.OAUTH1}\n * {AUTHENTICATION_TYPE.OAUTH2}\n * {AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\n"
			},
			"children": [
				{
					"id": 376,
					"name": "authLoginUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Authentication Login URL provided by the Connector without any state information parameters",
						"tags": [
							{
								"tag": "example",
								"text": "https://login.salesforce.com/services/oauth2/authorize?response_type=code&client_id=CLIENTID&redirect_uri=REDIRECTURL&display=popup&prompt=login consent\n where REDIRECT_URL=https://localdev-integration.cloud.tibco.com/wistudio/connectiondetails\n NOTE: state information parameter for Salesforce \"state\" is not part of the URL\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1046,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 377,
					"name": "authStateQueryParam",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This property will tell the Contribution Model what is the state information parameter name being used by the OAUTH provider\nto return state of the Application before making the authentication request to the SAAS authentication provider.",
						"tags": [
							{
								"tag": "example",
								"text": "For Saleforce the state information parameter is \"state\"\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1052,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						376,
						377
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 1039,
					"character": 27
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "OAuthData",
					"id": 378
				}
			]
		},
		{
			"id": 452,
			"name": "ISwaagerParameterItems",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 456,
					"name": "collectionFormat",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 37,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 457,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 38,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 468,
					"name": "enum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 49,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 459,
					"name": "exclusiveMaximum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 40,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 461,
					"name": "exclusiveMinimum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 42,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 454,
					"name": "format",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 35,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 455,
					"name": "items",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 36,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaagerParameterItems",
						"id": 452
					}
				},
				{
					"id": 465,
					"name": "maxItems",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 46,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 462,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 43,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 458,
					"name": "maximum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 39,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 466,
					"name": "minItems",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 47,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 463,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 44,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 460,
					"name": "minimum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 41,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 469,
					"name": "multipleOf",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 50,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 464,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 45,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 453,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 34,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 467,
					"name": "uniqueItems",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 48,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						456,
						457,
						468,
						459,
						461,
						454,
						455,
						465,
						462,
						458,
						466,
						463,
						460,
						469,
						464,
						453,
						467
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 33,
					"character": 39
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ISwaggerHeader",
					"id": 519
				}
			]
		},
		{
			"id": 573,
			"name": "ISwagger",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 577,
					"name": "basePath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 166,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 579,
					"name": "consumes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 168,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 582,
					"name": "definitions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 171,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerDefinitionsDictionary",
						"id": 552
					}
				},
				{
					"id": 588,
					"name": "externalDocs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 177,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerExternalDocs",
						"id": 449
					}
				},
				{
					"id": 576,
					"name": "host",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 165,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 575,
					"name": "info",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 164,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerInfo",
						"id": 442
					}
				},
				{
					"id": 583,
					"name": "parameters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 172,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerParametersDictionary",
						"id": 555
					}
				},
				{
					"id": 581,
					"name": "paths",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 170,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerPathsDictionary",
						"id": 510
					}
				},
				{
					"id": 580,
					"name": "produces",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 169,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 584,
					"name": "responses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 173,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerResponseDictionary",
						"id": 543
					}
				},
				{
					"id": 578,
					"name": "schemes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 167,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 586,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 175,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ISwaggerSecurity",
							"id": 561
						}
					}
				},
				{
					"id": 585,
					"name": "securityDefinitions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 174,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerSecurityDefinitions",
						"id": 558
					}
				},
				{
					"id": 574,
					"name": "swagger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 163,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 587,
					"name": "tags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 176,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ISwaggerTags",
							"id": 546
						}
					}
				},
				{
					"id": 589,
					"name": "getAppName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 590,
							"name": "getAppName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 179,
							"character": 14
						}
					]
				},
				{
					"id": 608,
					"name": "getFlowName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 609,
							"name": "getFlowName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 610,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 611,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 191,
							"character": 15
						}
					]
				},
				{
					"id": 593,
					"name": "getMethods",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 594,
							"name": "getMethods",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 595,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 183,
							"character": 14
						}
					]
				},
				{
					"id": 596,
					"name": "getParameters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 597,
							"name": "getParameters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 598,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 599,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 185,
							"character": 17
						}
					]
				},
				{
					"id": 591,
					"name": "getPaths",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 592,
							"name": "getPaths",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 181,
							"character": 12
						}
					]
				},
				{
					"id": 600,
					"name": "getResponse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 601,
							"name": "getResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 602,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 603,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 604,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 187,
							"character": 15
						}
					]
				},
				{
					"id": 605,
					"name": "resolveRefs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 606,
							"name": "resolveRefs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 607,
									"name": "$ref",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 189,
							"character": 15
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						577,
						579,
						582,
						588,
						576,
						575,
						583,
						581,
						580,
						584,
						578,
						586,
						585,
						574,
						587
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						589,
						608,
						593,
						596,
						591,
						600,
						605
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 162,
					"character": 25
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "Swagger",
					"id": 612
				}
			]
		},
		{
			"id": 435,
			"name": "ISwaggerContact",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 438,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 7,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 436,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 5,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 437,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 6,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						438,
						436,
						437
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 4,
					"character": 32
				}
			]
		},
		{
			"id": 552,
			"name": "ISwaggerDefinitionsDictionary",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 553,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 554,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 135,
					"character": 46
				}
			]
		},
		{
			"id": 516,
			"name": "ISwaggerExamplesDictionary",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 517,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 518,
							"name": "mimeType",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 106,
					"character": 43
				}
			]
		},
		{
			"id": 449,
			"name": "ISwaggerExternalDocs",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 450,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 25,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 451,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 26,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						450,
						451
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 24,
					"character": 37
				}
			]
		},
		{
			"id": 519,
			"name": "ISwaggerHeader",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 524,
					"name": "collectionFormat",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 37,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.collectionFormat",
						"id": 456
					}
				},
				{
					"id": 525,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 38,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.default",
						"id": 457
					}
				},
				{
					"id": 520,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 111,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 536,
					"name": "enum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 49,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.enum",
						"id": 468
					}
				},
				{
					"id": 527,
					"name": "exclusiveMaximum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 40,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.exclusiveMaximum",
						"id": 459
					}
				},
				{
					"id": 529,
					"name": "exclusiveMinimum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 42,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.exclusiveMinimum",
						"id": 461
					}
				},
				{
					"id": 522,
					"name": "format",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 35,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.format",
						"id": 454
					}
				},
				{
					"id": 523,
					"name": "items",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 36,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaagerParameterItems",
						"id": 452
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.items",
						"id": 455
					}
				},
				{
					"id": 533,
					"name": "maxItems",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 46,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.maxItems",
						"id": 465
					}
				},
				{
					"id": 530,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 43,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.maxLength",
						"id": 462
					}
				},
				{
					"id": 526,
					"name": "maximum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 39,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.maximum",
						"id": 458
					}
				},
				{
					"id": 534,
					"name": "minItems",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 47,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.minItems",
						"id": 466
					}
				},
				{
					"id": 531,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 44,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.minLength",
						"id": 463
					}
				},
				{
					"id": 528,
					"name": "minimum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 41,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.minimum",
						"id": 460
					}
				},
				{
					"id": 537,
					"name": "multipleOf",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 50,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.multipleOf",
						"id": 469
					}
				},
				{
					"id": 532,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 45,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.pattern",
						"id": 464
					}
				},
				{
					"id": 521,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 34,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.type",
						"id": 453
					}
				},
				{
					"id": 535,
					"name": "uniqueItems",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 48,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ISwaagerParameterItems.uniqueItems",
						"id": 467
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						524,
						525,
						520,
						536,
						527,
						529,
						522,
						523,
						533,
						530,
						526,
						534,
						531,
						528,
						537,
						532,
						521,
						535
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 110,
					"character": 32
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ISwaagerParameterItems",
					"id": 452
				}
			]
		},
		{
			"id": 513,
			"name": "ISwaggerHeadersDictionary",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 514,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 515,
							"name": "header",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerHeader",
						"id": 519
					}
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 102,
					"character": 42
				}
			]
		},
		{
			"id": 442,
			"name": "ISwaggerInfo",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 446,
					"name": "contact",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 19,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerContact",
						"id": 435
					}
				},
				{
					"id": 444,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 17,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 447,
					"name": "license",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 20,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerLicense",
						"id": 439
					}
				},
				{
					"id": 445,
					"name": "termsOfService",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 18,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 443,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 16,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 448,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 21,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						446,
						444,
						447,
						445,
						443,
						448
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 15,
					"character": 29
				}
			]
		},
		{
			"id": 667,
			"name": "ISwaggerInfoNode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 670,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 671,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 672,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "INode.accept",
								"id": 660
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1046,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "INode.accept",
						"id": 660
					}
				},
				{
					"id": 668,
					"name": "getTitle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 669,
							"name": "getTitle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1054,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						670,
						668
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1053,
					"character": 33
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "SwaggerInfoNode",
					"id": 719
				}
			]
		},
		{
			"id": 439,
			"name": "ISwaggerLicense",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 440,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 11,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 441,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 12,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						440,
						441
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 10,
					"character": 32
				}
			]
		},
		{
			"id": 685,
			"name": "ISwaggerMethodNode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 690,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 691,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 692,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "INode.accept",
								"id": 660
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1046,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "INode.accept",
						"id": 660
					}
				},
				{
					"id": 686,
					"name": "getParameters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 687,
							"name": "getParameters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ISwaggerParameter",
											"id": 470
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ISwaggerReference",
											"id": 550
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1066,
							"character": 17
						}
					]
				},
				{
					"id": 688,
					"name": "getResponses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 689,
							"name": "getResponses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ISwaggerResponseDictionary",
								"id": 543
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1068,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						690,
						686,
						688
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1065,
					"character": 35
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "SwaggerMethodNode",
					"id": 766
				}
			]
		},
		{
			"id": 494,
			"name": "ISwaggerMethods",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 500,
					"name": "consumes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 85,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 505,
					"name": "deprecated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 90,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 497,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 82,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 498,
					"name": "externalDocs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 83,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerExternalDocs",
						"id": 449
					}
				},
				{
					"id": 499,
					"name": "operationId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 84,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 502,
					"name": "parameters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 87,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ISwaggerParameter",
									"id": 470
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ISwaggerReference",
									"id": 550
								}
							}
						]
					}
				},
				{
					"id": 501,
					"name": "produces",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 86,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 503,
					"name": "responses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 88,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerResponseDictionary",
						"id": 543
					}
				},
				{
					"id": 504,
					"name": "schemes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 89,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 506,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 91,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ISwaggerSecurity",
							"id": 561
						}
					}
				},
				{
					"id": 496,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 81,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 495,
					"name": "tags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 80,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						500,
						505,
						497,
						498,
						499,
						502,
						501,
						503,
						504,
						506,
						496,
						495
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 79,
					"character": 33
				}
			]
		},
		{
			"id": 507,
			"name": "ISwaggerMethodsDictionary",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 508,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 509,
							"name": "method",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "ISwaggerMethods",
								"id": 494
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ISwaggerParameter",
									"id": 470
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ISwaggerReference",
									"id": 550
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 94,
					"character": 42
				}
			]
		},
		{
			"id": 679,
			"name": "ISwaggerMethodsNode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 682,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 683,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 684,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "INode.accept",
								"id": 660
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1046,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "INode.accept",
						"id": 660
					}
				},
				{
					"id": 680,
					"name": "getMethods",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 681,
							"name": "getMethods",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1062,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						682,
						680
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1061,
					"character": 36
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "SwaggerMethodsNode",
					"id": 749
				}
			]
		},
		{
			"id": 663,
			"name": "ISwaggerNode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 664,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 665,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 666,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "INode.accept",
								"id": 660
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1046,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "INode.accept",
						"id": 660
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						664
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1049,
					"character": 29
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "SwaggerNode",
					"id": 706
				}
			]
		},
		{
			"id": 787,
			"name": "ISwaggerNodeVisitor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 788,
					"name": "visitEnterSwagger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 789,
							"name": "visitEnterSwagger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 790,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNode",
										"id": 663
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1209,
							"character": 21
						}
					]
				},
				{
					"id": 794,
					"name": "visitEnterSwaggerInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 795,
							"name": "visitEnterSwaggerInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 796,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerInfoNode",
										"id": 667
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1212,
							"character": 25
						}
					]
				},
				{
					"id": 812,
					"name": "visitEnterSwaggerMethod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 813,
							"name": "visitEnterSwaggerMethod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 814,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodNode",
										"id": 685
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1221,
							"character": 27
						}
					]
				},
				{
					"id": 806,
					"name": "visitEnterSwaggerMethods",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 807,
							"name": "visitEnterSwaggerMethods",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 808,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodsNode",
										"id": 679
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1218,
							"character": 28
						}
					]
				},
				{
					"id": 800,
					"name": "visitEnterSwaggerPaths",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 801,
							"name": "visitEnterSwaggerPaths",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 802,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerPathsNode",
										"id": 673
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1215,
							"character": 26
						}
					]
				},
				{
					"id": 791,
					"name": "visitLeaveSwagger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 792,
							"name": "visitLeaveSwagger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 793,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNode",
										"id": 663
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1210,
							"character": 21
						}
					]
				},
				{
					"id": 797,
					"name": "visitLeaveSwaggerInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 798,
							"name": "visitLeaveSwaggerInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 799,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerInfoNode",
										"id": 667
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1213,
							"character": 25
						}
					]
				},
				{
					"id": 815,
					"name": "visitLeaveSwaggerMethod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 816,
							"name": "visitLeaveSwaggerMethod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 817,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodNode",
										"id": 685
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1222,
							"character": 27
						}
					]
				},
				{
					"id": 809,
					"name": "visitLeaveSwaggerMethods",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 810,
							"name": "visitLeaveSwaggerMethods",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 811,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerMethodsNode",
										"id": 679
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1219,
							"character": 28
						}
					]
				},
				{
					"id": 803,
					"name": "visitLeaveSwaggerPaths",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 804,
							"name": "visitLeaveSwaggerPaths",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 805,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerPathsNode",
										"id": 673
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1216,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						788,
						794,
						812,
						806,
						800,
						791,
						797,
						815,
						809,
						803
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1208,
					"character": 36
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractSwaggerNodeVisitor",
					"id": 818
				},
				{
					"type": "reference",
					"name": "SwaggerVisitor",
					"id": 853
				}
			]
		},
		{
			"id": 470,
			"name": "ISwaggerParameter",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 478,
					"name": "allowEmptyValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 61,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 480,
					"name": "collectionFormat",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 63,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 481,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 64,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 473,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 56,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 492,
					"name": "enum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 75,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 483,
					"name": "exclusiveMaximum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 66,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 485,
					"name": "exclusiveMinimum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 68,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 477,
					"name": "format",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 60,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 472,
					"name": "in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 55,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "PARAMETER_IN",
						"id": 657
					}
				},
				{
					"id": 479,
					"name": "items",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 62,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaagerParameterItems",
						"id": 452
					}
				},
				{
					"id": 489,
					"name": "maxItems",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 72,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 486,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 69,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 482,
					"name": "maximum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 65,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 490,
					"name": "minItems",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 73,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 487,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 70,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 484,
					"name": "minimum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 67,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 493,
					"name": "multipleOf",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 76,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 471,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 54,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 488,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 71,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 474,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 475,
					"name": "schema",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 58,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 476,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 59,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 491,
					"name": "uniqueItems",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 74,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						478,
						480,
						481,
						473,
						492,
						483,
						485,
						477,
						472,
						479,
						489,
						486,
						482,
						490,
						487,
						484,
						493,
						471,
						488,
						474,
						475,
						476,
						491
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 53,
					"character": 34
				}
			]
		},
		{
			"id": 555,
			"name": "ISwaggerParametersDictionary",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 556,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 557,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerParameter",
						"id": 470
					}
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 139,
					"character": 45
				}
			]
		},
		{
			"id": 510,
			"name": "ISwaggerPathsDictionary",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 511,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 512,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerMethodsDictionary",
						"id": 507
					}
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 98,
					"character": 40
				}
			]
		},
		{
			"id": 673,
			"name": "ISwaggerPathsNode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 676,
					"name": "accept",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 677,
							"name": "accept",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 678,
									"name": "visitor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISwaggerNodeVisitor",
										"id": 787
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "INode.accept",
								"id": 660
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1046,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "INode.accept",
						"id": 660
					}
				},
				{
					"id": 674,
					"name": "getPaths",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 675,
							"name": "getPaths",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ISwaggerPathsDictionary",
								"id": 510
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/swagger/swagger-vistor.ts",
							"line": 1058,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						676,
						674
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger-vistor.ts",
					"line": 1057,
					"character": 34
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "INode",
					"id": 659
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "SwaggerPathsNode",
					"id": 734
				}
			]
		},
		{
			"id": 550,
			"name": "ISwaggerReference",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 551,
					"name": "$ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 132,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						551
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 131,
					"character": 34
				}
			]
		},
		{
			"id": 538,
			"name": "ISwaggerResponse",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 539,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 115,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 542,
					"name": "examples",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 118,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerExamplesDictionary",
						"id": 516
					}
				},
				{
					"id": 541,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 117,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerHeadersDictionary",
						"id": 513
					}
				},
				{
					"id": 540,
					"name": "schema",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 116,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						539,
						542,
						541,
						540
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 114,
					"character": 33
				}
			]
		},
		{
			"id": 543,
			"name": "ISwaggerResponseDictionary",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 544,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 545,
							"name": "responseCode",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ISwaggerResponse",
								"id": 538
							},
							{
								"type": "reference",
								"name": "ISwaggerReference",
								"id": 550
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 121,
					"character": 43
				}
			]
		},
		{
			"id": 570,
			"name": "ISwaggerScopesDictionary",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 571,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 572,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 158,
					"character": 41
				}
			]
		},
		{
			"id": 561,
			"name": "ISwaggerSecurity",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 567,
					"name": "authorizationUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 153,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 563,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 149,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 566,
					"name": "flow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 152,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 565,
					"name": "in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 151,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 564,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 150,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 569,
					"name": "scopes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 155,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerScopesDictionary",
						"id": 570
					}
				},
				{
					"id": 568,
					"name": "tokenUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 154,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 562,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 148,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						567,
						563,
						566,
						565,
						564,
						569,
						568,
						562
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 147,
					"character": 33
				}
			]
		},
		{
			"id": 558,
			"name": "ISwaggerSecurityDefinitions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 559,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 560,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerSecurity",
						"id": 561
					}
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 143,
					"character": 44
				}
			]
		},
		{
			"id": 546,
			"name": "ISwaggerTags",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 548,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 127,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 549,
					"name": "externalDocs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 128,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "ISwaggerExternalDocs",
						"id": 449
					}
				},
				{
					"id": 547,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/swagger/swagger.ts",
							"line": 126,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						548,
						549,
						547
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 125,
					"character": 29
				}
			]
		},
		{
			"id": 177,
			"name": "ITriggerContribution",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Trigger Contribution interface"
			},
			"children": [
				{
					"id": 191,
					"name": "appId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 69,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionContext.appId",
						"id": 136
					}
				},
				{
					"id": 190,
					"name": "changelist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 68,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionContext.changelist",
						"id": 135
					}
				},
				{
					"id": 183,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Display Settings"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 327,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "IContributionDisplay",
						"id": 167
					}
				},
				{
					"id": 185,
					"name": "handler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Trigger handler endpoint settings, e.g. for each port setting there can be multiple handlers"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 335,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "IHandlerDefinition",
						"id": 175
					}
				},
				{
					"id": 178,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " trigger name, must be unique, no spaces"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 186,
					"name": "outputs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Trigger output fields"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 339,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IFieldDefinition",
							"id": 158
						}
					}
				},
				{
					"id": 182,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "URI reference for the contribution"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 323,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 184,
					"name": "settings",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Trigger static settings i.e. port number, logging etc."
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 331,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IFieldDefinition",
							"id": 158
						}
					}
				},
				{
					"id": 179,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Title to display on the trigger tile"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 311,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 181,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 319,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 180,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Version number , use semver versioning"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 315,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 187,
					"name": "getField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 188,
							"name": "getField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a field from settings,endpoint,outputs. Field names must be unique within the trigger"
							},
							"parameters": [
								{
									"id": 189,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDefinition",
								"id": 158
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 345,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						191,
						190,
						183,
						185,
						178,
						186,
						182,
						184,
						179,
						181,
						180
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						187
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 303,
					"character": 37
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "IContributionContext",
					"id": 134
				}
			]
		},
		{
			"id": 34,
			"name": "IValidationError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Validation Error Interface"
			},
			"children": [
				{
					"id": 37,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Error Context"
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 21,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "STRING_MAP",
						"id": 7,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 35,
					"name": "errorCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Error Code"
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 11,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36,
					"name": "errorMsg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Error Message"
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38,
					"name": "getErrorCode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 39,
							"name": "getErrorCode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns Error Code",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 27,
							"character": 16
						}
					]
				},
				{
					"id": 40,
					"name": "getErrorMessage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 41,
							"name": "getErrorMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns Error Message",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 33,
							"character": 19
						}
					]
				},
				{
					"id": 44,
					"name": "setContext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 45,
							"name": "setContext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Set Context Map for the Error i.e Flow -> Activity -> Property"
							},
							"parameters": [
								{
									"id": 46,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "STRING_MAP",
										"id": 7,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 46,
							"character": 14
						}
					]
				},
				{
					"id": 42,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 43,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a string representation of the Error",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 39,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						37,
						35,
						36
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						38,
						40,
						44,
						42
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/validation.ts",
					"line": 6,
					"character": 33
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "ValidationError",
					"id": 47
				}
			]
		},
		{
			"id": 73,
			"name": "IValidationResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Validation Result interface"
			},
			"children": [
				{
					"id": 75,
					"name": "errors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Errors"
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 144,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IValidationError",
							"id": 34
						}
					}
				},
				{
					"id": 74,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Validation State"
					},
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 139,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "EnumValidationState",
								"id": 69
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 95,
					"name": "getErrors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 96,
							"name": "getErrors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns Validation Errors",
								"returns": "\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IValidationError",
									"id": 34
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 197,
							"character": 13
						}
					]
				},
				{
					"id": 76,
					"name": "isReadOnly",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 77,
							"name": "isReadOnly",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Validation Read Only state",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 150,
							"character": 14
						}
					]
				},
				{
					"id": 80,
					"name": "isValid",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 81,
							"name": "isValid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Validation validity state",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 162,
							"character": 11
						}
					]
				},
				{
					"id": 78,
					"name": "isVisible",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 79,
							"name": "isVisible",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Validation Visible state",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 156,
							"character": 13
						}
					]
				},
				{
					"id": 91,
					"name": "setError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 92,
							"name": "setError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds Validation error",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 93,
									"name": "errorCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 94,
									"name": "errorMessage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IValidationResult",
								"id": 73
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 191,
							"character": 12
						}
					]
				},
				{
					"id": 82,
					"name": "setReadOnly",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 83,
							"name": "setReadOnly",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the Validation Read Only state",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 84,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IValidationResult",
								"id": 73
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 169,
							"character": 15
						}
					]
				},
				{
					"id": 88,
					"name": "setValid",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 89,
							"name": "setValid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the Validation valid state",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 90,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IValidationResult",
								"id": 73
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 183,
							"character": 12
						}
					]
				},
				{
					"id": 85,
					"name": "setVisible",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 86,
							"name": "setVisible",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the Validation Visible state",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 87,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IValidationResult",
								"id": 73
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 176,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						75,
						74
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						95,
						76,
						80,
						78,
						91,
						82,
						88,
						85
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/validation.ts",
					"line": 134,
					"character": 34
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "ValidationResult",
					"id": 97
				}
			]
		},
		{
			"id": 346,
			"name": "IWiServiceContribution",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Service contribution interface"
			},
			"children": [
				{
					"id": 359,
					"name": "action",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
							},
							{
								"tag": "param",
								"text": "",
								"param": "actionId"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 645,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 360,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 361,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 362,
											"name": "actionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 363,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 257
													}
												]
											},
											{
												"type": "reference",
												"name": "IActionResult",
												"id": 257
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 645,
									"character": 12
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionHandler.action",
						"id": 252
					}
				},
				{
					"id": 354,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
							},
							{
								"tag": "param",
								"text": "",
								"param": "fieldName"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 616,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 355,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 356,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 357,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 358,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 73
													}
												]
											},
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 73
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 616,
									"character": 13
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionHandler.validate",
						"id": 247
					}
				},
				{
					"id": 349,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
						"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
						"tags": [
							{
								"tag": "param",
								"text": "",
								"param": "fieldName"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 588,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 350,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 351,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 352,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 353,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 588,
									"character": 10
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionHandler.value",
						"id": 242
					}
				},
				{
					"id": 370,
					"name": "getActionHandler",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 371,
							"name": "getActionHandler",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n",
								"tags": [
									{
										"tag": "description",
										"text": "Returns the action provider for a given button field in the form.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 372,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IContribActionProvider",
								"id": 237
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getActionHandler",
								"id": 323
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1001,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "IWiServiceProviderContribution.getActionHandler",
						"id": 323
					}
				},
				{
					"id": 364,
					"name": "getFieldProvider",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 365,
							"name": "getFieldProvider",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n",
								"tags": [
									{
										"tag": "description",
										"text": "Returns the FieldProvider for a given field.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
									}
								]
							},
							"parameters": [
								{
									"id": 366,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IContribFieldProvider",
								"id": 233
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getFieldProvider",
								"id": 317
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 918,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "IWiServiceProviderContribution.getFieldProvider",
						"id": 317
					}
				},
				{
					"id": 347,
					"name": "getType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 348,
							"name": "getType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "IServiceContributionType",
								"id": 433
							},
							"overwrites": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 314
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 314
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 875,
							"character": 11
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "IBaseServiceContribution.getType",
						"id": 314
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IBaseServiceContribution.getType",
						"id": 314
					}
				},
				{
					"id": 367,
					"name": "getValidationProvider",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 368,
							"name": "getValidationProvider",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n",
								"tags": [
									{
										"tag": "description",
										"text": "Returns the vrules provider for a given field.\n\nHere is an example of a vrules provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
									}
								]
							},
							"parameters": [
								{
									"id": 369,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IContribValidationProvider",
								"id": 229
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getValidationProvider",
								"id": 320
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 956,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "IWiServiceProviderContribution.getValidationProvider",
						"id": 320
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						359,
						354,
						349
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						370,
						364,
						347,
						367
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 1013,
					"character": 39
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "IWiServiceHandlerContribution",
					"id": 328
				},
				{
					"type": "reference",
					"name": "IWiServiceProviderContribution",
					"id": 316
				}
			]
		},
		{
			"id": 328,
			"name": "IWiServiceHandlerContribution",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Handler Service contribution interface"
			},
			"children": [
				{
					"id": 341,
					"name": "action",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
							},
							{
								"tag": "param",
								"text": "",
								"param": "actionId"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 645,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 342,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 343,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 344,
											"name": "actionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 345,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 257
													}
												]
											},
											{
												"type": "reference",
												"name": "IActionResult",
												"id": 257
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 645,
									"character": 12
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionHandler.action",
						"id": 252
					}
				},
				{
					"id": 336,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
							},
							{
								"tag": "param",
								"text": "",
								"param": "fieldName"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 616,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 337,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 338,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 339,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 340,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 73
													}
												]
											},
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 73
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 616,
									"character": 13
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionHandler.validate",
						"id": 247
					}
				},
				{
					"id": 331,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
						"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
						"tags": [
							{
								"tag": "param",
								"text": "",
								"param": "fieldName"
							},
							{
								"tag": "param",
								"text": "",
								"param": "context"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 588,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 332,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 333,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 334,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 335,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 432
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 588,
									"character": 10
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IContributionHandler.value",
						"id": 242
					}
				},
				{
					"id": 329,
					"name": "getType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 330,
							"name": "getType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "IServiceContributionType",
								"id": 433
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 314
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 875,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "IBaseServiceContribution.getType",
						"id": 314
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						341,
						336,
						331
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						329
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 1007,
					"character": 46
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "IBaseServiceContribution",
					"id": 313
				},
				{
					"type": "reference",
					"name": "IContributionHandler",
					"id": 241
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "IWiServiceContribution",
					"id": 346
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "WiServiceHandlerContribution",
					"id": 950
				}
			]
		},
		{
			"id": 316,
			"name": "IWiServiceProviderContribution",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Provider Service contribution interface"
			},
			"children": [
				{
					"id": 323,
					"name": "getActionHandler",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 324,
							"name": "getActionHandler",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n",
								"tags": [
									{
										"tag": "description",
										"text": "Returns the action provider for a given button field in the form.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 325,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IContribActionProvider",
								"id": 237
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1001,
							"character": 20
						}
					]
				},
				{
					"id": 317,
					"name": "getFieldProvider",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 318,
							"name": "getFieldProvider",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n",
								"tags": [
									{
										"tag": "description",
										"text": "Returns the FieldProvider for a given field.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
									}
								]
							},
							"parameters": [
								{
									"id": 319,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IContribFieldProvider",
								"id": 233
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 918,
							"character": 20
						}
					]
				},
				{
					"id": 326,
					"name": "getType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 327,
							"name": "getType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "IServiceContributionType",
								"id": 433
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 314
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 875,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "IBaseServiceContribution.getType",
						"id": 314
					}
				},
				{
					"id": 320,
					"name": "getValidationProvider",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 321,
							"name": "getValidationProvider",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n",
								"tags": [
									{
										"tag": "description",
										"text": "Returns the vrules provider for a given field.\n\nHere is an example of a vrules provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
									}
								]
							},
							"parameters": [
								{
									"id": 322,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IContribValidationProvider",
								"id": 229
							}
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 956,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						323,
						317,
						326,
						320
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 881,
					"character": 47
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "IBaseServiceContribution",
					"id": 313
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "IWiServiceContribution",
					"id": 346
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "WiServiceProviderContribution",
					"id": 928
				}
			]
		},
		{
			"id": 1,
			"name": "JSONSCHEMATypeInfo",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "JSON Schema Type Information"
			},
			"children": [
				{
					"id": 3,
					"name": "format",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 68,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "JSON_FORMAT",
						"id": 25
					}
				},
				{
					"id": 6,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 71,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 70,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 69,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 67,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "JSON_TYPE",
						"id": 23
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3,
						6,
						5,
						4,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 66,
					"character": 35
				}
			]
		},
		{
			"id": 909,
			"name": "WiContribMetaData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type of the WiContrib metadata."
			},
			"children": [
				{
					"id": 912,
					"name": "actionProviders",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Defines the set of action providers that are available in the contribution\nof this module.\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 232,
							"character": 19
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IContribActionProviderMap",
							"id": 902
						}
					}
				},
				{
					"id": 911,
					"name": "fieldProviders",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Defines the set of validation providers that are available in the contribution\nof this module.\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 189,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IContribFieldProviderMap",
							"id": 899
						}
					}
				},
				{
					"id": 910,
					"name": "validationProviders",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the set of validation providers that are available in the contribution\nof this module.",
						"text": "## Simple Example\n\nHere is an example of a validation provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```\n"
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 152,
							"character": 23
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IContribValidationProviderMap",
							"id": 892
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						912,
						911,
						910
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 114,
					"character": 34
				}
			]
		},
		{
			"id": 22,
			"name": "ARRAY_STR_ARRAY",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 19,
					"character": 27
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				]
			}
		},
		{
			"id": 424,
			"name": "ActionButton",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Action item for button catalog"
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 101,
					"character": 24
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 425,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 427,
							"name": "actionId",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 103,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 428,
							"name": "display",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 104,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDisplay",
								"id": 137
							}
						},
						{
							"id": 426,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 102,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								427,
								428,
								426
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 101,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 409,
			"name": "CONTRIBUTION_LOAD_RESULT",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isPrivate": true,
				"isExported": true
			},
			"comment": {
				"shortText": "CONTRIBUTION_LOAD_RESULT type"
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 62,
					"character": 36
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 410,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 412,
							"name": "data",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 62,
									"character": 61
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 411,
							"name": "status",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 62,
									"character": 47
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								412,
								411
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 62,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 8,
			"name": "ENUM_MAP",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 2,
					"character": 20
				}
			],
			"type": {
				"type": "reference",
				"name": "Map",
				"typeArguments": [
					{
						"type": "typeParameter",
						"name": "E"
					},
					{
						"type": "typeParameter",
						"name": "P"
					}
				]
			}
		},
		{
			"id": 403,
			"name": "FUNCTION_CONTRIBUTION",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isPrivate": true,
				"isExported": true
			},
			"comment": {
				"shortText": "FUNCTION_CONTRIBUTION type",
				"tags": [
					{
						"tag": "typeparam",
						"text": "The generic type parameter indicating the value type being returned.",
						"param": "T"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 52,
					"character": 33
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 404,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 406,
							"name": "category",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 54,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 408,
							"name": "function",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 56,
									"character": 12
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 405,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 407,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 55,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "CONTRIBUTION_TYPE",
								"id": 393
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								406,
								408,
								405,
								407
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 52,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 432,
			"name": "IContributionTypes",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Union Type from all contribution types"
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 506,
					"character": 30
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "IContributionContext",
						"id": 134
					},
					{
						"type": "reference",
						"name": "ITriggerContribution",
						"id": 177
					},
					{
						"type": "reference",
						"name": "IActivityContribution",
						"id": 192
					},
					{
						"type": "reference",
						"name": "IConnectorContribution",
						"id": 209
					}
				]
			}
		},
		{
			"id": 29,
			"name": "JSON_SCHEMA_TYPE",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 73,
					"character": 28
				}
			],
			"type": {
				"type": "reference",
				"name": "JSONSCHEMATypeInfo",
				"id": 1
			}
		},
		{
			"id": 395,
			"name": "MODULE_CONTRIBUTION",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isPrivate": true,
				"isExported": true
			},
			"comment": {
				"shortText": "MODULE_CONTRIBUTION type",
				"tags": [
					{
						"tag": "typeparam",
						"text": "The generic type parameter indicating the value type being returned",
						"param": "T"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 39,
					"character": 31
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 396,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 401,
							"name": "files",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 44,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 397,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 40,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 399,
							"name": "route",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 42,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 400,
							"name": "routePath",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 43,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 402,
							"name": "service",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 45,
									"character": 11
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 398,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 41,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "CONTRIBUTION_TYPE",
								"id": 393
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								401,
								397,
								399,
								400,
								402,
								398
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 39,
							"character": 36
						}
					]
				}
			}
		},
		{
			"id": 7,
			"name": "STRING_MAP",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 1,
					"character": 22
				}
			],
			"type": {
				"type": "reference",
				"name": "Map",
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "typeParameter",
						"name": "P"
					}
				]
			}
		},
		{
			"id": 419,
			"name": "AUTHENTICATION_TYPE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 91,
					"character": 32
				},
				{
					"fileName": "common/models/contrib.ts",
					"line": 92,
					"character": 31
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "BASIC"
					},
					{
						"type": "stringLiteral",
						"value": "OAUTH1"
					},
					{
						"type": "stringLiteral",
						"value": "OAUTH2"
					},
					{
						"type": "stringLiteral",
						"value": "OAUTH2_TWOLEG"
					}
				]
			},
			"defaultValue": " strEnum([\"BASIC\", \"OAUTH1\", \"OAUTH2\", \"OAUTH2_TWOLEG\"])"
		},
		{
			"id": 417,
			"name": "ButtonStyle",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": " Button Style string enumeration",
				"tags": [
					{
						"tag": "type",
						"text": "{{[K in string|string|string|string|string|string]:K}}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 88,
					"character": 24
				},
				{
					"fileName": "common/models/contrib.ts",
					"line": 89,
					"character": 23
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "default"
					},
					{
						"type": "stringLiteral",
						"value": "primary"
					},
					{
						"type": "stringLiteral",
						"value": "success"
					},
					{
						"type": "stringLiteral",
						"value": "info"
					},
					{
						"type": "stringLiteral",
						"value": "warning"
					},
					{
						"type": "stringLiteral",
						"value": "danger"
					}
				]
			},
			"defaultValue": " strEnum([\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"])"
		},
		{
			"id": 415,
			"name": "ButtonType",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Button Type string enumeration",
				"tags": [
					{
						"tag": "type",
						"text": "{{[K in string|string|string]:K}}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 82,
					"character": 23
				},
				{
					"fileName": "common/models/contrib.ts",
					"line": 83,
					"character": 22
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "button"
					},
					{
						"type": "stringLiteral",
						"value": "submit"
					},
					{
						"type": "stringLiteral",
						"value": "reset"
					}
				]
			},
			"defaultValue": " strEnum([\"submit\", \"reset\", \"button\"])"
		},
		{
			"id": 393,
			"name": "CONTRIBUTION_TYPE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Contribution type enumeration",
				"tags": [
					{
						"tag": "type",
						"text": "{{[K in string|string|string|string]:K}}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 10,
					"character": 30
				},
				{
					"fileName": "common/models/contrib.ts",
					"line": 11,
					"character": 29
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "trigger"
					},
					{
						"type": "stringLiteral",
						"value": "activity"
					},
					{
						"type": "stringLiteral",
						"value": "connector"
					},
					{
						"type": "stringLiteral",
						"value": "function"
					}
				]
			},
			"defaultValue": " strEnum([\"trigger\", \"activity\", \"connector\", \"function\"])"
		},
		{
			"id": 421,
			"name": "CONTRIB_PROXY_END_POINT",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 94,
					"character": 36
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "/wistudio/v1/contributions/proxy/"
			},
			"defaultValue": "\"/wistudio/v1/contributions/proxy/\""
		},
		{
			"id": 431,
			"name": "DEFAULT_CONTRIBUTION_CATEGORY",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isPrivate": true,
				"isExported": true
			},
			"comment": {
				"shortText": "Default contribution category",
				"tags": [
					{
						"tag": "type",
						"text": "{string}"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 288,
					"character": 42
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "General"
			},
			"defaultValue": "\"General\""
		},
		{
			"id": 413,
			"name": "DisplayFieldType",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": " DisplayField Type string enumeration",
				"tags": [
					{
						"tag": "type",
						"text": "{{[K in string|string|string|string|string|string|string]:K}}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 76,
					"character": 29
				},
				{
					"fileName": "common/models/contrib.ts",
					"line": 77,
					"character": 28
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "connection"
					},
					{
						"type": "stringLiteral",
						"value": "dropdown"
					},
					{
						"type": "stringLiteral",
						"value": "table"
					},
					{
						"type": "stringLiteral",
						"value": "texteditor"
					},
					{
						"type": "stringLiteral",
						"value": "fileselector"
					},
					{
						"type": "stringLiteral",
						"value": "connectiondata"
					},
					{
						"type": "stringLiteral",
						"value": "button"
					},
					{
						"type": "stringLiteral",
						"value": "params"
					}
				]
			},
			"defaultValue": " strEnum([\"connection\", \"dropdown\", \"table\", \"texteditor\", \"fileselector\", \"connectiondata\", \"button\", \"params\"])"
		},
		{
			"id": 429,
			"name": "FieldType",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "FieldType string enumeration",
				"tags": [
					{
						"tag": "type",
						"text": "{{[K in string | string | string | string]:K}}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 205,
					"character": 22
				},
				{
					"fileName": "common/models/contrib.ts",
					"line": 206,
					"character": 21
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "array"
					},
					{
						"type": "stringLiteral",
						"value": "boolean"
					},
					{
						"type": "stringLiteral",
						"value": "integer"
					},
					{
						"type": "stringLiteral",
						"value": "number"
					},
					{
						"type": "stringLiteral",
						"value": "object"
					},
					{
						"type": "stringLiteral",
						"value": "string"
					},
					{
						"type": "stringLiteral",
						"value": "complex_object"
					}
				]
			},
			"defaultValue": " strEnum([\"string\", \"number\", \"boolean\", \"complex_object\", \"array\", \"object\", \"integer\"])"
		},
		{
			"id": 27,
			"name": "GOLANG_TYPE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "GO Lang Type enumerations",
				"tags": [
					{
						"tag": "type",
						"text": "{{[K in string | string | string | string | string | string | string | string]:K}}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 60,
					"character": 24
				},
				{
					"fileName": "common/types.ts",
					"line": 61,
					"character": 23
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "any"
					},
					{
						"type": "stringLiteral",
						"value": "array"
					},
					{
						"type": "stringLiteral",
						"value": "boolean"
					},
					{
						"type": "stringLiteral",
						"value": "integer"
					},
					{
						"type": "stringLiteral",
						"value": "number"
					},
					{
						"type": "stringLiteral",
						"value": "object"
					},
					{
						"type": "stringLiteral",
						"value": "string"
					},
					{
						"type": "stringLiteral",
						"value": "complex_object"
					}
				]
			},
			"defaultValue": " strEnum([\"string\", \"integer\", \"number\", \"boolean\", \"object\", \"array\", \"any\", \"complex_object\"])"
		},
		{
			"id": 422,
			"name": "HTTP_METHOD",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 96,
					"character": 24
				},
				{
					"fileName": "common/models/contrib.ts",
					"line": 97,
					"character": 23
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "GET"
					},
					{
						"type": "stringLiteral",
						"value": "POST"
					},
					{
						"type": "stringLiteral",
						"value": "PUT"
					},
					{
						"type": "stringLiteral",
						"value": "DELETE"
					}
				]
			},
			"defaultValue": " strEnum([\"GET\", \"POST\", \"PUT\", \"DELETE\"])"
		},
		{
			"id": 433,
			"name": "IServiceContributionType",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Service Contribution Type",
				"tags": [
					{
						"tag": "type",
						"text": "{{[K in string|string]:K}}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 864,
					"character": 37
				},
				{
					"fileName": "common/models/contrib.ts",
					"line": 865,
					"character": 36
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "Provider"
					},
					{
						"type": "stringLiteral",
						"value": "Handler"
					}
				]
			},
			"defaultValue": " strEnum([\"Provider\", \"Handler\"])"
		},
		{
			"id": 25,
			"name": "JSON_FORMAT",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "JSON Schema Type Format enumerations\nhttps://developers.google.com/discovery/v1/type-format\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.3.2",
				"tags": [
					{
						"tag": "type",
						"text": "{{[K in string | string | string | string | string | string | string | string | string | string | string | string | string | string]:K}}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 35,
					"character": 24
				},
				{
					"fileName": "common/types.ts",
					"line": 54,
					"character": 23
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "object"
					},
					{
						"type": "stringLiteral",
						"value": "int32"
					},
					{
						"type": "stringLiteral",
						"value": "uint32"
					},
					{
						"type": "stringLiteral",
						"value": "double"
					},
					{
						"type": "stringLiteral",
						"value": "float"
					},
					{
						"type": "stringLiteral",
						"value": "byte"
					},
					{
						"type": "stringLiteral",
						"value": "date"
					},
					{
						"type": "stringLiteral",
						"value": "date_time"
					},
					{
						"type": "stringLiteral",
						"value": "int64"
					},
					{
						"type": "stringLiteral",
						"value": "uint64"
					},
					{
						"type": "stringLiteral",
						"value": "email"
					},
					{
						"type": "stringLiteral",
						"value": "hostname"
					},
					{
						"type": "stringLiteral",
						"value": "ipv4"
					},
					{
						"type": "stringLiteral",
						"value": "ipv6"
					},
					{
						"type": "stringLiteral",
						"value": "uri"
					},
					{
						"type": "stringLiteral",
						"value": "uri_reference"
					},
					{
						"type": "stringLiteral",
						"value": "uri_template"
					},
					{
						"type": "stringLiteral",
						"value": "json_pointer"
					}
				]
			},
			"defaultValue": " strEnum([\n    \"int32\",\n    \"uint32\",\n    \"double\",\n    \"float\",\n    \"byte\",\n    \"date\",\n    \"date_time\",\n    \"int64\",\n    \"uint64\",\n    \"object\",\n    \"email\",\n    \"hostname\",\n    \"ipv4\",\n    \"ipv6\",\n    \"uri\",\n    \"uri_reference\",\n    \"uri_template\",\n    \"json_pointer\"])"
		},
		{
			"id": 30,
			"name": "JSON_RT_TYPE_MAPPING",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 75,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"name": "ENUM_MAP",
				"id": 8,
				"typeArguments": [
					{
						"type": "reference",
						"name": "GOLANG_TYPE",
						"id": 27
					},
					{
						"type": "reference",
						"name": "JSON_SCHEMA_TYPE",
						"id": 29
					}
				]
			},
			"defaultValue": " new Map<GOLANG_TYPE, JSON_SCHEMA_TYPE>()"
		},
		{
			"id": 23,
			"name": "JSON_TYPE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "JSON Schema Type enumerations\nhttps://developers.google.com/discovery/v1/type-format\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.3.2",
				"tags": [
					{
						"tag": "type",
						"text": "{{[K in string | string | string | string | string | string | string]:K}}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 26,
					"character": 22
				},
				{
					"fileName": "common/types.ts",
					"line": 27,
					"character": 21
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "any"
					},
					{
						"type": "stringLiteral",
						"value": "array"
					},
					{
						"type": "stringLiteral",
						"value": "boolean"
					},
					{
						"type": "stringLiteral",
						"value": "integer"
					},
					{
						"type": "stringLiteral",
						"value": "number"
					},
					{
						"type": "stringLiteral",
						"value": "object"
					},
					{
						"type": "stringLiteral",
						"value": "string"
					}
				]
			},
			"defaultValue": " strEnum([\"any\", \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\"])"
		},
		{
			"id": 657,
			"name": "PARAMETER_IN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 29,
					"character": 25
				},
				{
					"fileName": "common/models/swagger/swagger.ts",
					"line": 31,
					"character": 24
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "query"
					},
					{
						"type": "stringLiteral",
						"value": "header"
					},
					{
						"type": "stringLiteral",
						"value": "path"
					},
					{
						"type": "stringLiteral",
						"value": "formData"
					},
					{
						"type": "stringLiteral",
						"value": "body"
					}
				]
			},
			"defaultValue": " strEnum([\"query\", \"header\", \"path\", \"formData\", \"body\"])"
		},
		{
			"id": 1029,
			"name": "WI_CONTRIB_SYMBOL",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isPrivate": true
			},
			"comment": {
				"tags": [
					{
						"tag": "type",
						"text": "{symbol}\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 108,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "symbol"
			},
			"defaultValue": " Symbol(\"@WiContrib\")"
		},
		{
			"id": 31,
			"name": "RTtoJSONTypeMap",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 32,
					"name": "RTtoJSONTypeMap",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Returns a {{JSON_SCHEMA_TYPE}}",
						"tags": [
							{
								"tag": "constructor",
								"text": "\n"
							}
						]
					},
					"parameters": [
						{
							"id": 33,
							"name": "rtType",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "reference",
								"name": "GOLANG_TYPE",
								"id": 27
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "JSON_SCHEMA_TYPE",
						"id": 29
					}
				}
			],
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 91,
					"character": 31
				}
			]
		},
		{
			"id": 1030,
			"name": "WiContrib",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1031,
					"name": "WiContrib",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "This decorator and annotation indicates the typescript class is a Web Integrator contribution\n## Example\n```\n\n  @WiContrib()\n  class RestService {}\n```\n\n"
							},
							{
								"tag": "constructor",
								"text": "\n"
							}
						]
					},
					"parameters": [
						{
							"id": 1032,
							"name": "metadata",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "reference",
								"name": "WiContribMetaData",
								"id": 909
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1033,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1034,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1035,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 782,
									"character": 55
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 782,
					"character": 25
				}
			]
		},
		{
			"id": 17,
			"name": "jsonToMap",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 18,
					"name": "jsonToMap",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 19,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 20,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 21,
							"name": "jsonStr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "K"
							},
							{
								"type": "typeParameter",
								"name": "V"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 15,
					"character": 25
				}
			]
		},
		{
			"id": 14,
			"name": "mapToJson",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 15,
					"name": "mapToJson",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 16,
							"name": "map",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 12,
					"character": 25
				}
			]
		},
		{
			"id": 9,
			"name": "strEnum",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 10,
					"name": "strEnum",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 11,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 12,
							"name": "o",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 13,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 4,
									"character": 55
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 4,
					"character": 23
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				69
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				905,
				895,
				888,
				818,
				294,
				274,
				693,
				127,
				378,
				612,
				719,
				766,
				749,
				706,
				849,
				734,
				853,
				47,
				97,
				978,
				994,
				913,
				950,
				928
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				206,
				257,
				192,
				270,
				313,
				373,
				155,
				209,
				237,
				902,
				233,
				899,
				229,
				892,
				134,
				167,
				241,
				158,
				137,
				221,
				224,
				175,
				659,
				375,
				452,
				573,
				435,
				552,
				516,
				449,
				519,
				513,
				442,
				667,
				439,
				685,
				494,
				507,
				679,
				663,
				787,
				470,
				555,
				510,
				673,
				550,
				538,
				543,
				570,
				561,
				558,
				546,
				177,
				34,
				73,
				346,
				328,
				316,
				1,
				909
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				22,
				424,
				409,
				8,
				403,
				432,
				29,
				395,
				7
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				419,
				417,
				415,
				393,
				421,
				431,
				413,
				429,
				27,
				422,
				433,
				25,
				30,
				23,
				657,
				1029
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				31,
				1030,
				17,
				14,
				9
			]
		}
	]
}