"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var node_model_1=require("../diagram/node.model"),task_model_1=require("./task.model"),flows_1=require("./flows"),constants_1=require("../../constants"),lodash=require("lodash"),VERSION_TYPE;!function(e){e[e.VERSION_100=0]="VERSION_100"}(VERSION_TYPE=exports.VERSION_TYPE||(exports.VERSION_TYPE={}));var AppModel=function(){function e(e){this.modelVersion=VERSION_TYPE.VERSION_100,this.id=e.id,this.applicationName=e.applicationName,this.description=e.description,this.version=e.version,this.flows=e.flows,this.errorHandler=e.errorHandler,this.createdTime=e.createdTime,this.lastUpdatedTime=e.lastUpdatedTime,this.isPushed=e.isPushed,this.appChanges=e.appChanges}return e.prototype.addFlow=function(e){this.flows[e._id]=e},e.prototype.getFlow=function(e){return this.flows[e]},e.prototype.getFlows=function(){return this.flows},e.prototype.deleteFLow=function(e){return delete this.flows[e],this},e.prototype.addActivityToFlow=function(e,t){var o=this.getFlowById(e);o.items||(o.items={}),o.items[t.id]=t},e.prototype.addNodeToFlow=function(e,t){var o=this.getFlowById(e);o.paths||(o.paths={nodes:{},root:{is:""}}),o.paths.nodes[t.id]=t;for(var s=0;s<t.parents.length;s++)o.paths.nodes[t.parents[s]].children.indexOf(t.id)<0&&o.paths.nodes[t.parents[s]].children.push(t.id)},e.prototype.setRoot=function(e,t){this.getFlowById(e).paths.root.is=t},e.prototype.deleteActivity=function(e,t,o){var s=this.getTaskNode(e,t);return this.deleteNode(e,s.id),this.repairRelations(e),this.cleanNodes(e),this},e.prototype.deleteNode=function(e,t,o){var s=this,i=this.getFlowById(e),r=i.paths.nodes[t];if(r){o||(o=r.type===constants_1.FLOW_DIAGRAM_NODE_TYPE.NODE_BRANCH);var n=[],d=lodash.cloneDeep(r.parents);r.children.forEach(function(e){var t=i.paths.nodes[e];o||t.type===constants_1.FLOW_DIAGRAM_NODE_TYPE.NODE_BRANCH?(t.children.forEach(function(e){s.deleteNode(i._id,e,!0)}),s.deleteNode(i._id,e,!0)):(i.paths.nodes[e].parents=d,n.push(e))}),d.forEach(function(e){var o=i.paths.nodes[e];o&&(i.paths.nodes[e].children=lodash.union(lodash.remove(o.children,t),n))}),delete i.items[r.taskID]}return delete i.paths.nodes[t],this},e.prototype.addActivity=function(e,t,o,s,i){var r=new task_model_1.FlowDiagramTask(t);return r.taskType=o,this.addActivityToFlow(e,r),i&&(s.taskID=r.id),this.addNodeToFlow(e,s),s.type===constants_1.FLOW_DIAGRAM_NODE_TYPE.NODE_ROOT&&this.setRoot(e,s.id),this.cleanNodes(e),r.id},e.prototype.addBranch=function(e,t){var o=this.getTaskNode(e,t),s=new task_model_1.FlowDiagramTask({});s.taskType=constants_1.TASK_TYPE.TASK_BRANCH;var i=new node_model_1.FlowDiagramNode;return i.taskID=s.id,i.type=constants_1.FLOW_DIAGRAM_NODE_TYPE.NODE_BRANCH,i.parents.push(o.id),this.addActivityToFlow(e,s),this.addNodeToFlow(e,i),s.id},e.prototype.getTaskNode=function(e,t){var o=this.getFlowById(e).paths.nodes;for(var s in o)if(o[s].taskID===t)return o[s]},e.prototype.getNodeTask=function(e,t){var o=this.getFlowById(e),s=o.paths.nodes[t];return s?o.items[s.taskID]:void 0},e.prototype.cleanNodes=function(e){var t=this.getFlowById(e);this.repairRelations(e);for(var o=!0,s=[],i=t.paths.nodes;o;){var r=!1;for(var n in i)!function(e){if(i[e].type===constants_1.FLOW_DIAGRAM_NODE_TYPE.NODE_ADD&&0===i[e].children.length){s.push(e);for(var t in i)lodash.remove(i[t].children,function(t){return t===e});delete i[e],r=!0}}(n);o=r}for(var n in i)!function(e){for(var t in i[e].children)lodash.isUndefined(i[i[e].children[t]])&&lodash.remove(i[e].children,function(o){return o===i[e].children[t]})}(n)},e.prototype.repairRelations=function(e){var t=[],o=this.getFlowById(e).paths.nodes;for(var s in o)!function(e){var s=o[e];for(var i in s.parents)o[s.parents[i]]?o[s.parents[i]].children.indexOf(s.id)<0&&(t.push("Fixes: Parent "+s.parents[i]+" have not "+s.id+" as child"),o[s.parents[i]].children.push(s.id)):t.push("Fixes: [Unable to fix] Parent "+s.parents[i]+" doesn't exists. Node: "+s.id);var r=[];for(var i in s.children)o[s.children[i]]?o[s.children[i]].parents.indexOf(s.id)<0&&(t.push("Fixes: Child "+s.children[i]+" have not "+s.id+" as parent"),o[s.children[i]].parents.push(s.id)):(t.push("Fixes: Child "+s.children[i]+" doesn't exists. Node: "+s.id),r.push(i));r.map(function(e){return s.children.splice(e,1)})}(s);t.length},e.prototype.addErrorHandler=function(e,t){var o=this.getFlowById(e),s=new flows_1.Flow(null,null);o.errorHandler||(o.errorHandler={}),o.errorHandler[s._id]=s;var i=new node_model_1.FlowDiagramNode;return i.type=constants_1.FLOW_DIAGRAM_NODE_TYPE.NODE_ROOT_ERROR_NEW,this.addActivity(s._id,t,constants_1.TASK_TYPE.TASK_ROOT,i,!0),this.setRoot(s._id,i.id),s},e.prototype.getFlowById=function(e){if(this.flows[e])return this.flows[e];for(var t in this.flows)if(this.flows[t].errorHandler&&this.flows[t].errorHandler[e])return this.flows[t].errorHandler[e];return null},e}();exports.AppModel=AppModel;