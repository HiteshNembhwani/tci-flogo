"use strict";function IDEncode(t){return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function IDDecode(t){for(t=t.replace(/-/g,"+").replace(/_/g,"/");t.length%4;)t+="=";return atob(t)}function GenTaskID(t){var e;if(t){var o=lodash.keys(t),r=lodash.map(lodash.filter(o,function(e){var o=t[e].type;return o===constants_1.TASK_TYPE.TASK||o===constants_1.TASK_TYPE.TASK_ROOT}),function(t){return lodash.toNumber(IDDecode(t))}),n=lodash.max(r);e=n?""+(n+1):"2"}else e=""+(Date.now()>>>1);return IDEncode(e)}function GenBranchID(){return IDEncode("Flogo::Branch::"+Date.now())}function GenTriggerID(){return IDEncode("Flogo::Trigger::"+Date.now())}function portAttribute(t,e){void 0===e&&(e=!1);var o=lodash.assign({},t);return o.type=lodash.get(constants_1.TASK_ATTRIBUTE_TYPE,lodash.get(o,"type","STRING").toUpperCase()),e&&lodash.isUndefined(o.value)&&(o.value=constants_1.getDefaultValue(o.type)),o}function activitySchemaToTask(t){var e={type:constants_1.TASK_TYPE.TASK,activityType:lodash.get(t,"name",""),name:lodash.get(t,"title",lodash.get(t,"name","Activity")),version:lodash.get(t,"version",""),title:lodash.get(t,"title",""),description:lodash.get(t,"description",""),homepage:lodash.get(t,"homepage",""),attributes:{inputs:lodash.get(t,"inputs",[]),outputs:lodash.get(t,"outputs",[])},__schema:lodash.cloneDeep(t)};return lodash.each(e.attributes.inputs,function(t){lodash.assign(t,portAttribute(t,!0))}),lodash.each(e.attributes.outputs,function(t){lodash.assign(t,portAttribute(t))}),e}function activitySchemaToTrigger(t){var e={type:constants_1.TASK_TYPE.TASK_ROOT,triggerType:lodash.get(t,"name",""),name:lodash.get(t,"title",lodash.get(t,"name","Activity")),version:lodash.get(t,"version",""),title:lodash.get(t,"title",""),description:lodash.get(t,"description",""),homepage:lodash.get(t,"homepage",""),settings:lodash.get(t,"settings",""),outputs:lodash.get(t,"outputs",""),endpoint:{settings:lodash.get(t,"endpoint.settings","")},__schema:lodash.cloneDeep(t)};return lodash.each(e.inputs,function(t){lodash.assign(t,portAttribute(t,!0))}),lodash.each(e.outputs,function(t){lodash.assign(t,portAttribute(t))}),e}function genBranchArrow(t){var e=[lodash.get(t,"svgWidth",87),lodash.get(t,"svgHeight",100)],o=lodash.get(t,"barSize",12),r=lodash.get(t,"translate",[2,2]),n=lodash.get(t,"padding",{bottom:5,right:2}),a=[e[0]-r[0]-n.right,e[1]-r[1]-n.bottom],i=o/2,s=.56*i,l=o/26,g={width:8*l,height:7*l,outerCurveHeight:9*l,outerCurveWdith:10*l,outerCurCtrl1X:.00407789085*l,outerCurCtrl1Y:13.2639443*l,outerCurCtrl2X:13.2532577*l,outerCurCtrl2Y:9.999999974752427e-7*l,innerCurCtrl1X:4.022091400000001*l,innerCurCtrl1Y:.3753411*l,innerCurCtrl2X:.4*l,innerCurCtrl2Y:4.0465096*l},d={maxWidth:g.width+o,maxHeight:g.height+o},u=a[0]-s-d.maxWidth,c=a[1]-d.maxHeight,h={start:[0,0],stop:[0,g.outerCurveHeight+c]},p={start:h.stop,stop:[d.maxWidth-g.outerCurveWdith,d.maxHeight+c]},f={control1:[p.start[0]+g.outerCurCtrl1X,p.start[1]+g.outerCurCtrl1Y],control2:[p.stop[0]-g.outerCurCtrl2X,p.stop[1]-g.outerCurCtrl2Y]},m={start:p.stop,stop:[d.maxWidth+u,p.stop[1]]},v=[m.stop[0]+s,m.stop[1]-i],C={start:[m.stop[0],m.stop[1]-o],stop:[d.maxWidth,m.stop[1]-o]},_={start:C.stop,stop:[o,c]},b={control1:[_.start[0]-g.innerCurCtrl1X,_.start[1]-g.innerCurCtrl1Y],control2:[_.stop[0]+g.innerCurCtrl2X,_.stop[1]+g.innerCurCtrl2Y]};return"M"+h.start.join(",")+" L"+h.stop.join(",")+" C"+f.control1.join(",")+" "+f.control2.join(",")+" "+p.stop.join(",")+" L"+m.stop.join(",")+" L"+v.join(",")+" L"+C.start.join(",")+" L"+C.stop.join(",")+" C"+b.control1.join(",")+" "+b.control2.join(",")+" "+_.stop.join(",")+" L"+o+",0 Z"}function genBranchLine(t){var e=[lodash.get(t,"svgWidth",92),lodash.get(t,"svgHeight",107)],o=lodash.get(t,"barSize",12),r=lodash.get(t,"translate",[2,2]),n=["default","hover","selected","run"],a='\n      <filter x="-50%" y="-50%" width="200%" height="300%" filterUnits="objectBoundingBox" id="filter-1">\n          <feOffset dx="0" dy="1" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>\n          <feGaussianBlur stdDeviation="1" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>\n          <feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.2 0" type="matrix" in="shadowBlurOuter1" result="shadowMatrixOuter1"></feColorMatrix>\n          <feMerge>\n              <feMergeNode in="shadowMatrixOuter1"></feMergeNode>\n              <feMergeNode in="SourceGraphic"></feMergeNode>\n          </feMerge>\n      </filter>\n    '.trim(),i={default:a,hover:'\n      <filter x="-50%" y="-50%" width="200%" height="300%" filterUnits="objectBoundingBox" id="filter-1">\n          <feOffset dx="0" dy="1" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>\n          <feGaussianBlur stdDeviation="1.5" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>\n          <feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.4 0" in="shadowBlurOuter1" type="matrix" result="shadowMatrixOuter1"></feColorMatrix>\n          <feMerge>\n              <feMergeNode in="shadowMatrixOuter1"></feMergeNode>\n              <feMergeNode in="SourceGraphic"></feMergeNode>\n          </feMerge>\n      </filter>\n    '.trim(),selected:'\n      <filter x="-50%" y="-50%" width="200%" height="300%" filterUnits="objectBoundingBox" id="filter-1">\n          <feOffset dx="0" dy="1" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>\n          <feGaussianBlur stdDeviation="1.5" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>\n          <feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.4 0" in="shadowBlurOuter1" type="matrix" result="shadowMatrixOuter1"></feColorMatrix>\n          <feMerge>\n              <feMergeNode in="shadowMatrixOuter1"></feMergeNode>\n              <feMergeNode in="SourceGraphic"></feMergeNode>\n          </feMerge>\n      </filter>\n    '.trim(),run:a},s={default:'\n      <linearGradient x1="50%" y1="0%" x2="30%" y2="400%" id="linearGradient-1">\n          <stop stop-color="#ABB0C5" offset="0%"></stop>\n          <stop stop-color="#C2C5DA" offset="100%"></stop>\n      </linearGradient>\n    '.trim(),hover:'\n      <linearGradient x1="50%" y1="0%" x2="60%" y2="500%" id="linearGradient-1">\n          <stop stop-color="#ABB0C5" offset="0%"></stop>\n          <stop stop-color="#C2C5DA" offset="100%"></stop>\n      </linearGradient>\n    '.trim(),selected:"",run:""},l=genBranchArrow(lodash.assign({},t,{svgWidth:e[0],svgHeight:e[1],barWidth:o,translate:r,padding:{bottom:17,right:3}})),g={default:('\n      <g id="branch-1" filter="url(#filter-1)" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" transform="translate('+r[0]+", "+r[1]+')">\n          <path d="'+l+'" id="Combined-Shape" fill="url(#linearGradient-1)"></path>\n      </g>\n    ').trim(),hover:('\n      <g id="Spec" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" transform="translate('+r[0]+", "+r[1]+')">\n          <g id="Flogo_Branch-Configure-1" fill="url(#linearGradient-1)">\n              <g id="branches">\n                  <g id="branch-1">\n                      <path d="'+l+'" id="Combined-Shape" filter="url(#filter-1)"></path>\n                  </g>\n              </g>\n          </g>\n      </g>\n    ').trim(),selected:('\n      <g id="Spec" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" transform="translate('+r[0]+", "+r[1]+')">\n          <g id="Flogo_Branch-Configure-1" fill="#8A90AE">\n              <g id="branches">\n                  <g id="branch-1">\n                      <path d="'+l+'" id="Combined-Shape" filter="url(#filter-1)"></path>\n                  </g>\n              </g>\n          </g>\n      </g>\n    ').trim(),run:('\n      <g id="Spec" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" transform="translate('+r[0]+", "+r[1]+')">\n          <g id="Flogo_Branch-Configure-1" fill="#DEF2FD">\n              <g id="branches">\n                  <g id="branch-1">\n                      <path d="'+l+'" id="Combined-Shape" filter="url(#filter-1)"></path>\n                  </g>\n              </g>\n          </g>\n      </g>\n    ').trim()},d=('\n  <svg width="'+e[0]+'px" height="'+e[1]+'px" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <defs>\n        ___FILTER___\n        ___FILL___\n    </defs>\n    ___GROUP___\n  </svg>\n  ').trim(),u={};return lodash.each(n,function(t){u[t]=d.replace("___FILTER___",i[t]).replace("___FILL___",s[t]).replace("___GROUP___",g[t])}),u}function normalizeTaskName(t){return lodash.kebabCase(t)}function parseMapping(t){var e=constants_1.AUTOMAPPING_FORMAT.exec(t);if(!e)return null;var o=e[2]||null,r=e[3],n=e[4]?lodash.trimStart(e[4],"."):null;return{autoMap:"{"+e[1]+"."+r+"}",isRoot:!o,taskId:o,attributeName:r,path:n}}function updateFlogoGlobalConfig(t){window.FLOGO_GLOBAL=t,localStorage&&localStorage.setItem("FLOGO_GLOBAL",JSON.stringify(t))}function resetFlogoGlobalConfig(){updateFlogoGlobalConfig({db:{port:"5984",name:"flogo-web"},activities:{db:{port:"5984",name:"flogo-web-activities"}},triggers:{db:{port:"5984",name:"flogo-web-triggers"}},engine:{port:"8080",testPath:"status"},stateServer:{port:"9190",testPath:"ping"},flowServer:{port:"9090",testPath:"ping"}})}function formatServerConfiguration(t){return{db:{protocol:t.db.protocol,host:t.db.host,port:t.db.port,name:t.db.testPath,label:t.db.label},activities:{protocol:t.activities.protocol,host:t.activities.host,port:t.activities.port,testPath:t.activities.testPath,label:t.activities.label,db:{port:t.activities.port,name:t.activities.testPath}},triggers:{protocol:t.triggers.protocol,host:t.triggers.host,port:t.triggers.port,testPath:t.triggers.testPath,label:t.triggers.label,db:{port:t.triggers.port,name:t.triggers.testPath}},engine:{protocol:t.engine.protocol,host:t.engine.host,port:t.engine.port,testPath:t.engine.testPath},stateServer:{protocol:t.stateServer.protocol,host:t.stateServer.host,port:t.stateServer.port,testPath:t.stateServer.testPath},flowServer:{protocol:t.flowServer.protocol,host:t.flowServer.host,port:t.flowServer.port,testPath:t.flowServer.testPath}}}function getFlogoGlobalConfig(){if(!window.FLOGO_GLOBAL){var t=void 0;if(localStorage&&(t=localStorage.getItem("FLOGO_GLOBAL"))){try{t=JSON.parse(t)}catch(t){}return updateFlogoGlobalConfig(t),t}resetFlogoGlobalConfig()}return window.FLOGO_GLOBAL}function getURL(t){return t.port?(t.protocol||location.protocol.replace(":",""))+"://"+(t.host||location.hostname)+":"+t.port:(t.protocol||location.protocol.replace(":",""))+"://"+(t.host||location.hostname)+"}"}function getDBURL(t){return getURL(t)+"/"+t.name}function copyToClipboard(t){var e=window.getSelection(),o=document.createRange();o.selectNodeContents(t),e.removeAllRanges(),e.addRange(o);var r=!1;try{r=document.execCommand("copy")}catch(t){}return e.removeAllRanges(),r}function notification(t,e,o,r){var n="";for(var a in r)n+=a+":"+r[a]+";";var i='<div style="'+n+'" class="'+e+' flogo-common-notification">'+t;o||(i+='\n    <i class="fa fa-times flogo-common-notification-close"></i>\n    '),i+="</div>";var s=jQuery("body > .flogo-common-notification-container");s.length?s.append(i):jQuery("body").append('<div class="flogo-common-notification-container">'+i+"</div>");var l=jQuery(".flogo-common-notification-container>div:last"),g=jQuery(".flogo-common-notification-container>div");if(g.length>5)for(var d=0;d<g.length-5;d++)g[d]&&g[d].remove();return setTimeout(function(){l.addClass("on")},100),new Promise(function(t,e){o&&setTimeout(function(){l&&l.remove(),s.html()||s.remove()},o),o?t():l.find(".flogo-common-notification-close").click(function(){l.remove(),t()})})}function attributeTypeToString(t){return lodash.isString(t)?t:(constants_1.TASK_ATTRIBUTE_TYPE[t]||"string").toLowerCase()}function updateBranchNodesRunStatus(t,e){lodash.forIn(t,function(o){var r=e[o.taskID];r.taskType===constants_1.TASK_TYPE.TASK_BRANCH&&lodash.set(r,"__status.hasRun",diagram_model_1.FlowDiagram.hasBranchRun(o,e,t))})}Object.defineProperty(exports,"__esModule",{value:!0});var constants_1=require("../../../common/constants"),diagram_model_1=require("../models/diagram.model"),lodash=require("lodash");exports.IDEncode=IDEncode,exports.IDDecode=IDDecode,exports.GenTaskID=GenTaskID,exports.GenBranchID=GenBranchID,exports.GenTriggerID=GenTriggerID,exports.activitySchemaToTask=activitySchemaToTask,exports.activitySchemaToTrigger=activitySchemaToTrigger,exports.genBranchArrow=genBranchArrow,exports.genBranchLine=genBranchLine,exports.normalizeTaskName=normalizeTaskName,exports.parseMapping=parseMapping,exports.updateFlogoGlobalConfig=updateFlogoGlobalConfig,exports.resetFlogoGlobalConfig=resetFlogoGlobalConfig,exports.formatServerConfiguration=formatServerConfiguration,exports.getFlogoGlobalConfig=getFlogoGlobalConfig,exports.getURL=getURL,exports.getDBURL=getDBURL,exports.copyToClipboard=copyToClipboard,exports.notification=notification,exports.attributeTypeToString=attributeTypeToString,exports.updateBranchNodesRunStatus=updateBranchNodesRunStatus;