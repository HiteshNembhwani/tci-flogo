import { IFlow } from "../../common/models/app/flows";
import { AppModel } from "../../common/models/app/app.model";
import { FlowsListService } from "./flowsList.service";
import { OnInit, AfterViewInit, EventEmitter } from "@angular/core";
import { Router } from "@angular/router";
import { Location } from "@angular/common";
import { ModalDirective } from "ng2-bootstrap";
import { NotificationsService } from "angular2-notifications";
export declare class FlowsListComponent implements AfterViewInit, OnInit {
    private _router;
    private flowListService;
    private _notifService;
    deleteConfirmModal: ModalDirective;
    app: any;
    pushed: EventEmitter<{}>;
    options: {
        position: string[];
        timeOut: number;
        lastOnBottom: boolean;
        maxStack: number;
        preventDuplicates: boolean;
    };
    flows: any;
    appData: AppModel;
    location: Location;
    currentFlow: any;
    constructor(_router: Router, flowListService: FlowsListService, location: Location, _notifService: NotificationsService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    getAppData(revert?: boolean): void;
    getTriggerTypeIcon(flow: IFlow): string;
    openFlow(id: string): void;
    createFlow(): void;
    deleteFlow(): void;
    deleteFlowConfirm(id: string, index: string): void;
    closeModalConfirm(): void;
    pushApp(): void;
    revertApp(): void;
    diagramTransactionsErroHandler(e: Error): void;
    ExtractSandboxIdFromUrl(url: any): string;
    diagramLaunchTCI(data: any): void;
}
