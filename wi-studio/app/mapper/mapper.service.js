"use strict";var __decorate=this&&this.__decorate||function(e,t,r,n){var s,i=arguments.length,a=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,n);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(a=(i<3?s(a):i>3?s(t,r,a):s(t,r))||a);return i>3&&a&&Object.defineProperty(t,r,a),a},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0});var core_1=require("@angular/core"),Observable_1=require("rxjs/Observable"),ReplaySubject_1=require("rxjs/ReplaySubject"),Subject_1=require("rxjs/Subject");require("rxjs/add/observable/of"),require("rxjs/add/observable/zip"),require("rxjs/add/operator/combineLatest"),require("rxjs/add/operator/distinctUntilChanged"),require("rxjs/add/operator/first"),require("rxjs/add/operator/map"),require("rxjs/add/operator/switchMap"),require("rxjs/add/operator/withLatestFrom");var tree_node_factory_service_1=require("./service/tree-node-factory.service"),tree_service_1=require("./service/tree.service"),reference_collector_1=require("./models/reference-collector"),array_mapping_1=require("./models/array-mapping"),index_1=require("../../common/index"),index_2=require("../../common/models/mapper/index"),MapperService=function(){function e(e,t){var r=this;this.nodeFactory=e,this.treeService=t,this.state=new ReplaySubject_1.ReplaySubject(1),this.contextSrc=new Subject_1.Subject,this.updatesSrc=new Subject_1.Subject,this.filterInputsSrc=new Subject_1.Subject,this.filterOutputsSrc=new Subject_1.Subject,this.filterFunctionsSrc=new Subject_1.Subject,this.selectInputSrc=new Subject_1.Subject,this.expressionChangeSrc=new Subject_1.Subject,this.updatesSrc.scan(function(e,t){return t(e)},{}).subscribe(this.state),this.filterInputsSrc.map(function(e){return function(t){var n=t.currentSelection?t.currentSelection.node:null;return Object.assign({},t,{inputs:r.applyTreeFilter(e,t.inputs,n)})}}).subscribe(this.updatesSrc),this.filterOutputsSrc.map(function(e){return function(t){return Object.assign({},t,{outputs:r.applyTreeFilter(e,t.outputs)})}}).subscribe(this.updatesSrc),this.filterFunctionsSrc.map(function(e){return function(t){return Object.assign({},t,{functions:r.applyTreeFilter(e,t.functions)})}}).subscribe(this.updatesSrc),this.setupContextChange(),this.setupExpressionChange(),this.setupSelectInput()}return e.prototype.setContext=function(e){this.contextSrc.next(e)},e.prototype.selectInput=function(e){this.selectInputSrc.next(e)},e.prototype.filterInputs=function(e){this.filterInputsSrc.next(e)},e.prototype.filterOutputs=function(e){this.filterOutputsSrc.next(e)},e.prototype.filterFunctions=function(e){this.filterFunctionsSrc.next(e)},e.prototype.expressionChange=function(e){this.expressionChangeSrc.next(e)},e.prototype.setupSelectInput=function(){var e=this;this.selectInputSrc.distinctUntilChanged().withLatestFrom(this.state,function(e,t){return{node:e,state:t}}).switchMap(function(t){var r=t.node,n=t.state;return r?Observable_1.Observable.zip([r],Observable_1.Observable.of(n.providers.outputsProvider.getSchema(n.context.getContextData())).map(function(t){return e.makeOutputContext(r,t,n.mappings)}),n.providers.functionsProvider.getFunctions().map(function(t){return{treeNodes:e.nodeFactory.fromFunctions(t),symbolTable:e.nodeFactory.fromFunctionsToSymbolTable(t)}})):Observable_1.Observable.of([r,{},[]])}).map(function(t){var r=t[0],n=t[1],s=t[2],i=null;if(r&&r.data){if(!n)return function(t){return Object.assign({},t,{currentSelection:{mappingKey:null},inputs:{nodes:e.treeService.selectNode(t.inputs.nodes,r?r.path:null)},functions:{filterTerm:"",nodes:[]},outputs:{filterTerm:"",nodes:[]}})};var a=n.mappings[n.mappingKey],o=Object.assign({},n.symbolTable,s.symbolTable);i={node:r,symbolTable:o,expression:a?a.expression:"",mappings:n.mappings,mappingKey:n.mappingKey,mapRelativeTo:n.mapRelativeTo};var p=e.parseExpression(i,n.mapRelativeTo);i.errors=p.errors&&p.errors.length>0?p.errors:null}return function(t){return Object.assign({},t,{currentSelection:i,inputs:{nodes:e.treeService.selectNode(t.inputs.nodes,r?r.path:null)},functions:{filterTerm:"",nodes:s.treeNodes},outputs:{filterTerm:"",nodes:n.tree}})}}).subscribe(this.updatesSrc)},e.prototype.setupContextChange=function(){var e=this;this.contextSrc.map(function(t){return function(r){var n=e.getInitialState();n.context=t,n.providers={functionsProvider:t.getMapFunctionsProvider(),outputsProvider:t.getScopedOutputSchemaProvider()};var s,i=t.getContextInputSchemaProvider();t.getMapping&&(s=t.getMapping()),s=s||{},n.mappings=s.mappings||{},n.hasMappings=e.hasMappings(n.mappings);var a=e.nodeFactory.flatMappings(n.mappings),o=i.getSchema(t.getContextData());return n.inputs.nodes=e.nodeFactory.fromJsonSchema(o,function(e,t,r){e.data.level=t;var n=a[r];return e.data.expression=n||null,e}),n.inputs.nodes.forEach(function(t){return e.treeService.updateTreeMappingStatus(t)}),n}}).subscribe(this.updatesSrc)},e.prototype.setupExpressionChange=function(){var e=this;this.expressionChangeSrc.withLatestFrom(this.state.map(function(e){return e.currentSelection&&e.currentSelection.node}).distinctUntilChanged(),function(e,t){return{expression:e,currentNode:t}}).distinctUntilChanged(function(e,t){return e.expression===t.expression&&e.currentNode===t.currentNode}).map(function(e){return e.expression}).map(function(t){return function(r){var n=r.currentSelection,s=n.node;s.data.expression=t,n.expression=t;var i=e.parseExpression(r.currentSelection,r.currentSelection.mapRelativeTo);return r.currentSelection.errors=i.errors&&i.errors.length>0?i.errors:null,e.updateMapping(n.mappings,n.mappingKey,t,i.structureDetails),r.hasMappings=e.hasMappings(r.mappings),e.treeService.propagateMappingStatusToParents(s),Object.assign({},r)}}).subscribe(this.updatesSrc)},e.prototype.updateMapping=function(e,t,r,n){var s=e[t],i=!r||!r.trim();return s?i?delete e[t]:(s.expression=r,s.parsedExpressionDetails=n):i||(e[t]={expression:r,mappings:{},parsedExpressionDetails:n}),e},e.prototype.hasMappings=function(e){return e&&Object.keys(e).some(function(t){var r=e[t];return!(!r.expression||!r.expression.trim())})},e.prototype.applyTreeFilter=function(e,t,r){var n=r&&r.data?r.data.path:null,s=this.treeService.applyFilter(t.nodes,e,n);return Object.assign({},t,{filterTerm:e,nodes:s})},e.prototype.parseExpression=function(e,t){var r=!1,n=e.expression||"",s=(new index_1.ExpressionParser).parse(n),i=s.getParseTree().getTree(),a=[],o=null;if(i){var p=index_2.NodeFactory.createNode(i),c=new index_2.ValidatorReporter,u=new reference_collector_1.ReferenceCollector(t),l=new index_2.ValidatorVisitor(e.symbolTable,c,u);p.accept(l),o={functionReferences:u.getFunctionReferences(),memberReferences:u.getMemberReferences()}}else{var f=s.getErrors();f&&f.length<=0&&(r=!0,a=a.concat(f.map(function(e){return{message:e.getErrorMessage(),location:{startOffset:0,endOffset:n.length-1}}})))}return{errors:a,structureDetails:o,hasSyntaxErrors:r,hasSemanticErrors:!1}},e.prototype.makeOutputContext=function(e,t,r){var n=this,s=this.treeService.extractArrayParents(e),i=r,a=function(e){return e.isForEach},o=e.path,p=s&&s.length>0,c=!1,u=this.extractLinkedOutputArrayPaths(s,r),l=null;if(p){var f=s[s.length-1];c=(u=this.extractLinkedOutputArrayPaths(s,r))&&u.length>0&&u.some(function(e){return a(e)}),o=this.makeRelativeNodePath(e,f);var d=f.data.expression||"";if(!c||!d.trim())return null;c&&(l=u.slice().reverse().find(function(e){return a(e)})),i=this.getSubMappings(s.concat(e),i)}return{mappings:i,tree:this.nodeFactory.fromJsonSchema(t,function(t,r,s){var i="array"===t.dataType;if(l&&0===t.path.indexOf(l.fullLinkedPath)&&(t.snippet=n.makeRelativeNodePath(t,{path:l.fullLinkedPath})),"array"===e.dataType){var a=i?t.snippet:"";t.snippet=array_mapping_1.ArrayMappingHelper.applyExpressionForEach(a)}return t}),mappingKey:o,mapRelativeTo:l&&l.fullLinkedPath,symbolTable:this.nodeFactory.fromJsonSchemaToSymbolTable(t)}},e.prototype.extractLinkedOutputArrayPaths=function(e,t){if(!e||e.length<=0||!t)return[];var r=e.slice(),n=r.shift(),s=r?t[n.path]:null,i=function(e){return!e.expression||!e.expression.trim()};if(!s||i(s))return[];var a=n,o=r.shift(),p=[],c=array_mapping_1.ArrayMappingHelper.processExpressionForEach(s.expression);for(c.node=n,c.fullLinkedPath=s.parsedExpressionDetails.memberReferences[0],p.push(c);s&&o;){var u=this.makeRelativeNodePath(o,a);if((s=s.mappings?s.mappings[u]:null)&&!i(s)){(c=array_mapping_1.ArrayMappingHelper.processExpressionForEach(s.expression)).node=o;var l=s.parsedExpressionDetails&&s.parsedExpressionDetails.memberReferences;c.fullLinkedPath=l?s.parsedExpressionDetails.memberReferences[0]:u,p.push(c)}a=o,o=r.shift()}return p},e.prototype.getSubMappings=function(e,t){var r=this;return e.slice(0).reverse().map(function(e,t,n){var s=n[t+1];return s?r.makeRelativeNodePath(e,s):e.path}).reverse().reduce(function(e,t,r,n){return n[r+1]&&(e.mappings[t]||(e.mappings[t]={expression:"",mappings:{}}),e=e.mappings[t]),e},{mappings:t}).mappings},e.prototype.processArrayMapExpression=function(e){return array_mapping_1.ArrayMappingHelper.processExpressionForEach(e)},e.prototype.makeRelativeNodePath=function(e,t){return"$"+e.path.slice(t.path.length)},e.prototype.getInitialState=function(){return{context:null,hasMappings:!1,currentSelection:null,mappings:{},inputs:{filterTerm:null,nodes:[]},outputs:{filterTerm:null,nodes:[]},functions:{filterTerm:null,nodes:[]}}},e}();MapperService=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[tree_node_factory_service_1.TreeNodeFactoryService,tree_service_1.TreeService])],MapperService),exports.MapperService=MapperService;