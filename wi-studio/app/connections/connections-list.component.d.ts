import { ConnectionsService } from "./../shared/services/connectionsService";
import { OnInit } from "@angular/core";
import { WindowRef } from "../shared/services/windowRefService";
import { Router, ActivatedRoute } from "@angular/router";
import { SalesforceoAuthService } from "../shared/services/salesforceoAuth";
import { ModalDirective } from "ng2-bootstrap";
export declare class ConnectionsListComponent implements OnInit {
    private connectionService;
    private _window;
    private _router;
    private _activatedRoute;
    private salesforceoAuthService;
    deleteConnectionsConfirmation: ModalDirective;
    className: string;
    fontName: string;
    connectionType: string;
    activeConnection: any;
    connectionDisplayString: string;
    connections: any;
    redirectedToAddNewConnection: boolean;
    userName: string;
    description: string;
    api_version: string;
    identityURL: string;
    clientID: string;
    clientSecret: string;
    endpointURL: string;
    appUsingThisConnection: Array<{}>;
    connectionID: string;
    connectionSearchText: string;
    connectionErrors: string;
    activeConnectionId: string;
    activeConnectionType: string;
    headerDeleteConnection: string;
    activeConnectionUsedinApps: boolean;
    baseLocationhRef: string;
    sfIconUrl: string;
    marketoIconUrl: string;
    constructor(connectionService: ConnectionsService, _window: WindowRef, _router: Router, _activatedRoute: ActivatedRoute, salesforceoAuthService: SalesforceoAuthService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    getConnectionCredentials(connectionType: any, connectionObj: any): void;
    getClassNameByConnectionType(connectionType: string): string;
    redirectToAddNewConnection(): void;
    confirmConnectionsDelete(connectionId: any, connectionType: any): void;
    closeDeleteConnectionsModal(): void;
    deleteConnection(connectionId: any, connectionType: any): void;
    editConnection(connectionId: any, connectionType: any): void;
    clearConnectionError(): void;
    getConnectionSelectedClass(connectionId: string): string;
    getConnectorIconSrc(category: any): string;
}
