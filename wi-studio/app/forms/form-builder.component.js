"use strict";var __decorate=this&&this.__decorate||function(e,t,i,o){var n,a=arguments.length,r=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,o);else for(var s=e.length-1;s>=0;s--)(n=e[s])&&(r=(a<3?n(r):a>3?n(t,i,r):n(t,i))||r);return a>3&&r&&Object.defineProperty(t,i,r),r},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0});var core_1=require("@angular/core"),wi_contrib_service_1=require("../contrib/wi-contrib.service"),contribution_observable_1=require("../../common/models/contribution_observable"),app_model_1=require("../../common/models/app/app.model"),flows_1=require("../../common/models/app/flows"),task_model_1=require("../../common/models/app/task.model"),rxjs_extensions_1=require("../../common/rxjs-extensions"),form_control_1=require("./providers/form.control"),categories_provider_1=require("./providers/categories.provider"),lodash=require("lodash"),map_function_lookup_1=require("../mapper/service/map.function.lookup"),map_context_validator_1=require("../mapper/service/map.context.validator"),map_output_schema_provider_1=require("../mapper/service/map.output.schema.provider"),map_input_schema_provider_1=require("../mapper/service/map.input.schema.provider"),map_parser_1=require("../mapper/service/map.parser"),messaging_1=require("../../common/services/messaging"),mapper_context_1=require("../mapper/service/mapper.context"),auto_complete_provider_1=require("../mapper/service/auto.complete.provider"),constants_1=require("../../common/constants"),DEBUG=!0,FormBuilderComponent=function(){function e(e,t,i,o,n,a,r){var s=this;this.contribService=e,this.functionsLookup=t,this.contextValidator=i,this.outputSchema=o,this.inputSchema=n,this.mappingpparser=a,this.autoCompleteProvider=r,this.taskFieldValueChanged=new core_1.EventEmitter,this.categories=[],this.componentReady=!1,this.contribValidated=[],this.subject=new rxjs_extensions_1.Subject,this.showInfo=!1,this.subject.debounceTime(1500).subscribe(function(e){s.taskFieldValueChanged.emit(s.app)})}return e.prototype.ngOnInit=function(){this.isComponentReady()&&(this.initialize(),this.selectCategory(this.categories[0],!0),this.contribExec(),this.validateForm())},e.prototype.ngOnChanges=function(e){this.componentReady&&e.task&&this.ngOnInit()},e.prototype.ngAfterViewInit=function(){this.componentReady=!0},e.prototype.setControls=function(){this.formGenerator=new form_control_1.FormControlGenerator(this.categories),this.form=this.formGenerator.categoriesGroup,this.fields=this.formGenerator.fieldsCollection},e.prototype.setCategories=function(){var e=new categories_provider_1.CategoriesProvider(this.task);this.categories=e.categories},e.prototype.initialize=function(){this.setCategories(),this.setControls()},e.prototype.contribExec=function(){var e=this;try{var t=this.task.handler.settings.concat(this.task.settings),i=[],o=constants_1.DEFAULT_TASK_CATEGORY;this.task.display&&this.task.display.category?(o=this.task.display.category,this.task.s3Prefix&&(o=this.task.s3Prefix+"/"+o)):this.task.s3Prefix&&(o=this.task.s3Prefix+"/Default"),o+="/"+this.task.name;var n=this.contribService.getContributionService(o),a=n.getType();if(n)if("Provider"===a){for(p=0;p<t.length;p++)!function(o){var a=n.getFieldProvider(t[o].name);a&&function(o){var n=e.getProxy();n.changelist=["","Path"],n.appId=e.app.id,i.push(contribution_observable_1.ContributionObservable.eval(a,a.getFieldValue,null,n).map(function(e){null!==e&&("object"!=typeof e?"complex_object"===t[o].type?(t[o].value={},t[o].value.value=e):t[o].value=e:t[o].allowed=e)}))}(o);var r=n.getValidationProvider(t[o].name);r&&function(o){var n=e.getProxy();n.changelist=["","Path"],n.appId=e.app.id,i.push(contribution_observable_1.ContributionObservable.eval(r,r.validate,null,n).map(function(e){null!==e&&(t[o].display||(t[o].display={}),t[o].display.readonly=e.isReadOnly(),t[o].display.valid=e.isValid(),t[o].display.visible=e.isVisible())}))}(o)}(p);var r=this.task.outputs.concat(this.task.inputs);if(void 0!==r)for(p=0;p<r.length;p++)!function(t){var o=n.getFieldProvider(r[t].name);o&&function(t){var n=e.getProxy();n.changelist=["","Path"],n.appId=e.app.id,i.push(contribution_observable_1.ContributionObservable.eval(o,o.getFieldValue,null,n).map(function(e){null!==e&&("object"!=typeof e?"complex_object"===r[t].type?(r[t].value={},r[t].value.value=e):r[t].value=e:r[t].allowed=e)}))}(t);var a=n.getValidationProvider(r[t].name);a&&function(t){var o=e.getProxy();o.changelist=["",""],o.appId=e.app.id,i.push(contribution_observable_1.ContributionObservable.eval(a,a.validate,null,o).map(function(e){null!==e&&(r[t].display||(r[t].display={}),r[t].display.readonly=e.isReadOnly(),r[t].display.valid=e.isValid(),r[t].display.visible=e.isVisible())}))}(t)}(p)}else{var s=this.getProxy();s.changelist=["","Path"],s.appId=this.app.id;for(p=0;p<t.length;p++)!function(e){!function(o){i.push(contribution_observable_1.ContributionObservable.eval(n,n.value,null,t[e].name,s).map(function(e){null!==e&&("object"!=typeof e?"complex_object"===t[o].type?(t[o].value={},t[o].value.value=e):t[o].value=e:t[o].allowed=e)}))}(e),function(o){i.push(contribution_observable_1.ContributionObservable.eval(n,n.validate,null,t[e].name,s).map(function(e){null!==e&&(t[o].display||(t[o].display={}),t[o].display.readonly=e.isReadOnly(),t[o].display.valid=e.isValid(),t[o].display.visible=e.isVisible())}))}(e)}(p);for(var l=this.task.outputs.concat(this.task.inputs),p=0;p<l.length;p++)!function(e){!function(t){i.push(contribution_observable_1.ContributionObservable.eval(n,n.value,null,l[e].name,s).map(function(e){null!==e&&("object"!=typeof e?"complex_object"===l[t].type?(l[t].value={},l[t].value.value=e):l[t].value=e:l[t].allowed=e)}))}(e),function(t){i.push(contribution_observable_1.ContributionObservable.eval(n,n.validate,null,l[e].name,s).map(function(e){null!==e&&(l[t].display||(l[t].display={}),l[t].display.readonly=e.isReadOnly(),l[t].display.valid=e.isValid(),l[t].display.visible=e.isVisible())}))}(e)}(p)}rxjs_extensions_1.Observable.merge.apply(rxjs_extensions_1.Observable,i).toArray().subscribe(function(e){})}catch(e){}},e.prototype.getProxy=function(){return this.task.type,lodash.cloneDeep(this.task)},e.prototype.genContext=function(){var e=this.app.getTaskNode(this.flow._id,this.task.id);if(e){var t=new Map;t.app=this.app,t.flow=this.flow,t.node=e,t.functionLookup=this.functionsLookup,t.contextValidator=this.contextValidator,t.outputSchema=this.outputSchema,t.inputSchema=this.inputSchema,t.expressionParser=this.mappingpparser,t.messaging=new messaging_1.AppMessaging,t.mapping=this.task.inputMappings,this.mapperContext=new mapper_context_1.MapperContext(t),this.autoCompleteProvider.getRecommendations(this.mapperContext,"",1).subscribe(function(e){})}},e.prototype.selectCategory=function(e,t){this.category!==e&&(this.category=e,this.currentControls=this.form.controls[this.category.title],t||this.validateForm(),this.genContext())},e.prototype.validateForm=function(){var e=this;this.fields[this.category.title]&&this.fields[this.category.title].filter(function(t){return!e.contribValidated.includes(t.name)}).forEach(function(t){return e.validateFormControl(t,e.currentControls)}),this.contribValidated=[]},e.prototype.validateFormControl=function(e,t){e.validate(),e.hasErrors&&e.visible?t.controls[e.name].setValidators(function(){return{valid:!1}}):t.controls[e.name].clearValidators(),t.controls[e.name].updateValueAndValidity()},e.prototype.isComponentReady=function(){return!lodash.isUndefined(this.app)&&!lodash.isUndefined(this.flow)&&!lodash.isUndefined(this.task)},e.prototype.emitValueChange=function(){this.contribExec(),this.validateForm(),this.subject.next(this.app)},e.prototype.mappingsChanged=function(e){this.task.inputMappings=e,this.emitValueChange()},e.prototype.fieldValueChanged=function(e){this.emitValueChange()},e.prototype.toggleInfo=function(){this.showInfo=!this.showInfo},e}();__decorate([core_1.Input(),__metadata("design:type",app_model_1.AppModel)],FormBuilderComponent.prototype,"app",void 0),__decorate([core_1.Input(),__metadata("design:type",flows_1.Flow)],FormBuilderComponent.prototype,"flow",void 0),__decorate([core_1.Input(),__metadata("design:type",task_model_1.FlowDiagramTask)],FormBuilderComponent.prototype,"task",void 0),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],FormBuilderComponent.prototype,"taskFieldValueChanged",void 0),FormBuilderComponent=__decorate([core_1.Component({selector:"app-form-builder",moduleId:module.id,template:'\n        <div class="form-container" *ngIf="categories.length > 0">\n          <div class="ta-sidebar">\n            <ng-container *ngFor="let cat of categories">\n              <div *ngIf="cat.visible" (click)="selectCategory(cat)" [ngClass]="{active: cat === category}">\n                {{cat.title}}\n              </div>\n            </ng-container>\n\n            \x3c!--<dd style="font-weight: normal; padding: 20px; background: #e3f0ff; letter-spacing: 0;">\n              <small>Form validation status: {{form._status}}</small>\n              <button type="submit" class="btn btn-default btn-xs btn-block" (click)="onSubmit()" [disabled]="!form.valid">Save</button>\n            </dd>--\x3e\n          </div>\n\n          <div class="ta-form">\n            <div class="property-pages-tab-content">\n              <form (ngSubmit)="onSubmit()" [formGroup]="form" novalidate>\n                <ng-container [ngSwitch]="category.title">\n\n                  <ng-container *ngSwitchCase="\'Input\'">\n                    <tibco-mapper [context]="mapperContext" (mappingsChange)="mappingsChange($event)"></tibco-mapper>\n                  </ng-container>\n\n                  <ng-container *ngSwitchCase="\'Output\'">\n                    <tree-properties [task]="task"></tree-properties>\n                  </ng-container>\n\n                  <ng-container *ngSwitchDefault>\n                    \x3c!--<button class="btn btn-xs infoBtn" type="button" (click)="toggleInfo()">Show fields data</button>--\x3e\n                    <ng-container *ngFor="let field of fields[category.title]">\n                      <div class="form-placer-container" *ngIf="field.visible" [ngClass]="{ \'row\': showInfo }">\n                        <div class="form-placer" [ngClass]="{ \'col-xs-5\': showInfo }">\n                          <div class="form-placer-left">\n                            <app-form-placer [category]="category" [form]="form.controls[category.title]" [field]="field" (fieldValueChanged)="fieldValueChanged($event)"></app-form-placer>\n                          </div>\n                          <div class="form-placer-right field-description-container">\n                            <div class="field-description-hint"></div>\n                            <div class="field-description-text">{{field.description}}</div>\n                          </div>\n                        </div>\n                        <div class="col-xs-6" *ngIf="showInfo">\n                          <pre style="font-size: 9px">{{field.taskField | json}}</pre>\n                        </div>\n                      </div>\n                    </ng-container>\n                  </ng-container>\n\n                </ng-container>\n              </form>\n            </div>\n          </div>\n        </div>\n    ',styleUrls:["../canvas/styles/canvas.temporary.css","styles/forms.css"]}),__metadata("design:paramtypes",[wi_contrib_service_1.ContribService,map_function_lookup_1.FunctionsLookup,map_context_validator_1.MapContextValidator,map_output_schema_provider_1.ScopedOutputSchemaProvider,map_input_schema_provider_1.ContextInputSchemaProvider,map_parser_1.MappingParser,auto_complete_provider_1.AutoCompleteProvider])],FormBuilderComponent),exports.FormBuilderComponent=FormBuilderComponent;