"use strict";var __extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])};return function(t,o){function i(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(i.prototype=o.prototype,new i)}}(),__decorate=this&&this.__decorate||function(e,t,o,i){var r,n=arguments.length,s=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,o,i);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(s=(n<3?r(s):n>3?r(t,o,s):r(t,o))||s);return n>3&&s&&Object.defineProperty(t,o,s),s},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0});var core_1=require("@angular/core"),field_grid_checkbox_renderer_1=require("./field.grid.checkbox.renderer"),field_grid_checkbox_component_1=require("./field.grid.checkbox.component"),field_base_component_1=require("../field.base/field.base.component"),lodash=require("lodash"),FormFieldGridComponent=function(e){function t(){var t=e.call(this)||this;return t.valueChanged=new core_1.EventEmitter,t.isRowsSelected=!1,t.countGridChecked=0,t.displayDeleteParamConfirmModal=!1,t.errorsFound=!1,t.gridOptions={rowSelection:"multiple",editType:"fullRow",suppressMovableColumns:!0,rowHeight:35,headerHeight:35},t}return __extends(t,e),t.prototype.ngOnInit=function(){this.value=this.field.value,this.schema=this.field.taskField.display.schema,this.gridOptions.rowData=this.createRowData(),this.gridOptions.columnDefs=this.createColumnDefs()},t.prototype.ngAfterViewInit=function(){this.updateGridSize(),this.countGridChecked=this.countGridChecked===10*this.gridOptions.columnDefs.length-1?0:this.countGridChecked},t.prototype.ngAfterViewChecked=function(){this.countGridChecked<10*this.gridOptions.columnDefs.length&&(this.updateGridSize(),this.countGridChecked++)},t.prototype.updateGridSize=function(){this.errorsFound||(this.gridOptions.api.sizeColumnsToFit(),this.gridOptions.api.softRefreshView())},t.prototype.checkForBoolean=function(e){return 2===e.length&&(e.indexOf(!0)>-1||e.indexOf("true")>-1)&&(e.indexOf(!1)>-1||e.indexOf("false")>-1)},t.prototype.createColumnDefs=function(){var e=[],t=JSON.parse(this.schema);if(t.items&&t.items.properties)for(var o in t.items.properties)if(o){var i={};if(i.headerName=o,i.field=o,i.editable=!0,"pathparams"===this.field.name.toLowerCase()&&(i.editable=!1),t.items.properties[o].type.enum)if(this.checkForBoolean(t.items.properties[o].type.enum))i.cellRendererFramework=field_grid_checkbox_renderer_1.CheckboxRendererComponent,i.cellEditorFramework=field_grid_checkbox_component_1.GridCheckboxComponent;else{i.cellEditor="select",i.cellEditorParams={values:[]};for(var r=0;r<t.items.properties[o].type.enum.length;r++)i.cellEditorParams.values.push(t.items.properties[o].type.enum[r])}e.push(i)}return e},t.prototype.createRowData=function(){try{if(this.value){for(var e=[],t=lodash.cloneDeep(JSON.parse(this.value)),o=0;o<t.length;o++)lodash.get(t[o],"visible",!0)&&e.push(lodash.cloneDeep(t[o]));return this.errorsFound=!1,e}}catch(e){this.errorsFound=!0,"object"==typeof(t=this.field.value)&&(t=JSON.stringify(t))}return[]},t.prototype.onCellValueChanged=function(e){this.setModelValue()},t.prototype.add=function(){this.gridOptions.api.addItems([{parameterName:"",type:"string",repeating:"false",required:"false",isEditable:!0}])},t.prototype.delete=function(){for(var e=this.gridOptions.api.getSelectedNodes(),t=e.length-1;t>=0;t--)e[t].data.isEditable||e.splice(t,1);this.gridOptions.api.removeItems(e),this.setModelValue(),this.closeParamModalConfirm()},t.prototype.getRowData=function(){var e=[];if(this.gridOptions.api.forEachNode(function(t){return e.push(t.data)}),this.value)for(var t=lodash.cloneDeep(JSON.parse(this.value)),o=0;o<t.length;o++)lodash.isUndefined(t[o].visible)||t[o].visible||e.push(lodash.cloneDeep(t[o]));return JSON.stringify(e)},t.prototype.onRowEditStart=function(e){!1===e.node.data.isEditable&&this.gridOptions.api.stopEditing()},t.prototype.onRowValueChanged=function(e){this.setModelValue()},t.prototype.rowSelected=function(e){e.node.data.isEditable||e.node.setSelected(!1),this.isRowsSelected=!1,this.gridOptions.api.getSelectedNodes().length>0&&(this.isRowsSelected=!0)},t.prototype.deleteParamConfirm=function(){this.displayDeleteParamConfirmModal=!0},t.prototype.closeParamModalConfirm=function(){this.displayDeleteParamConfirmModal=!1},t.prototype.setModelValue=function(){this.field.value=this.getRowData(),this.value=this.field.value,this.valueChanged.emit(this.field.value)},t}(field_base_component_1.FormFieldBaseComponent);__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],FormFieldGridComponent.prototype,"valueChanged",void 0),FormFieldGridComponent=__decorate([core_1.Component({selector:"form-field-grid",moduleId:module.id,templateUrl:"field.grid.component.html",styleUrls:["field.grid.component.css"]}),__metadata("design:paramtypes",[])],FormFieldGridComponent),exports.FormFieldGridComponent=FormFieldGridComponent;